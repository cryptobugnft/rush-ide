{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["window","$","short_acct","tx_pending","CONFIG","ABI","account","nftcontract","defSymbol","totalGasLimit","walletBalanceAPI","scannerAPI","balanceAPI","resultAPICall","CONFIGWhitelist","stakingnftcontract","rewardcontract","nitrocontract","nftlevelcontract","stakingnft_address","nitroboost_address","scannercontract","web3","localStorage","getItem","rewardInDetail","vaultSelected","amtNitro","isLoading","isRendering","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleWindowSizeChange","setState","width","innerWidth","state","addEventListener","removeEventListener","isMobile","connectwallet","_connectwallet","apply","arguments","asyncToGenerator","_regeneratorRuntime","mark","_callee","configResponse","accounts","networkId","abiResponse","abiWhitelist","sWallBal","wrap","_context","prev","next","ethereum","fetch","headers","Content-Type","Accept","sent","json","Web3","send","eth","getAccounts","request","method","MAINNET","ID","TESTNET","SYMBOL","GAS_LIMIT","API","BALANCE","WALLET","ABIFetch","TOKENREWARD","MAINDAPP","STAKING","NITROBOOST","RUSHLEVEL","LEVELING","SCANNER","TESTDAPP","onGoingNotif","document","getElementById","style","WalletBalance","innerHTML","APICall","listNFTFilter","stakeVaults","LoadVaultInfo","setInterval","RewardInquiry","setItem","confirm","t0","console","log","stop","VaultRewardToken","_x","_VaultRewardToken","_callee2","delegate","vaultrewarder","rewardToken","_rewardcontract","_context2","REWARDER","methods","abrupt","_LoadVaultInfo","_callee3","tbl","thd","_tr","_th1","_th2","counter_vault","_tbody","_vault","_rewardSymbol","_tbody_tr","_tbody_td1","short_vault","_tbody_td2","_span1","_span2","_context3","createElement","className","appendChild","scope","Vault","active","tokenReward","symbol","vaultName","length","substring","class","reqBooster","utils","fromWei","rewardRate","RefreshCollection","_RefreshCollection","_callee4","nftCol","_context4","value","listNFT","_x2","_x3","_APICall","_callee5","theURL","apiResponse","jsonParsedContents","_context5","APIBalanceCall","_x4","_x5","_x6","_APIBalanceCall","_callee6","_account","_CA","_context6","replace","_x7","_WalletBalance","_callee7","earnedrwd","rewards","_context7","result","Number","toFixed","claimVault","_x8","_claimVault","_callee8","_vaultId","_tkIDs","balanceOfOwner","j","_tkID","_context8","ERC721","nftAddress","balanceOf","tokenOfOwnerByIndex","nftStake","owner","push","claim","from","refreshDAppView","modifyVault","_x9","_x10","_modifyVault","_callee10","_vaultContract","tab_container","i","_contractAddress","_vId","_context10","UnstakeMenuControl","type","contractAddress","getVaultId","renderNFT","_x11","_onGoingNotif","_callee11","msg","btnConnect","img","_context11","hideCover","ex","setAttribute","showCover","unstakeVault","_x12","_unstakeVault","_callee12","_context12","unstake","GetNFTLevel","_x13","_x14","_GetNFTLevel","_callee13","nftLevel","_context13","getNFTLevel","concat","_RewardInquiry","_callee14","balanceOfVault","_symbol","contractAdress","divPend","_pendingRewards","_pend2","_stakeCount2","earned","_stakeCount","_pend","objNFTPend","objNFTLvl","_nitroStakeRemaining","_result","nitroID","remain","_nitroEquipped","_multipower","_powerFloat","nftLvlBonus","_lvlFloat","_glowNum","seconds","d","h","m","s","remainingBurn","_context14","includes","toUpperCase","pendingRewardByAccount","String","split","pendingReward","nitroStakeRemaining","getEquippedNitro","getNitroPower","parseFloat","getLevelBonus","getRareType","Math","floor","t1","t2","_x15","_x16","_x17","_UnstakeMenuControl","_callee15","btnBack","btnClaim","btnUnstake","_btnBack","_btnClaim","_btnUnstake","_context15","display","classList","add","removeAttribute","remove","_x20","_stakeVaults","_callee18","DivContainer","usrVaultCount","usrCurrVault","tokenIds","tkns","_j","_i","nftName","_j2","tokenMetadataURI","tokenMetadata","_context18","getStakeInVaultAccount","Array","name","tokenURI","startsWith","then","response","_callee17","cardVault","cardVaultCard","cardVaultFront","imgNFT","vid_source","img_src","cardVaultDetails","cardH4","cardSpan","cardVaultBack","_tbl","_attrdiv","nft_dtl","_nftName","_symbl","_supply","_tr2","cardButtonClaim","cardButtonUnstake","cardButtonModify","_context17","id","color","totalSupply","onclick","_x21","_x22","_x23","_x24","_listNFT","_callee19","filterList","userNFTHold","btnStakeAll","btnStakeSelected","key","ctr","_i2","_context19","keys","NFT","done","ADDRESS","t3","t4","t5","t6","t7","ShowNFTError","t8","_x25","_x26","_x27","_ABIFetch","_callee20","_abi","_address","_contract","ABIResponse","ABIJSON","_context20","Contract","_x28","_listNFTFilter","_callee21","lstNFT","z_1","t_1","z","t","_context21","createTextNode","balance","fetchNFTImage","_x29","_x30","_x31","_x32","_fetchNFTImage","_callee22","tkID","_caller","_context22","_x33","_x34","_x35","_x36","_x37","_renderNFT","_callee24","isStaked","nftContainer","nftCard","nftTable","nftMedia","nftTD","nftLvl","nftChk","nftLbl","nftImg","nftAtt","nftAttTD","nftTxt1","nftTxt2","nftBtn","nftTxt3","_loop","_context24","_callee23","_imgFix","_context23","htmlFor","img_er","showPrompt","showPromptTransfer","UnstakeSelected","_UnstakeSelected","_callee27","_context27","ClaimThem","ClaimSelected","_ClaimSelected","_callee28","_context28","BackToCollection","_BackToCollection","_callee29","_context29","_x43","_ClaimThem","_callee30","_DivContainer","children","elements","child","tkIDs","nft","_context30","getElementsByTagName","checked","StakeAll","_StakeAll","_callee32","_isNFTAppr","address","_context32","nftApproveAll","isWhitelist","stake","stakeAny","StakeThem","_StakeThem","_callee33","_DivContainer2","_context33","_refreshDAppView","_callee34","_context34","_x48","_nftApproveAll","_callee35","_nftcontract","_context35","isApprovedForAll","setApprovalForAll","_x49","_isWhitelist","_callee36","_res","_context36","_x50","_ShowNFTError","_callee37","msgValue","curDiv","chk","lbl","objNFT","_context37","_showCover","_callee38","coverDiv","_context38","body","overflowY","append","SendNFT","_x51","_x52","_x53","_SendNFT","_callee39","nftAdd","destiAdd","_context39","safeTransferFrom","NitroAdd","_NitroAdd","_callee40","_DivContainer3","_nitroId","_context40","gasLimit","stakeNitro","_hideCover","_callee41","_context41","_x54","_x55","_showPromptTransfer","_callee42","text","callback","_nft","form","container","h6NFTAddy","txAdd","h6Caption","x","complete","_context42","onkeydown","placeholder","onsubmit","cancel","e","_x56","_x57","_showPrompt","_callee45","lastClass","_loop3","_context45","_callee44","nitCard","nitTable","nitTR","nitTD1","nitchk","nitlbl","nitTD2","nitAtt1","nitAtt2","nitAtt3","_context44","NitroMint","_x58","_NitroMint","_callee46","pID","totalCost","totalCostWei","_token","_tokencontract","_allow_int","_allow","_txRejected","apprAmt","_context46","getNitroPrice","toWei","getCryptotoken","allowance","parseInt","MAX_SAFE_INTEGER","approve","on","error","receipt","catch","mint","to","confirmationNumber","BtnSelected","_x59","_BtnSelected","_callee47","amt","_context47","react_default","a","fontFamily","fontWeight","fontSize","href","src","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","aria-current","ButtonGroup","size","boxShadow","Button","onClick","role","alt","Tabs","defaultActiveKey","Tab","eventKey","title","onChange","selected","borderRadius","marginLeft","Component","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App_0"],"mappings":"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","file":"static/js/main.ca547b35.chunk.js","sourcesContent":["import './App.css';\nimport { Button, ButtonGroup, Modal } from 'react-bootstrap';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { Component, createElement } from 'react';\n\nimport 'sf-font';\n\nimport Web3Modal from \"web3modal\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport Web3 from 'web3';\n\nimport { useEffect } from \"react\"\nimport { accessListify } from 'ethers/lib/utils';\nimport { First } from 'react-bootstrap/esm/PageItem';\n\nimport NFTStakeABI from './RushNFTStaking.json';\nimport NitroBoostABI from './NitroBoost.json';\n\nimport { useWeb3React } from \"@web3-react/core\"  \n\nconst $ = window.$;\n\nvar tx_pending = false;\n\nvar CONFIG = null;\nvar ABI = null;\nvar account = null;\nvar nftcontract = null;\n\nvar defSymbol = null;\nvar totalGasLimit = null;\n\nvar walletBalanceAPI = null;\nvar scannerAPI = null;\nvar balanceAPI = null;\nvar resultAPICall = null;\nvar CONFIGWhitelist = null;\n\nvar nftName = null;\n\nvar stakingnftcontract = null;\nvar rewardcontract = null;\nvar nitrocontract = null;\nvar nftlevelcontract = null;\n\nvar stakingnft_address = null;\nvar nitroboost_address = null;\n\nvar scannercontract = null;\nvar scanneraddress = null;\n\nvar acc = localStorage.getItem(\"account\");\nvar short_acct;\n\nvar web3 = null;\nvar contract = null;\n\nvar rewardInDetail = false;\nvar vaultSelected = null;\n\nvar amtNitro = 0;\n\nvar isLoading = false;\nvar isRendering = false;\n\n/* var refresh_screen;\n$(function () {\n  refresh_screen = function (_text) {\n    $(\".loader\").fadeOut(1000);\n    $(\".content\").fadeIn(1000);\n  }\n}); */\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      width: window.innerWidth,\n    };\n\n  }\n\n  componentWillMount() {\n    window.addEventListener('resize', this.handleWindowSizeChange);\n  }\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n  handleWindowSizeChange = () => {\n    this.setState({ width: window.innerWidth });\n  };\n\n  componentDidUpdate(){\n    /* const connectWalletOnPageLoad = async () => {\n      if (localStorage.getItem('isWalletConnected') === 'true') {\n        try {\n          await activate(injected)\n          localStorage.setItem('isWalletConnected', true)\n        } catch (ex) {\n          console.log(ex)\n        }\n      }\n    }\n    connectWalletOnPageLoad() */\n  }\n  \n \n  render() {\n    const { width } = this.state;\n    const isMobile = width <= 900;\n\n    let nftcost = '';\n  \n    const sleep = (milliseconds) => {\n      return new Promise(resolve => setTimeout(resolve, milliseconds))\n    }\n  \n    function delay() { \n      return new Promise(resolve => setTimeout(resolve, 300));\n    }\n\n    \n    async function connectwallet() {\n      try {\n        if (window.ethereum) {\n\n          const configResponse = await fetch(\"/config/config.json\", {\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Accept: \"application/json\",\n            },\n          });\n          CONFIG = await configResponse.json();\n\n          web3 = new Web3(window.ethereum);\n\n\n          await window.ethereum.send('eth_requestAccounts');\n          var accounts = await web3.eth.getAccounts();\n          account = accounts[0];\n\n          const networkId = await window.ethereum.request({\n            method: \"net_version\",\n          });\n\n          if ((networkId == CONFIG.MAINNET.ID) || (networkId == CONFIG.TESTNET.ID)) {\n\n            const abiResponse = await fetch(\"/config/abi.json\", {\n              headers: {\n                \"Content-Type\": \"application/json\",\n                Accept: \"application/json\",\n              },\n            });\n            ABI = await abiResponse.json();\n\n            var abiWhitelist = null;\n\n            if (networkId == CONFIG.MAINNET.ID) {\n              defSymbol = CONFIG.MAINNET.SYMBOL;\n              totalGasLimit = CONFIG.MAINNET.GAS_LIMIT;\n              scannerAPI = CONFIG.MAINNET.API;\n              balanceAPI = CONFIG.MAINNET.BALANCE;\n              walletBalanceAPI = CONFIG.MAINNET.WALLET;\n              rewardcontract = await ABIFetch(web3, ABI.TOKENREWARD.ABI, CONFIG.MAINDAPP.TOKENREWARD);\n              stakingnftcontract = await ABIFetch(web3, ABI.STAKING.ABI, CONFIG.MAINDAPP.STAKING);\n              nitrocontract = await ABIFetch(web3, ABI.NITROBOOST.ABI, CONFIG.MAINDAPP.NITROBOOST);\n              nftlevelcontract = await ABIFetch(web3, ABI.RUSHLEVEL.ABI, CONFIG.MAINDAPP.LEVELING);\n              scannercontract =  await ABIFetch(web3, ABI.SCANNER.ABI, CONFIG.MAINDAPP.SCANNER);\n              \n\n              stakingnft_address = CONFIG.MAINDAPP.STAKING;\n              nitroboost_address = CONFIG.MAINDAPP.NITROBOOST;  //.toUpperCase();\n              scanneraddress = CONFIG.MAINDAPP.SCANNER;\n\n              abiWhitelist = await fetch(\"/config/whitelisted.json\", {\n                headers: {\n                  \"Content-Type\": \"application/json\",\n                  Accept: \"application/json\",\n                },\n              });\n              CONFIGWhitelist = await abiWhitelist.json();\n\n            }\n            else if (networkId == CONFIG.TESTNET.ID) {\n              //console.log(\"API CALL\");\n\n              defSymbol = CONFIG.TESTNET.SYMBOL;\n              totalGasLimit = CONFIG.TESTNET.GAS_LIMIT;\n              scannerAPI = CONFIG.TESTNET.API;\n              balanceAPI = CONFIG.TESTNET.BALANCE;\n              walletBalanceAPI = CONFIG.TESTNET.WALLET;\n              rewardcontract = await ABIFetch(web3, ABI.TOKENREWARD.ABI, CONFIG.TESTDAPP.TOKENREWARD);\n              stakingnftcontract = await ABIFetch(web3, ABI.STAKING.ABI, CONFIG.TESTDAPP.STAKING);\n              nitrocontract = await ABIFetch(web3, ABI.NITROBOOST.ABI, CONFIG.TESTDAPP.NITROBOOST);\n              nftlevelcontract = await ABIFetch(web3, ABI.RUSHLEVEL.ABI, CONFIG.TESTDAPP.LEVELING);\n              scannercontract =  await ABIFetch(web3, ABI.SCANNER.ABI, CONFIG.TESTDAPP.SCANNER);\n \n              stakingnft_address = CONFIG.TESTDAPP.STAKING;\n              nitroboost_address = CONFIG.TESTDAPP.NITROBOOST;\n              scanneraddress = CONFIG.TESTDAPP.SCANNER;\n\n              abiWhitelist = await fetch(\"/config/testwhitelisted.json\", {\n                headers: {\n                  \"Content-Type\": \"application/json\",\n                  Accept: \"application/json\",\n                },\n              });\n              CONFIGWhitelist = await abiWhitelist.json();\n\n            }\n\n            onGoingNotif(\"\");\n\n            var sWallBal = document.getElementById(\"wallBal\");\n            sWallBal.style.width = \"100px\";\n            sWallBal.innerHTML = await WalletBalance(account);\n\n            resultAPICall = await APICall(account, scannerAPI);\n            /* console.log(\"scannerAPI\", scannerAPI);\n            console.log(\"resultAPICall\", resultAPICall); */\n\n            await listNFTFilter(resultAPICall);\n            //  await listNFT(account, 'unstaked-nft-container', resultAPICall, \"All\");\n            //document.getElementById(\"unstaked-nft-container\").innerHTML = \"\";\n\n            document.getElementById('unstaked-nft-container').innerHTML=\"\";\n            const DivContainer = document.getElementById('staked-nft-container');\n            DivContainer.innerHTML = \"\";\n            await stakeVaults('staked-nft-container');\n\n            await LoadVaultInfo();\n\n            var timer = setInterval(function () {\n              if (tx_pending==false){\n                RewardInquiry();\n              }\n            }, 5000);\n\n            localStorage.setItem('isWalletConnected', true)\n\n          }\n\n          else {\n            var z = window.confirm(\"Wrong network!\");\n          }\n\n        }\n      }\n      catch (ex) {\n        console.log('connectwallet - SeeError - ' + ex);\n      }\n    }\n\n    async function VaultRewardToken(delegate){\n      var vaultrewarder = await ABIFetch(web3, ABI.REWARDER.ABI, delegate); \n      var rewardToken = await vaultrewarder.methods.rewardToken().call(); \n      var _rewardcontract = await ABIFetch(web3, ABI.TOKENREWARD.ABI, rewardToken);\n      return _rewardcontract;\n    }\n\n    async function LoadVaultInfo(){\n      try{\n        var tbl = document.getElementById('tblvaultInfo');\n        tbl.innerHTML=\"\";\n\n        var thd = document.createElement('thead');\n        thd.className = \"thead-light\";\n        tbl.appendChild(thd);\n\n        var _tr = document.createElement('tr');\n        var _th1 = document.createElement('th');\n        _th1.scope = 'col';\n        _th1.innerHTML = 'Collection';\n        _tr.appendChild(_th1)\n\n        var _th2 = document.createElement('th');\n        _th2.scope = 'col';\n        _th2.innerHTML = 'Rewards Per Day';\n        _tr.appendChild(_th2)\n\n        thd.appendChild(_tr);\n\n        var counter_vault = 0;\n\n        var _tbody = document.createElement('tbody');\n        var _vault = await stakingnftcontract.methods.Vault(counter_vault).call();\n        while (_vault.active) { \n          var _rewardcontract;\n          if (_vault.delegate != stakingnft_address){\n            _rewardcontract = await VaultRewardToken(_vault.delegate); \n          }\n          else{\n            _rewardcontract = await ABIFetch(web3, ABI.TOKENREWARD.ABI, _vault.tokenReward);\n          }\n          var _rewardSymbol = await _rewardcontract.methods.symbol().call(); \n\n          var _tbody_tr = document.createElement('tr');\n\n          var _tbody_td1 = document.createElement('td');\n  \n          var short_vault = (_vault.vaultName.length > 20 ? _vault.vaultName.substring(0, 20) + \"...\" : _vault.vaultName);\n          _tbody_td1.innerHTML = short_vault; //_vault.vaultName;\n          _tbody_tr.appendChild(_tbody_td1);\n\n          var _tbody_td2 = document.createElement('td');\n          _tbody_td2.class='amount'; \n\n          \n          if (_vault.reqBooster == false){\n            //_tbody_tr.className=\"stakegoldeffect\";\n            _tbody_td1.className=\"textGlow\";  \n            _tbody_td2.className=\"textGlow\";  \n          }\n\n          var _span1 = document.createElement('span');\n          _span1.class = \"amount\";\n          _span1.innerHTML=Web3.utils.fromWei(_vault.rewardRate) + \" \";\n\n          var _span2 = document.createElement('span');\n          _span2.class = \"currency\";\n          _span2.innerHTML = _rewardSymbol;\n\n          _tbody_td2.appendChild(_span1);\n          _tbody_td2.appendChild(_span2);\n\n          _tbody_tr.appendChild(_tbody_td2);\n\n          _tbody.appendChild(_tbody_tr);\n\n          counter_vault += 1;\n          var _vault = await stakingnftcontract.methods.Vault(counter_vault).call();\n\n        }    \n        tbl.appendChild(_tbody);\n      }\n      catch(ex){\n        console.log(ex);\n      }\n\n\n    }\n \n\n    async function RefreshCollection() {      \n      if (account==null){\n        return;\n      }\n      var nftCol = document.getElementById(\"nftFilter\").value;\n\n      //console.log(\"RefreshCollection >> nftCol: \", nftCol);\n\n      resultAPICall = await APICall(account, scannerAPI);\n      await listNFT(account, 'unstaked-nft-container', resultAPICall, nftCol);\n    }\n\n    async function APICall(account, API) {\n      var theURL = API + \"=\" + account;\n      var apiResponse = await fetch(theURL);\n      var jsonParsedContents = await apiResponse.json();\n\n      return jsonParsedContents;\n    }\n\n    async function APIBalanceCall(_account, _CA, API) {\n      var theURL = API.replace('@CONTRACTADDRESS', _CA).replace('@ACCOUNT', _account);\n      var apiResponse = await fetch(theURL);\n      var jsonParsedContents = await apiResponse.json();\n\n      return jsonParsedContents;\n    }\n\n    async function WalletBalance(_account) {\n      var theURL = walletBalanceAPI.replace('@ACCOUNT', _account);\n      var apiResponse = await fetch(theURL);\n      var jsonParsedContents = await apiResponse.json();\n\n      var earnedrwd = Web3.utils.fromWei(jsonParsedContents.result);\n      var rewards = Number(earnedrwd).toFixed(3);\n\n      return '  ' + rewards + ' ' + defSymbol;\n    }\n\n    async function claimVault(_vaultId) {\n      try {\n        await onGoingNotif(\"Pending...\");\n\n        /* console.log(\"_vaultId: \", _vaultId); */\n        var _vault = await stakingnftcontract.methods.Vault(_vaultId).call();\n\n        var _tkIDs = [];\n\n        var nftcontract = await ABIFetch(web3, ABI.ERC721.ABI, _vault.nftAddress);        \n        var balanceOfOwner = await nftcontract.methods.balanceOf(stakingnft_address).call();\n        /* console.log('balanceOfOwner: ' + balanceOfOwner); */\n\n        for (let j = 0; j < balanceOfOwner; j++) {\n          var _tkID = await nftcontract.methods.tokenOfOwnerByIndex(stakingnft_address, j).call();\n          var _nftStakeInfo = await stakingnftcontract.methods.nftStake(_vaultId, _tkID).call();\n          if (_nftStakeInfo.owner == account) {\n            /* console.log(_tkID); */\n            _tkIDs.push(_tkID);\n          }\n        }\n\n        \n        /* resultAPICall = await APIBalanceCall(stakingnft_address, _vault.nftAddress, balanceAPI);\n        //console.log(resultAPICall);\n        for (let i = 0; i < resultAPICall.result; i++) {\n\n          var balanceOfOwner = await nftcontract.methods.balanceOf(stakingnft_address).call();\n          console.log('balanceOfOwner: ' + balanceOfOwner);\n\n          for (let j = 0; j < balanceOfOwner; j++) {\n            var _tkID = await nftcontract.methods.tokenOfOwnerByIndex(stakingnft_address, j).call();\n            var _nftStakeInfo = await stakingnftcontract.methods.nftStake(_vaultId, _tkID).call();\n            if (_nftStakeInfo.owner == account) {\n              console.log(_tkID);\n              _tkIDs.push(_tkID);\n            }\n          }\n        } */\n        /* console.log(_tkIDs); */\n\n        await stakingnftcontract.methods.claim(_vaultId, _tkIDs).send({ from: account });\n        await refreshDAppView();\n\n      }\n      catch (ex) {\n        console.log('claimVault');\n        console.log(ex);\n      }\n      await onGoingNotif(\"\");\n\n    }\n\n    async function backToStake() {\n      await stakeVaults('staked-nft-container');\n    }\n\n    async function modifyVault(_vaultId, _vaultContract) {\n      try {\n        await UnstakeMenuControl(true, true, true);\n\n        var tab_container = \"staked-nft-container\";\n        document.getElementById('staked-nft-container').innerHTML = \"\";\n\n        var _account = stakingnft_address;\n        resultAPICall = await APICall(_account, scannerAPI);\n\n        rewardInDetail = true;\n\n        for (let i = 0; i < resultAPICall.result.length; i++) {\n          if (resultAPICall.result[i].type == \"ERC-721\") {\n            var _contractAddress = resultAPICall.result[i].contractAddress;\n            vaultSelected = _contractAddress;\n            var _vId = await stakingnftcontract.methods.getVaultId(_contractAddress).call();\n            if ((_vaultId == _vId) && (_vaultContract == _contractAddress)) {\n              nftcontract = await ABIFetch(web3, ABI.ERC721.ABI, _contractAddress);\n              //await ShowNFTCard(tab_container, nftcontract, _contractAddress, _account, true);\n              await renderNFT(tab_container, nftcontract, _contractAddress, _account, true);\n              \n              break;\n            }\n          }\n        }\n      }\n      catch (ex) {\n        console.log(ex);\n      }\n    }\n\n\n    async function onGoingNotif(msg) {\n      var btnConnect = document.getElementById('btnConnect');\n      if (msg == \"\") {\n        try {\n          hideCover();\n          tx_pending=false;\n        }\n        catch (ex) {\n        }\n\n        short_acct = account.substring(0, 6) + \"....\" + account.substring(account.length - 4, account.length);\n        var img = document.createElement('img');\n        img.className = \"ml-3\";\n        img.setAttribute(\"src\", 'chef.svg');\n        //btnConnect.className = \"ml-3\";\n        btnConnect.innerHTML = short_acct;\n        btnConnect.appendChild(img);\n      }\n      else {\n        showCover();\n        btnConnect.innerHTML = \"\";\n        btnConnect.innerHTML = msg;\n        /* showLoading(); */\n      }\n    }\n\n    async function unstakeVault(_vaultId) {\n      try {\n        await onGoingNotif(\"Pending...\");\n\n        var _vault = await stakingnftcontract.methods.Vault(_vaultId).call();\n\n        var _tkIDs = [];\n        resultAPICall = await APIBalanceCall(stakingnft_address, _vault.nftAddress, balanceAPI);\n        nftcontract = await ABIFetch(web3, ABI.ERC721.ABI, _vault.nftAddress);\n\n        for (let i = 0; i < resultAPICall.result; i++) {\n          var _tkID = await nftcontract.methods.tokenOfOwnerByIndex(stakingnft_address, i).call();\n          var _nftStakeInfo = await stakingnftcontract.methods.nftStake(_vaultId, _tkID).call();\n          if (_nftStakeInfo.owner == account) {\n            _tkIDs.push(_tkID);\n          }\n        }\n        await stakingnftcontract.methods.unstake(_vaultId, _tkIDs).send({ from: account });\n        await refreshDAppView();\n      }\n      catch (ex) {\n        console.log('unstakeVault');\n        console.log(ex);\n      }\n      await onGoingNotif(\"\");\n    }\n\n    async function GetNFTLevel(_vaultId, _tkID){   \n      try{\n        var nftLevel = await nftlevelcontract.methods.getNFTLevel(_vaultId, _tkID).call(); \n        if (nftLevel != \"undefined\") {\n          return `Lv ${nftLevel}`;\n        }         \n      } \n      catch(ex){\n        return \"\";\n      }     \n    }\n\n    async function RewardInquiry() {\n      //console.log(\"isLoading:\", isLoading, \"isRendering:\", isRendering);\n      if (isLoading || isRendering){\n        return;\n      }\n      isLoading = true;\n\n      var _vaultId;\n      try {\n        var btnConnect = document.getElementById('btnConnect');\n        if (!btnConnect.innerHTML.includes(short_acct)) {\n          return;\n        }\n\n        var sWallBal = document.getElementById(\"wallBal\");\n        sWallBal.innerHTML = await WalletBalance(account);\n\n        //var _stakeCount = 0;\n        var _account = stakingnft_address;\n        resultAPICall = await APICall(_account, scannerAPI);\n\n        var balanceOfVault = 0;\n        var _symbol = await rewardcontract.methods.symbol().call();\n        if (rewardInDetail == false) {\n\n          for (let i = 0; i < resultAPICall.result.length; i++) {\n            if (resultAPICall.result[i].type == \"ERC-721\" && nitroboost_address.toUpperCase() != resultAPICall.result[i].contractAddress.toUpperCase()) {\n              var contractAdress = resultAPICall.result[i].contractAddress;\n              _vaultId = await stakingnftcontract.methods.getVaultId(contractAdress).call();\n\n              var divPend = document.getElementById(\"Pending\" + resultAPICall.result[i].contractAddress);\n\n              var _pendingRewards = 0;\n\n              if (divPend != null) {\n                nftcontract = await ABIFetch(web3, ABI.ERC721.ABI, resultAPICall.result[i].contractAddress);\n                balanceOfVault = await nftcontract.methods.balanceOf(_account).call();\n\n                var result = await stakingnftcontract.methods.pendingRewardByAccount(_vaultId, account).call();\n                const { 0: _pend, 1: _stakeCount} = result;\n\n                var earned = String(_pend).split(\",\")[0];\n                var earnedrwd = Web3.utils.fromWei(earned);\n                _pendingRewards = Number(earnedrwd).toFixed(2);\n\n                //Custom Reward Token\n                var _vault = await stakingnftcontract.methods.Vault(_vaultId).call();\n                if (_vault.delegate != stakingnft_address){\n                  var _rewardcontract = await VaultRewardToken(_vault.delegate);\n                  _symbol = await _rewardcontract.methods.symbol().call();  \n                }\n\n                divPend.innerHTML = `Total: ${_stakeCount} | <h6 class='pendingRewards'> Earn: ${_pendingRewards} ${_symbol} </h6>`;\n              }\n            }\n          }\n        }\n        else if (rewardInDetail == true) {\n          try {\n            nftcontract = await ABIFetch(web3, ABI.ERC721.ABI, vaultSelected);\n            _vaultId = await stakingnftcontract.methods.getVaultId(vaultSelected).call();\n            balanceOfVault = await nftcontract.methods.balanceOf(_account).call();\n            _pendingRewards = 0;\n            var _stakeCount = 0; \n\n              //Custom Reward Token\n              var _vault = await stakingnftcontract.methods.Vault(_vaultId).call();\n              if (_vault.delegate != stakingnft_address){\n                var _rewardcontract = await VaultRewardToken(_vault.delegate);\n                _symbol = await _rewardcontract.methods.symbol().call();  \n              }\n  \n            for (var j = 0; j < balanceOfVault; j++) {\n              var _tkID = await nftcontract.methods.tokenOfOwnerByIndex(_account, j).call();\n              var _nftStakeInfo = await stakingnftcontract.methods.nftStake(_vaultId, _tkID).call();\n              \n              if (_nftStakeInfo.owner == account) {\n                _stakeCount++;\n\n                var _pend = await stakingnftcontract.methods.pendingReward(_vaultId, _tkID).call();\n                var earned = String(_pend).split(\",\")[0];\n                var earnedrwd = Web3.utils.fromWei(earned);\n                var rewards = Number(earnedrwd).toFixed(4);\n                _pendingRewards = Number(rewards).toFixed(4);\n\n                const objNFTPend = document.getElementById(\"att\" + _vaultId + _tkID); \n                objNFTPend.innerHTML = \"\";\n                objNFTPend.innerHTML = \"Earn: \" + _pendingRewards + \" \" + _symbol;\n\n\n                var nftLevel = await GetNFTLevel(_vaultId, _tkID); \n                const objNFTLvl = document.getElementById(\"lvl\" + _vaultId + _tkID);\n                objNFTLvl.innerHTML = \"\";\n                objNFTLvl.innerHTML = nftLevel;\n  \n                var _nitroStakeRemaining;\n                try {\n                  const result = await stakingnftcontract.methods.nitroStakeRemaining(_vaultId, _tkID).call(); \n\n                  const { 0: nitroID, 1: limit, 2: remain } = result;\n                  _nitroStakeRemaining = remain;\n\n                  var _nitroEquipped;\n                  var _multipower; \n                  var _powerFloat;\n                  var nftLvlBonus;\n                  var _lvlFloat;\n\n                  _nitroEquipped = await stakingnftcontract.methods.getEquippedNitro(_vaultId, _tkID).call();\n                  if (_nitroEquipped > 0){\n                    _multipower = await stakingnftcontract.methods.getNitroPower(_vaultId, _nitroEquipped).call();\n                    _powerFloat = parseFloat(_multipower + '.00') / 100;\n                    nftLvlBonus = await nftlevelcontract.methods.getLevelBonus(_vaultId, _tkID).call();\n                    _lvlFloat = parseFloat(nftLvlBonus + '.00') / 100;\n                    _powerFloat = _powerFloat * _lvlFloat;\n\n\n                    if (_nitroStakeRemaining > 0) {\n                      var _glowNum = await nitrocontract.methods.getRareType(nitroID).call();\n\n                      var inSec = (_nitroStakeRemaining / 86400) * 24 * 60 * 60;\n\n                      var seconds = Number(inSec);\n                      var d = Math.floor(seconds / (3600 * 24));\n                      var h = Math.floor(seconds % (3600 * 24) / 3600);\n                      var m = Math.floor(seconds % 3600 / 60);\n                      var s = Math.floor(seconds % 60);\n\n                      var dDisplay = d > 0 ? d + (d == 1 ? \" day, \" : \" days, \") : \"\";\n                      var hDisplay = h > 0 ? h + (h == 1 ? \":\" : \":\") : \"\";\n                      var mDisplay = m > 0 ? m + (m == 1 ? \":\" : \":\") : \"\";\n                      var sDisplay = s > 0 ? s + (s == 1 ? \"\" : \"\") : \"\";\n                      var remainingBurn = dDisplay + hDisplay + mDisplay + sDisplay;\n\n\n                      document.getElementById(\"att2\" + _vaultId + _tkID).innerHTML = \"<span class='font-awesome-icons rocket'></span> \" + remainingBurn + ' left'\n                        + '</br> x' + _powerFloat.toFixed(2);\n                      document.getElementById(\"nft\" + _vaultId + \"|\" + _tkID).className = \"nftCard Equipped\" + _glowNum;\n\n                    }\n                    else {\n                      document.getElementById(\"att2\" + _vaultId + _tkID).innerHTML = 'x' + _powerFloat.toFixed(2);\n                    }\n\n                  }\n                  /* else{\n                    break;\n                  } */\n                  /* console.log(_powerFloat); */\n\n                  \n                }\n                catch (nitro_ex) {\n                  console.log(\"no nitro equip\", _vaultId, _tkID, _nitroStakeRemaining, nitro_ex);\n                }\n\n              }\n\n\n            }\n          }\n          catch (ex1) {\n            console.log(\"Error in RewardInquiry - Detailed: \", ex1);\n          }\n        }\n      }\n      catch (ex) {\n        console.log(\"Error on RewardInquiry: \", _vaultId);\n        console.log(ex); \n      }\n      isLoading = false;\n      return _stakeCount;\n    } \n\n    async function UnstakeMenuControl(btnBack, btnClaim, btnUnstake) {\n      var _btnBack = document.getElementById(\"btnBack\");\n      var _btnClaim = document.getElementById(\"btnClaimSelected\");\n      var _btnUnstake = document.getElementById(\"btnUnstakeSelected\");\n\n      if ((btnBack == false) && (btnClaim == false) && (btnUnstake == false)) {\n        document.getElementById(\"btnUnstakeMenu\").style.display = \"none\";\n      }\n      else {\n        document.getElementById(\"btnUnstakeMenu\").style.display = \"\";\n      }\n\n      if (btnBack == false) {\n        _btnBack.setAttribute(\"disabled\", \"disabled\");\n        _btnBack.classList.add(\"disabled\");\n      }\n      else {\n        _btnBack.removeAttribute('disabled');\n        _btnBack.classList.remove(\"disabled\");\n      }\n\n      if (btnClaim == false) {\n        _btnClaim.setAttribute(\"disabled\", \"disabled\");\n        _btnClaim.classList.add(\"disabled\");\n      }\n      else {\n        _btnClaim.removeAttribute('disabled');\n        _btnClaim.classList.remove(\"disabled\");\n      }\n\n      if (btnUnstake == false) {\n        _btnUnstake.setAttribute(\"disabled\", \"disabled\");\n        _btnUnstake.classList.add(\"disabled\");\n      }\n      else {\n        _btnUnstake.removeAttribute('disabled');\n        _btnUnstake.classList.remove(\"disabled\");\n      }\n    }\n\n    /* async function getStaked(vaultId){\n      var _account = stakingnft_address;\n      resultAPICall = await APICall(_account, scannerAPI);\n      for (let i = 0; i < resultAPICall.result.length; i++){\n        if (resultAPICall.result[i].type == \"ERC-721\" && nitroboost_address.toUpperCase() != resultAPICall.result[i].contractAddress.toUpperCase()) {\n          var contractAdress = resultAPICall.result[i].contractAddress;\n          var tknIds;\n          try{\n            tknIds = await nftcontract.methods.walletOfOwner(_account).call();\n            for (var j=0; j<tknIds.length; j++){\n              var _nftStakeInfo = await stakingnftcontract.methods.nftStake(vaultId, tknIds[j]).call().owner;\n              if (_nftStakeInfo == account) {\n                usrVaultCount += 1;\n              }\n            }\n          }\n          catch(ex){\n\n          }\n        }\n      }\n    } */\n\n    async function removeElement(arrayName, arrayElement) {\n      for (var i = 0; i < arrayName.length; i++) {\n        if (arrayName[i] == arrayElement)\n          arrayName.splice(i, 1);\n      }\n    }\n\n    async function stakeVaults(tab_container) {      \n      if (account == null) {\n        return;\n      }\n\n      //console.log(\"isRendering: \", isRendering);\n      if(isRendering){\n        return;\n      }\n      isRendering = true;\n      onGoingNotif(\"Rendering NFTs...\");\n\n      \n      var _account = stakingnft_address;\n      resultAPICall = await APICall(_account, scannerAPI);\n      //console.log(\"sonar result scan:\", resultAPICall);\n\n      await UnstakeMenuControl(false, false, false);\n\n      const DivContainer = document.getElementById(tab_container);\n      DivContainer.innerHTML = \"\";\n\n      /* console.log(width); */\n      if (width < 830) {\n        DivContainer.className = \"nft_card_view1\";\n      }\n      else if (width>=830 && width<1000){\n        DivContainer.className = \"nft_card_view2\";\n      }\n      else if (width>=1000 && width<1300){\n        DivContainer.className = \"nft_card_view3\";\n      }\n      else if(width>=1300){\n        DivContainer.className = \"nft_card_view4\";\n      }\n \n      rewardInDetail = false;\n      var usrVaultCount = 0;\n      var usrCurrVault = null;\n      var _vaultContract = null;\n      var tokenIds;\n\n      //Check Number of Vault Stake of user\n      //console.log(\"Check Number of Vault Stake of user\", resultAPICall.result.length);\n      for (let i = 0; i < resultAPICall.result.length; i++) {\n        if (resultAPICall.result[i].type == \"ERC-721\" && nitroboost_address.toUpperCase() != resultAPICall.result[i].contractAddress.toUpperCase()) {\n          //console.log(\"resultAPICall.result[\"+i+\"]\", resultAPICall.result[i]);\n\n          var contractAdress = resultAPICall.result[i].contractAddress;\n          var _vaultId = await stakingnftcontract.methods.getVaultId(contractAdress).call();\n          tokenIds = await scannercontract.methods.getStakeInVaultAccount(_vaultId, account).call();\n          nftcontract = await ABIFetch(web3, ABI.ERC721.ABI, contractAdress);\n\n          var tkns = new Array();\n          for (let j=0; j<tokenIds.length; j++){\n            if (tokenIds[j]>0){\n              tkns.push(tokenIds[j]);\n            }\n          }\n          tokenIds = tkns;\n          //console.log(_vaultId, tokenIds, account);\n          \n          if (tokenIds[0]>0){\n            usrVaultCount += 1;\n            usrCurrVault = _vaultId;\n            _vaultContract = contractAdress;\n            continue;\n          }\n\n          /* var tknIds;\n          try{\n            tknIds = await nftcontract.methods.walletOfOwner(_account).call();\n            //console.log(\"tknIds:\", tknIds);\n\n            for (var j=0; j<tknIds.length; j++){\n              var _nftStakeInfo = await stakingnftcontract.methods.nftStake(_vaultId, tknIds[j]).call();\n              console.log(\"_nftStakeInfo:\", _nftStakeInfo);\n\n              if (_nftStakeInfo.owner == account) {\n                usrVaultCount += 1;\n                usrCurrVault = _vaultId;\n                _vaultContract = contractAdress;\n                break;\n              }\n            }\n          }\n          catch(ex1){  \n\n            //OG Codes\n            var balanceOfVault = await nftcontract.methods.balanceOf(_account).call();\n\n            for (var j = 0; j < balanceOfVault; j++) {\n              var _tkID = await nftcontract.methods.tokenOfOwnerByIndex(_account, j).call();\n              var _nftStakeInfo = await stakingnftcontract.methods.nftStake(_vaultId, _tkID).call();\n              if (_nftStakeInfo.owner == account) {\n                usrVaultCount += 1;\n                usrCurrVault = _vaultId;\n                _vaultContract = contractAdress;\n                break;\n              }\n            }\n            //OG Codes\n          /* } */\n\n\n        }\n      }\n      //console.log(\"End Vault Init\");\n      //console.log(\"usrVaultCount:\", usrVaultCount);\n      \n\n      if (usrVaultCount == 1) {\n        rewardInDetail = true;\n        await modifyVault(usrCurrVault, _vaultContract);\n      }\n      else {\n\n        for (let i = 0; i < resultAPICall.result.length; i++) {\n          if (resultAPICall.result[i].type == \"ERC-721\" && nitroboost_address.toUpperCase() != resultAPICall.result[i].contractAddress.toUpperCase()) {\n\n            var contractAdress = resultAPICall.result[i].contractAddress;\n            var _vaultId = await stakingnftcontract.methods.getVaultId(contractAdress).call();\n            var _vaultInfo = await stakingnftcontract.methods.Vault(_vaultId).call();\n\n            if (_vaultInfo.active) {\n              nftcontract = await ABIFetch(web3, ABI.ERC721.ABI, contractAdress);\n              var nftName = await nftcontract.methods.name().call();\n              var balanceOfVault = await nftcontract.methods.balanceOf(_account).call();\n              var symbol = await rewardcontract.methods.symbol().call();\n\n              tokenIds = await scannercontract.methods.getStakeInVaultAccount(_vaultId, account).call();\n              var tkns = new Array();\n              for (let j=0; j<tokenIds.length; j++){\n                if (tokenIds[j]>0){\n                  tkns.push(tokenIds[j]);\n                }\n              }\n              tokenIds = tkns; \n\n              var _tkID = 0;\n              var _stakeCount = 0;\n              //var _nftHasWalletOfOwnerFunction;\n              /* try{\n                tknIds = await nftcontract.methods.walletOfOwner(_account).call();\n                balanceOfVault = tknIds.length;\n                _nftHasWalletOfOwnerFunction =true;\n              }\n              catch(ex1){\n                _nftHasWalletOfOwnerFunction =false;\n              } */\n\n              //console.log(tokenIds);\n              for (var j=0; j<tokenIds.length; j++) {\n              //for (var j = 0; j < balanceOfVault; j++) {\n\n                //console.log(\"_nftHasWalletOfOwnerFunction\", _nftHasWalletOfOwnerFunction);\n                /* if (_nftHasWalletOfOwnerFunction){\n                  _tkID = tknIds[j];\n                }\n                else{\n                  _tkID = await nftcontract.methods.tokenOfOwnerByIndex(_account, j).call();\n                } */\n                _tkID = tokenIds[j];\n                //console.log(\"_tkID = tokenIds[j]\", _tkID);\n                if (_tkID==0) {\n                  continue;\n                }\n\n\n                //var _nftStakeInfo = await stakingnftcontract.methods.nftStake(_vaultId, _tkID).call();\n\n                //if (_nftStakeInfo.owner == account) {\n                  //_stakeCount++;\n\n                  //if (_stakeCount > 0) {\n                    let tokenMetadataURI = await nftcontract.methods.tokenURI(_tkID).call();\n                    if (tokenMetadataURI.startsWith(\"ipfs://\")) {\n                      tokenMetadataURI = `https://ipfs.io/ipfs/${tokenMetadataURI.split(\"ipfs://\")[1]}`;\n                    }\n                    else if (tokenMetadataURI.startsWith(\"https://gateway.pinata.cloud/ipfs/\")) {\n                      tokenMetadataURI = tokenMetadataURI.replace(`https://gateway.pinata.cloud/ipfs/`, ``);\n                      tokenMetadataURI = `https://ipfs.io/ipfs/${tokenMetadataURI}${1}`;\n                    }\n                    var tokenMetadata = await fetch(tokenMetadataURI).then((response) => response.json());\n\n                    (async function () {\n                      const cardVault = document.createElement('div');\n                      cardVault.className = \"vault_container\";\n                      cardVault.id = contractAdress;\n                      cardVault.value = _vaultId;\n\n                      const cardVaultCard = document.createElement('div');\n                      cardVaultCard.className = \"vault_card\";\n                      if (isMobile) {\n                        cardVaultCard.className = \"vault_card-mobile\";\n                      }\n\n                      const cardVaultFront = document.createElement('div');\n                      cardVaultFront.className = \"vault_front parent\";\n                      if (isMobile){\n                        cardVaultFront.className = \"vault_front-mobile parent\";\n                      }\n\n                      var imgNFT\n                      if (tokenMetadata[\"image\"].includes(\"mp4\")) {\n                        imgNFT = document.createElement('video');\n\n                        const vid_source = document.createElement(\"source\");\n\n                        if (tokenMetadata[\"image\"].startsWith(\"ipfs://\")) {\n                          vid_source.setAttribute(\"src\", `https://ipfs.io/ipfs/${tokenMetadata[\"image\"].split(\"ipfs://\")[1]}`);\n                        }\n                        else {\n                          vid_source.setAttribute(\"src\", tokenMetadata[\"image\"]);\n                        }\n                        vid_source.setAttribute(\"type\", \"video/mp4\");\n                        imgNFT.appendChild(vid_source);\n                      }\n                      else {\n                        imgNFT = document.createElement('img');\n                        imgNFT.setAttribute(\"src\", '.\\loading.gif');\n\n                        var img_src = tokenMetadata[\"image\"];\n                        imgNFT.setAttribute(\"src\", img_src);\n                      }\n                      imgNFT.setAttribute(\"alt\", contractAdress);\n\n                      const cardVaultDetails = document.createElement('div');\n                      cardVaultDetails.className = \"vault_details\";\n\n                      const cardH4 = document.createElement('h5');\n                      cardH4.style.color = \"white\";\n                      cardH4.className = \"VaultName\";\n                      cardH4.innerHTML = (nftName.length > 15 ? nftName.substring(0, 10) + \"...\" : nftName) + \" Vault\";\n\n                      const cardSpan = document.createElement('span');\n                      cardSpan.className = \"spanX\"\n                      cardSpan.id = \"Pending\" + contractAdress;\n                      cardSpan.style.color = \"white\";\n                      cardSpan.innerHTML = \"\";\n\n                      cardVaultDetails.appendChild(cardH4);\n                      cardVaultDetails.appendChild(cardSpan);\n\n                      cardVaultFront.appendChild(imgNFT);\n                      cardVaultFront.appendChild(cardVaultDetails);\n\n                      const cardVaultBack = document.createElement('div');\n                      cardVaultBack.className = \"vault_back\";\n\n                      var _tbl = document.createElement('table');\n                      var _tr = document.createElement('tr');\n                      _tbl.appendChild(_tr);\n\n                      var _attrdiv = document.createElement('div');\n                      var nft_dtl = document.createElement('h6');\n                      var _nftName = await nftcontract.methods.name().call();\n                      var _symbl = await nftcontract.methods.symbol().call();\n                      var _supply = await nftcontract.methods.totalSupply().call();\n                      nft_dtl.innerHTML = \"Name: \" + _nftName + '</br>Symbol: ' + _symbl + '</br>Total Supply: ' + _supply;\n                      _attrdiv.appendChild(nft_dtl);\n                      _tbl.appendChild(_attrdiv);   \n\n                      var _tr2 = document.createElement('tr');\n                      _tr2.className=\"vault_back_att\";\n\n                      const cardButtonClaim = document.createElement('a');\n                      cardButtonClaim.style.color = \"white\";\n                      cardButtonClaim.innerHTML = \"Claim All \";\n                      cardButtonClaim.className = \"back_attr\";\n                      cardButtonClaim.onclick = function () { claimVault(cardVault.value); }\n\n                      const cardButtonUnstake = document.createElement('a');\n                      cardButtonUnstake.style.color = \"white\";\n                      cardButtonUnstake.innerHTML = \"Unstake All \";\n                      cardButtonUnstake.className = \"back_attr\";\n                      cardButtonUnstake.onclick = function () { unstakeVault(cardVault.value); }\n\n                      const cardButtonModify = document.createElement('a');\n                      cardButtonModify.style.color = \"white\";\n                      cardButtonModify.innerHTML = \"Modify\";\n                      cardButtonModify.className = \"back_attr\";\n                      cardButtonModify.onclick = function () { modifyVault(cardVault.value, cardVault.id); }\n\n                      _tr2.appendChild(cardButtonClaim);\n                      _tr2.appendChild(cardButtonUnstake);\n                      _tr2.appendChild(cardButtonModify);\n\n                      _tbl.appendChild(_tr2);  \n                      cardVaultBack.appendChild(_tbl);  \n\n\n                      //cardVaultBack.appendChild(cardButtonClaim);\n                      //cardVaultBack.appendChild(cardButtonUnstake);\n                      //cardVaultBack.appendChild(cardButtonModify);\n\n                      cardVaultCard.appendChild(cardVaultFront);\n                      cardVaultCard.appendChild(cardVaultBack);\n\n                      cardVault.appendChild(cardVaultCard);\n\n                      DivContainer.appendChild(cardVault);\n                    })();\n                  //}\n                  break;\n                //}\n              }\n            }\n          }\n        }\n      } \n      isRendering = false;\n      onGoingNotif(\"\");\n\n    }\n\n    async function listNFT(_account, tab_container, jsonParsedContents, filterList) {\n      try {\n        var userNFTHold = 0;\n        var btnStakeAll = document.getElementById(\"btnStakeAll\");\n        var btnStakeSelected = document.getElementById(\"btnStakeSelected\");\n\n        document.getElementById(tab_container).innerHTML = \"\";\n\n        //console.log(\"filterList: \", filterList);\n\n        if (filterList == \"All\" || filterList == \"All Owned NFT\") {\n          btnStakeAll.setAttribute('disabled', 'disabled');\n          btnStakeSelected.setAttribute('disabled', 'disabled');\n\n          //Populate List NFT \n          if (jsonParsedContents != null) {\n            for (var key in CONFIGWhitelist.NFT) {\n              for (let i = 0; i < jsonParsedContents.result.length; i++) {\n                if (jsonParsedContents.result[i].type == \"ERC-721\") {\n                  if (CONFIGWhitelist.NFT[key].ADDRESS == jsonParsedContents.result[i].contractAddress) {\n                    nftcontract = await ABIFetch(web3, ABI.ERC721.ABI, jsonParsedContents.result[i].contractAddress);\n                    //serNFTHold = userNFTHold + (await ShowNFTCard(tab_container, nftcontract, jsonParsedContents.result[i].contractAddress, _account));  //myHoldNFT\n                    userNFTHold = userNFTHold + (await renderNFT(tab_container, nftcontract, jsonParsedContents.result[i].contractAddress, _account));  //myHoldNFT\n                    break;\n                  }\n                }\n              }\n            }\n\n            //All other ERC-721\n            var ctr;\n            for (let i = 0; i < jsonParsedContents.result.length; i++) {\n              if (jsonParsedContents.result[i].type == \"ERC-721\" && nitroboost_address.toUpperCase() != jsonParsedContents.result[i].contractAddress.toUpperCase()) {\n                ctr = 0;\n                for (var key in CONFIGWhitelist.NFT) {\n                  if (CONFIGWhitelist.NFT[key].ADDRESS != jsonParsedContents.result[i].contractAddress) {\n                    ctr++;\n                  }\n                }\n                if (ctr >= CONFIGWhitelist.NFT.length) {\n                  nftcontract = await ABIFetch(web3, ABI.ERC721.ABI, jsonParsedContents.result[i].contractAddress);\n                  //userNFTHold = userNFTHold + (await ShowNFTCard(tab_container, nftcontract, jsonParsedContents.result[i].contractAddress, _account));  //myHoldNFT\n                  userNFTHold = userNFTHold + (await renderNFT(tab_container, nftcontract, jsonParsedContents.result[i].contractAddress, _account));  //myHoldNFT\n                  \n                }\n              }\n            }\n          }\n        }\n        else {\n          nftcontract = await ABIFetch(web3, ABI.ERC721.ABI, filterList);\n\n          //console.log(await nftcontract.methods.name().call());\n\n          //userNFTHold = userNFTHold + (await ShowNFTCard(tab_container, nftcontract, filterList, _account));  //myHoldNFT\n          userNFTHold = userNFTHold + (await renderNFT(tab_container, nftcontract, filterList, _account));  //myHoldNFT\n          btnStakeAll.removeAttribute('disabled');\n          btnStakeSelected.removeAttribute('disabled');\n        }\n\n        if (userNFTHold == 0) {\n          ShowNFTError(\"NO NFT SCANNED.\");\n        }\n      }\n\n      catch (ex) {\n        console.log('listNFT - SeeError - ' + ex);\n        ShowNFTError(ex);\n      }\n    }\n\n    async function ABIFetch(web3, _abi, _address) {\n      var _contract;\n      var ABIResponse;\n\n      ABIResponse = await fetch(_abi, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n        },\n      });\n      const ABIJSON = await ABIResponse.json();\n      _contract = new web3.eth.Contract(ABIJSON, _address);\n      return _contract;\n    }\n\n    async function listNFTFilter(jsonParsedContents) {\n      var lstNFT = document.getElementById(\"nftFilter\");\n      lstNFT.innerHTML = \"\";\n\n      for (let i = 0; i < jsonParsedContents.result.length; i++) {\n        if (i == 0) {\n          var z_1 = document.createElement(\"option\");\n          z_1.setAttribute(\"value\", \"All\");\n          var t_1 = document.createTextNode(\"All Owned NFT\");\n\n          z_1.appendChild(t_1);\n          lstNFT.appendChild(z_1);\n        }\n\n        if (jsonParsedContents.result[i].type == \"ERC-721\" && jsonParsedContents.result[i].balance > 0 && nitroboost_address.toUpperCase() != jsonParsedContents.result[i].contractAddress.toUpperCase()) {\n          var z = document.createElement(\"option\");\n          z.setAttribute(\"value\", jsonParsedContents.result[i].contractAddress);\n\n          var t = document.createTextNode(jsonParsedContents.result[i].name + \": \" + jsonParsedContents.result[i].balance);\n          z.appendChild(t);\n\n          lstNFT.appendChild(z);\n        }\n\n      }\n    }\n\n    async function fetchNFTImage(nftcontract, _account, tkID, _caller) {\n      var tokenMetadata = null;\n      try {\n        let tokenMetadataURI = await nftcontract.methods.tokenURI(tkID).call(); \n        if (tokenMetadataURI.startsWith(\"ipfs://\")) {\n          tokenMetadataURI = `https://ipfs.io/ipfs/${tokenMetadataURI.split(\"ipfs://\")[1]}`;\n        }\n        else if (tokenMetadataURI.startsWith(\"https://gateway.pinata.cloud/ipfs/\")) {\n          tokenMetadataURI = tokenMetadataURI.replace(`https://gateway.pinata.cloud/ipfs/`, ``);\n          tokenMetadataURI = `https://ipfs.io/ipfs/${tokenMetadataURI}${tkID}`;\n        }\n        tokenMetadata = await fetch(tokenMetadataURI).then((response) => response.json());\n        //console.log(tokenMetadata);\n      }\n      catch (ex) {\n        tokenMetadata = \"https://raw.githubusercontent.com/cryptobugnft/nitro/main/tank/InvalidURI.json\";\n        console.log(tokenMetadata);\n        console.log('Caller - ' + _caller);\n        console.log(ex);\n      }\n\n      return tokenMetadata;\n\n    }\n\n    async function renderNFT(tab_container, nftcontract, contractAdress, _account, isStaked){\n      var nftName = await nftcontract.methods.name().call();\n      var balanceOfOwner = await nftcontract.methods.balanceOf(_account).call();  \n\n      var tokenIds;\n      if (isStaked){        \n        var _vaultId = await stakingnftcontract.methods.getVaultId(contractAdress).call();\n        tokenIds = await scannercontract.methods.getStakeInVaultAccount(_vaultId, account).call();        \n        var tkns = new Array();\n        for (let j=0; j<tokenIds.length; j++){\n          if (tokenIds[j]>0){\n            tkns.push(tokenIds[j]);\n          }\n        }\n        tokenIds = tkns;\n\n        balanceOfOwner = tokenIds.length;\n      }\n\n\n      var nftContainer = document.getElementById(tab_container); \n      var nftCard;\n        var nftTable;\n      var nftMedia;\n        var nftTD;\n          var nftLvl;\n          var nftChk;\n          var nftLbl;\n          var nftImg;\n      var nftAtt;\n        var nftAttTD;\n          var nftTxt1;\n          var nftTxt2;\n          var nftBtn;\n          var nftTxt3;\n      try{\n\n        if (width>=400 && width<850){\n          nftContainer.className = \"nft_card_view2\";\n        }\n        else if (width>=850 && width<1000){\n          nftContainer.className = \"nft_card_view3\";\n        }\n        else if (width>=1000 && width<1300){\n          nftContainer.className = \"nft_card_view4\";\n        }\n        else if(width>=1300){\n          nftContainer.className = \"nft_card_view5\";\n        }\n\n        onGoingNotif(\"Loading...\");\n        for (let i = 0; i < balanceOfOwner; i++){\n          (async function (){\n            var tkID;\n\n            if (isStaked){\n              if (tokenIds[i]==0){\n                return;\n              }\n              tkID = tokenIds[i];\n            }\n            else{\n              tkID = await nftcontract.methods.tokenOfOwnerByIndex(_account, i).call();\n            }\n                        \n            const tokenMetadata = await fetchNFTImage(nftcontract, _account, tkID, 'renderNFT');\n            const _vaultId = await stakingnftcontract.methods.getVaultId(contractAdress).call();\n            \n            //var _nftStakeInfo = await stakingnftcontract.methods.nftStake(_vaultId, tkID).call();\n\n            /* var staking_owner = await stakingnftcontract.methods.owner().call();\n            console.log(\"contract owner: \",staking_owner);\n            if (staking_owner == account) {\n            }\n            else{\n              if (isStaked) {\n                if (_nftStakeInfo.owner != account) {\n                  return;\n                }\n              }  \n            } */\n            /* if (isStaked) {            \n              if (_nftStakeInfo.owner != account) {\n                return;\n              }\n            } */\n\n            nftCard = document.createElement(\"div\");\n            nftCard.id = \"nft\" + _vaultId + \"|\" + tkID;\n            nftCard.className = \"nftCard\";\n\n            nftTable = document.createElement(\"TABLE\");\n            nftTable.setAttribute(\"id\", \"tbl\" + _vaultId + tkID);\n            nftCard.appendChild(nftTable);\n\n            nftMedia = document.createElement(\"TR\");\n            nftMedia.className = \"nftMedia\";\n            nftTable.appendChild(nftMedia);\n\n            nftTD = document.createElement(\"TD\");\n            nftTD.className = \"nftTD\";\n            nftMedia.appendChild(nftTD);\n\n            nftLvl = document.createElement('h6');\n            nftLvl.id = \"lvl\" + _vaultId + tkID;\n            nftLvl.className = \"nftLvl\";\n            nftLvl.innerHTML = \"\"\n            nftTD.appendChild(nftLvl);\n            /* nftMedia.appendChild(nftLvl); */\n\n            nftChk = document.createElement(\"INPUT\");\n            nftChk.setAttribute(\"type\", \"checkbox\");\n            nftChk.id = contractAdress + \"_\" + tkID;\n            nftChk.className = \"nftChk\";\n            nftTD.appendChild(nftChk);\n            /* nftMedia.appendChild(nftChk); */\n \n            nftLbl = document.createElement(\"LABEL\");\n            nftLbl.className = \"parent\";\n            nftLbl.htmlFor = nftChk.id;\n            nftTD.appendChild(nftLbl);\n            /* nftMedia.appendChild(nftLbl); */\n\n            if (tokenMetadata[\"image\"].includes(\"mp4\")) {\n              nftImg = document.createElement('video');\n              const vid_source = document.createElement(\"source\");\n              if (tokenMetadata[\"image\"].startsWith(\"ipfs://\")) {\n                vid_source.setAttribute(\"src\", `https://ipfs.io/ipfs/${tokenMetadata[\"image\"].split(\"ipfs://\")[1]}`);\n              }\n              else {\n                vid_source.setAttribute(\"src\", tokenMetadata[\"image\"]);\n              }\n              vid_source.setAttribute(\"type\", \"video/mp4\");\n              nftImg.appendChild(vid_source);\n            }\n            else {\n              try{\n                nftImg = document.createElement('img');\n                var _imgFix = tokenMetadata[\"image\"];\n                //console.log(_imgFix);\n                if (_imgFix.startsWith(\"ipfs://\")) {\n                  _imgFix = `https://ipfs.io/ipfs/${_imgFix.replace(\"ipfs://\", '')}`\n                }\n                else if (_imgFix.startsWith(\"https://cattos.mypinata.cloud/ipfs/\")) {\n                  _imgFix = _imgFix.replace(`https://cattos.mypinata.cloud/ipfs/`, `https://gateway.ipfs.io/ipfs/`);\n                  //console.log(\"supposed to be fix\", _imgFix);\n                }\n                nftImg.setAttribute(\"src\", _imgFix);\n              }\n              catch(img_er){\n                console.log(img_er);\n                nftImg.setAttribute(\"src\", \"hidden.jpg\");\n              }\n            }\n            nftImg.setAttribute(\"alt\", \"Error loading image\");\n            nftImg.className=\"nftImg\";\n            nftLbl.appendChild(nftImg);\n             \n            nftAtt = document.createElement(\"TR\");\n            nftAtt.className = \"nftAtt\";\n            nftTable.appendChild(nftAtt);\n\n            nftAttTD = document.createElement(\"TD\");\n            nftAttTD.className = \"nftAttTD\";\n            nftAtt.appendChild(nftAttTD);\n\n \n            nftTxt1 = document.createElement('h6');\n            nftTxt1.id = \"stk\" + _vaultId + tkID;\n            nftTxt1.className = \"nftTxt1\";\n            nftTxt1.innerHTML = (nftName.length > 20 ? nftName.substring(0, 20) : nftName) + ` #` + (tkID.length > 5 ? tkID.substring(1, 5) : tkID);\n            nftAttTD.appendChild(nftTxt1);\n            /* nftAtt.appendChild(nftTxt1); */\n\n            nftTxt2 = document.createElement('h6');\n            nftTxt2.id = \"att\" + _vaultId + tkID;\n            nftTxt2.className = \"nftTxt2\";\n            nftTxt2.innerHTML = \"\";\n            nftAttTD.appendChild(nftTxt2);\n            /* nftAtt.appendChild(nftTxt2); */\n\n            nftBtn = document.createElement('button');\n            nftBtn.type = \"button\";\n            nftBtn.className = \"nftBtn\";\n            nftBtn.style = \"{{ fontFamily: 'SF Pro Display' }}\";\n            nftBtn.innerHTML = \"+\";\n\n            if (isStaked){              \n              nftBtn.onclick = function () {\n                showPrompt(_vaultId + \"|\" + tkID, function (value) {\n                });\n              };\n            }\n            else{              \n              nftBtn.onclick = function () {\n                showPromptTransfer(_vaultId + \"|\" + tkID + \"|\" + contractAdress, function (value) {\n                });\n              };\n            }\n\n            nftAttTD.appendChild(nftBtn);\n            /* nftAtt.appendChild(nftBtn); */\n\n           /*  var _i = document.createElement(\"i\");\n            _i.className=\"fa-regular fa-rocket-launch\";\n            nftAttTD.appendChild(_i); */\n \n            nftTxt3 = document.createElement('h6');\n            nftTxt3.id = \"att2\" + _vaultId + tkID;\n            nftTxt3.className = \"nftTxt3\";\n            nftTxt3.innerHTML = \"\";\n            nftAttTD.appendChild(nftTxt3);\n            /* nftAtt.appendChild(nftTxt3); */\n\n            nftContainer.appendChild(nftCard);\n\n          })();\n        }\n        onGoingNotif(\"\");\n\n\n\n      }\n      catch(ex){\n        ShowNFTError(nftcontract + \" - Error on reading token URI\");\n        console.log(\"renderNFT\",ex);\n      }\n    }\n\n    async function ShowNFTCard(tab_container, nftcontract, contractAdress, _account, isStaked) {\n      var nftName = await nftcontract.methods.name().call();\n      var balanceOfOwner = await nftcontract.methods.balanceOf(_account).call();\n      var DivContainer = document.getElementById(tab_container);\n      var nftcontainer;\n      var objNFTPend;\n      var objNFTNitroEquip;\n      var btnPowerUp;\n      var imgNFT;\n\n      var mismatchNFT;\n      //console.log(\"ShowNFTCard>>\", nftName);\n\n      try {\n        for (let i = 0; i < balanceOfOwner; i++) {\n          (async function () {\n            try {\n              var tkID = await nftcontract.methods.tokenOfOwnerByIndex(_account, i).call();\n              const tokenMetadata = await fetchNFTImage(nftcontract, _account, tkID, 'ShowNFTCard');\n              var _vaultId = await stakingnftcontract.methods.getVaultId(contractAdress).call();\n              var _checkAdd = stakingnftcontract.methods.Vault(_vaultId).call();\n              \n              mismatchNFT = false;\n              if (_checkAdd.nftAddress != contractAdress) {\n                mismatchNFT = true;\n              }\n\n              var _nftStakeInfo = await stakingnftcontract.methods.nftStake(_vaultId, tkID).call();\n              if (isStaked) {\n                if (_nftStakeInfo.owner != account) {\n                  return;\n                }\n              }\n\n              nftcontainer = document.createElement(\"div\");\n              nftcontainer.id = \"nftcontainer_\" + _vaultId + \"_\" + tkID;\n              //nftcontainer.className = \"parent nftcontainer\";\n              if (isMobile) {\n                nftcontainer.className = \"nftcontainer-mobile\";\n              }\n              else {\n                nftcontainer.className = \"nftcontainer\";\n              }\n\n              const nftdetail = document.createElement('div');\n              nftdetail.id = \"nftdetail_\" + _vaultId + \"_\" + tkID;\n              nftdetail.className = \"nftdetail\";\n\n              const chk = document.createElement(\"INPUT\");\n              chk.setAttribute(\"type\", \"checkbox\");\n              chk.id = contractAdress + \"_\" + tkID;\n              chk.className = \"unlisted\";\n\n              const lbl = document.createElement(\"LABEL\");\n              lbl.className = \"parent\";\n              lbl.htmlFor = chk.id;\n\n              if (tokenMetadata[\"image\"].includes(\"mp4\")) {\n                imgNFT = document.createElement('video');\n              }\n              else {\n                imgNFT = document.createElement('img');\n              }\n              if (isMobile) {\n                imgNFT.className = \"image-mobile\";\n              }\n              else {\n                imgNFT.className = \"image\";\n              }\n\n              if (tokenMetadata[\"image\"].includes(\"mp4\")) {\n\n                const vid_source = document.createElement(\"source\");\n                if (tokenMetadata[\"image\"].startsWith(\"ipfs://\")) {\n                  vid_source.setAttribute(\"src\", `https://ipfs.io/ipfs/${tokenMetadata[\"image\"].split(\"ipfs://\")[1]}`);\n                }\n                else {\n                  vid_source.setAttribute(\"src\", tokenMetadata[\"image\"]);\n                }\n\n                vid_source.setAttribute(\"type\", \"video/mp4\");\n                imgNFT.appendChild(vid_source);\n              }\n              else {\n                var _imgFix = tokenMetadata[\"image\"];\n                if (_imgFix.startsWith(\"ipfs://\")) {\n                  _imgFix = `https://ipfs.io/ipfs/${_imgFix.replace(\"ipfs://\", '')}`\n                }\n                imgNFT.setAttribute(\"src\", _imgFix);\n              }\n\n\n              imgNFT.setAttribute(\"alt\", \"Error loading image\");  //contractAdress);\n\n              \n              var _level = await nftlevelcontract.methods.getNFTLevel(_vaultId, tkID).call();\n              if(_level>0){\n                _level = \"(Lv\" + _level + \")\"; \n              }\n              else{\n                _level=\"\";\n              }\n\n              const objNFT = document.createElement('h6');\n              objNFT.id = \"stk\" + _vaultId + tkID;\n              objNFT.className = \"h6nftName\";\n              objNFT.innerHTML = (nftName.length > 20 ? nftName.substring(1, 20) : nftName) + ` #` + (tkID.length > 5 ? tkID.substring(1, 5) : tkID) + _level;\n\n              lbl.appendChild(imgNFT);\n              nftcontainer.appendChild(chk);\n              nftcontainer.appendChild(lbl);\n\n              nftdetail.appendChild(objNFT);\n              nftcontainer.appendChild(nftdetail);\n\n              /* Begin - For Staked NFT Only */\n              if (isStaked) {\n\n\n                objNFTPend = document.createElement('h6');\n                objNFTPend.className = \"h6pendingEarn\";\n                objNFTPend.id = \"pend\" + _vaultId + tkID;\n                objNFTPend.innerHTML = \"\";\n\n                objNFTNitroEquip = document.createElement('h6');\n                objNFTNitroEquip.className = \"h6nitroEquip\";\n                objNFTNitroEquip.id = \"nitro\" + _vaultId + tkID;\n                objNFTNitroEquip.innerHTML = \"\";\n\n                btnPowerUp = document.createElement('button');\n                btnPowerUp.type = \"button\";\n                btnPowerUp.className = \"powerUpButton\";\n                btnPowerUp.style = \"{{ fontFamily: 'SF Pro Display' }}\";\n                btnPowerUp.innerHTML = \"+\";\n\n                btnPowerUp.onclick = function () {\n                  showPrompt(_vaultId + \"|\" + tkID, function (value) {\n                  });\n                };\n                nftdetail.appendChild(objNFTNitroEquip);\n                nftcontainer.appendChild(objNFTPend);\n                nftcontainer.appendChild(btnPowerUp);\n              }\n              /* End - For Staked NFT Only */\n\n              /*Put Transfer NFT if Not Staked*/\n              else {\n\n                btnPowerUp = document.createElement('button');\n                btnPowerUp.type = \"button\";\n                btnPowerUp.className = \"transferButton\";\n                btnPowerUp.style = \"{{ fontFamily: 'SF Pro Display' }}\";\n                btnPowerUp.innerHTML = \"+\";\n\n                if (mismatchNFT) {\n                  btnPowerUp.onclick = function () {\n                    showPromptTransfer(\"-1|\" + tkID + \"|\" + contractAdress, function (value) {\n                    });\n                  };\n                }\n                else {\n                  btnPowerUp.onclick = function () {\n                    showPromptTransfer(_vaultId + \"|\" + tkID + \"|\" + contractAdress, function (value) {\n                    });\n                  };\n                }\n\n                nftcontainer.appendChild(btnPowerUp)\n              }\n\n\n              DivContainer.appendChild(nftcontainer);\n\n\n            }\n            catch (ex2) {\n              ShowNFTError(nftName + \" - Error on reading token URI\");\n              console.log('ShowNFTErrorCard', ex2);\n            }\n\n          })();\n        }\n\n        return balanceOfOwner;\n      }\n      catch (ex) {\n        console.log('Error on ShowNFTCard', ex);\n      }\n    }\n\n    async function UnstakeSelected() {\n      ClaimThem(true);\n    }\n\n    async function ClaimSelected() {\n      ClaimThem(false);\n    }\n\n    async function BackToCollection() {\n      stakeVaults('staked-nft-container');\n    }\n\n    async function ClaimThem(unstake) {\n      try {        \n        if (account==null){\n          return;\n        }\n\n        isLoading = true;\n\n        //await delay();\n        await onGoingNotif(\"Pending...\");\n\n        const DivContainer = document.getElementById('staked-nft-container');\n        var children = DivContainer.getElementsByTagName('*');\n        var elements = [], child;\n        for (var i = 0; i < children.length; i++) {\n          child = children[i];\n          if (child.type == \"checkbox\" && child.checked == true) {\n            elements.push(child);\n          }\n        }\n\n        var tkIDs = [];\n        var _vaultId;\n\n        //loop for getting staked vault\n        for (var j = 0; j < elements.length; j++) {\n          var nft = [];\n          nft = elements[j].id.split(\"_\");\n          _vaultId = await stakingnftcontract.methods.getVaultId(nft[0]).call();\n\n          tkIDs.push(nft[1]);\n        }\n\n        if (unstake) {\n          await stakingnftcontract.methods.unstake(_vaultId, tkIDs).send({ from: account });\n        }\n        else {\n          await stakingnftcontract.methods.claim(_vaultId, tkIDs).send({ from: account });\n        }\n        BackToCollection();\n        isLoading = false;\n\n      }\n      catch (ex) {\n        console.log(\"ClaimThem - \" + ex);\n      }\n      await onGoingNotif(\"\");\n    }\n\n    async function addToken(tokenAddress, tokenSymbol, tokenDecimals, tokenImage){\n      const wasAdded = await window.ethereum.request({\n        method: 'wallet_watchAsset',\n        params: {\n          type: 'ERC20', // Initially only supports ERC20, but eventually more!\n          options: {\n            address: tokenAddress, // The address that the token is at.\n            symbol: tokenSymbol, // A ticker symbol or shorthand, up to 5 chars.\n            decimals: tokenDecimals, // The number of decimals in the token\n            image: tokenImage, // A string url of the token logo\n          },\n        },\n      });\n      //console.log(wasAdded);  \n    }\n  \n    async function StakeAll() {      \n      if (account==null){\n        return;\n      }\n\n      const DivContainer = document.getElementById('unstaked-nft-container');\n      var children = DivContainer.getElementsByTagName('*');\n      var elements = [], child;\n  \n      for (var i = 0; i < children.length; i++) {\n        child = children[i];\n        if (child.type == \"checkbox\") {\n          elements.push(child);\n        }\n      }\n\n      if (elements.length == 0) {\n        return;\n      }\n\n      var _isNFTAppr = false;\n      var address;\n      var tkIDs = [];\n\n      var _reject = false;\n\n      for (var i = 0; i < elements.length; i++) {\n        var nft = [];\n        nft = elements[i].id.replace(\"chk\", \"\").split(\"_\");\n\n        if (_isNFTAppr == false) {\n          address = nft[0];\n          await onGoingNotif(\"Approve All\");\n          _isNFTAppr = await nftApproveAll(address);\n\n          if (_isNFTAppr == false) {\n            _reject = true;\n            await onGoingNotif(\"\");\n            return;\n          }\n          await onGoingNotif(\"Pending...\");\n        }\n\n        tkIDs.push(nft[1]);\n      }\n\n      if (await isWhitelist(address)) {\n        var _vaultId = await stakingnftcontract.methods.getVaultId(address).call();\n        await stakingnftcontract.methods.stake(_vaultId, tkIDs).send({ from: account });\n      }\n      else {\n        await stakingnftcontract.methods.stakeAny(address, tkIDs, true).send({ from: account });\n      }\n      await refreshDAppView();\n      await onGoingNotif(\"\");\n\n\n    }\n\n    async function StakeThem() {\n      try {        \n        if (account==null){\n          return;\n        }\n        await onGoingNotif(\"Pending...\");\n\n        const DivContainer = document.getElementById('unstaked-nft-container');\n        var children = DivContainer.getElementsByTagName('*');\n        var elements = [], child;\n        for (var i = 0; i < children.length; i++) {\n          child = children[i];\n          if (child.type == \"checkbox\" && child.checked == true) {\n            elements.push(child);\n          }\n        }\n\n        var _isNFTAppr = false;\n        var address;\n        var tkIDs = [];\n\n        var _reject = false;\n\n        for (var i = 0; i < elements.length; i++) {\n          var nft = [];\n          nft = elements[i].id.replace(\"chk\", \"\").split(\"_\");\n\n          if (_isNFTAppr == false) {\n            address = nft[0];\n              await onGoingNotif(\"\");\n              await onGoingNotif(\"Approve All\");\n            _isNFTAppr = await nftApproveAll(address);\n\n            if (_isNFTAppr == false) {\n              _reject = true;\n              await onGoingNotif(\"\");\n              return;\n            }\n            await onGoingNotif(\"Pending...\");\n          }\n          tkIDs.push(nft[1]);\n        }\n\n        if (await isWhitelist(address)) {\n          var _vaultId = await stakingnftcontract.methods.getVaultId(address).call();\n          await stakingnftcontract.methods.stake(_vaultId, tkIDs).send({ from: account });\n        }\n        else {\n          await stakingnftcontract.methods.stakeAny(address, tkIDs, true).send({ from: account });\n        }\n        await refreshDAppView();\n        await onGoingNotif(\"\");\n      }\n      catch (ex) {\n        console.log(\"StakeThem - \" + ex);\n      }\n      await onGoingNotif(\"\");\n\n    }\n\n    async function refreshDAppView() {\n      await RefreshCollection();\n      await listNFTFilter(resultAPICall);\n      await stakeVaults('staked-nft-container');\n      await onGoingNotif(\"\");\n    }\n\n    async function nftApproveAll(address) {\n      try {\n        var _nftcontract = await ABIFetch(web3, ABI.ERC721.ABI, address);\n        var _isAppr = await _nftcontract.methods.isApprovedForAll(account, stakingnft_address).call();\n        if (_isAppr == false) {\n          await _nftcontract.methods.setApprovalForAll(stakingnft_address, true).send({ from: account })\n        }\n        return true;\n      }\n      catch (ex) {\n        console.log(address);\n        console.log(\"nftApproveAll - \" + ex);\n        return false;\n      }\n\n    }\n\n    async function isWhitelist(address) {\n      var _res = false;\n      try {\n        for (var key in CONFIGWhitelist.NFT) {\n          if (CONFIGWhitelist.NFT[key].ADDRESS == address) {\n            _res = true;\n            break;\n          }\n        }\n      }\n      catch (ex) {\n        console.log(\"isWhitelist - \" + ex);\n      }\n      return _res;\n    }\n\n    async function ShowNFTError(msgValue) {\n      const DivContainer = document.getElementById('unstaked-nft-container');\n\n      const curDiv = document.createElement('div');\n      curDiv.className = \"nftcontainer\";  // mt-3 ml-3\";\n\n      const chk = document.createElement(\"INPUT\");\n      chk.setAttribute(\"type\", \"checkbox\");\n      chk.id = \"chk\";\n      chk.className = \"unlisted\";\n\n      const lbl = document.createElement(\"LABEL\");\n      lbl.htmlFor = chk.id;\n\n      const objNFT = document.createElement('h6');\n      objNFT.innerHTML = msgValue;\n      objNFT.className = \"errorMessage\";\n\n      curDiv.appendChild(chk);\n      curDiv.appendChild(lbl);\n\n      curDiv.appendChild(objNFT);\n      DivContainer.appendChild(curDiv);\n    }\n\n    async function showCover() {\n      let coverDiv = document.createElement('div');\n      coverDiv.id = 'cover-div';\n\n      /* coverDiv.onclick = function () {\n        hideCover();\n      }; */\n\n      // make the page unscrollable while the modal form is open\n      document.body.style.overflowY = 'hidden';\n      document.body.append(coverDiv);\n    }\n\n    async function SendNFT(nftAdd, destiAdd, tkID) {\n      try {\n        await onGoingNotif(\"Sending NFT...\");\n\n        nftcontract = await ABIFetch(web3, ABI.ERC721.ABI, nftAdd);\n        //console.log(\"NFT: \", await nftcontract.methods.name().call());\n\n        if (await nftcontract.methods.isApprovedForAll(account, stakingnft_address).call()==false){\n          await nftcontract.methods.setApprovalForAll(stakingnft_address, true).send({ from: account});\n        }\n\n        await nftcontract.methods.safeTransferFrom(account, destiAdd, tkID).send({ from: account });\n        await refreshDAppView();\n\n        await onGoingNotif(\"\");\n      }\n      catch (ex) {\n        console.log(ex);\n        await onGoingNotif(\"\");\n      }\n    }\n\n    async function NitroAdd() {\n      await onGoingNotif(\"Pending...\");\n      try {\n        let DivContainer = document.getElementById('prompt-message');\n        if (isMobile){\n          DivContainer = document.getElementById('prompt-message-mobile');\n        }\n        var children = DivContainer.getElementsByTagName('*');\n        var child;\n\n        if (children.length > 0) {\n\n          var _isAppr = await nitrocontract.methods.isApprovedForAll(account, stakingnft_address).call();\n          if (_isAppr == false) {\n            await nitrocontract.methods.setApprovalForAll(stakingnft_address, true)\n              .send({\n                from: account,\n                gasLimit: String(totalGasLimit)\n              })\n          }\n\n          for (var i = 0; i < children.length; i++) {\n            child = children[i];\n            if (child.type == \"radio\" && child.checked == true) {\n              var nft = [];\n              nft = child.id.split(\"|\");\n\n              var _vaultId = nft[0];\n              var _tkID = nft[1];\n              var _nitroId = nft[2];\n\n              /* console.log(\"stakeNitro\", _vaultId, _tkID, _nitroId, totalGasLimit); */\n\n              await stakingnftcontract.methods.stakeNitro(_vaultId, _tkID, _nitroId)\n                .send({\n                  from: account \n                });\n              break;\n            }\n          }\n        }\n      }\n      catch (ex) {\n        console.log(ex);\n      }\n      await onGoingNotif(\"\");\n    }\n\n    async function hideCover() {\n      try {\n        document.getElementById('cover-div').remove();\n        document.body.style.overflowY = '';\n      }\n      catch (ex) {\n      }\n    }\n\n    async function showPromptTransfer(text, callback) {\n      showCover();\n \n      var _nft = [];\n      _nft = text.split(\"|\");\n      var _vaultId = _nft[0];\n \n      //Highlight the selected NFT\n      document.getElementById('nft' + _nft[0] + '|' + _nft[1]).className=\"nftCard SelectedNFT\";\n\n      var _vault;\n      if (_vaultId == -1) {\n        nftcontract = await ABIFetch(web3, ABI.ERC721.ABI, _nft[2]);\n      }\n      else {\n        _vault = await stakingnftcontract.methods.Vault(_vaultId).call();\n        nftcontract = await ABIFetch(web3, ABI.ERC721.ABI, _vault.nftAddress);\n      }\n\n      var _nftName = await nftcontract.methods.name().call();\n\n      \n      let form = document.getElementById('prompt-form');\n      if (isMobile){\n        form = document.getElementById('prompt-form-mobile');\n      }\n\n      let container = document.getElementById('prompt-form-container');\n      let msg = document.getElementById('prompt-message');\n      if (isMobile){\n        msg = document.getElementById('prompt-message-mobile');\n      }\n\n      var h6NFTAddy = document.createElement('h5');\n      h6NFTAddy.className = \"h6Nitro\";\n      form.className = \"transfer-width\";\n\n      var txAdd;\n      if (_vaultId == -1) {\n        h6NFTAddy.innerHTML = _nftName + \" #\" + _nft[1] + \"<br>\" + _nft[2] + \"<br>\";\n        txAdd = _nft[2];\n      }\n      else {\n        h6NFTAddy.innerHTML = _nftName + \" #\" + _nft[1] + \"<br>\" + _vault.nftAddress + \"<br>\";\n        txAdd = _vault.nftAddress;\n      }\n\n      var h6Caption = document.createElement('h6');\n      h6Caption.className = \"h6Nitro\";\n      h6Caption.innerHTML = \"Transfer NFT to (Input Wallet Address)\";\n\n      var x = document.createElement(\"INPUT\");\n      x.id = text;\n      x.placeholder = \"0x0000000000000000000000000000000000000000\";\n      x.setAttribute(\"type\", \"text\");\n\n      var curDiv = document.createElement('div');\n      curDiv.className = \"transfer-nft\";\n      msg.className = \"\";\n      msg.innerHTML = \"\";\n\n      var btnSubmit = document.getElementById('btnSubmit');\n      btnSubmit.value = \"Send\";\n\n      curDiv.appendChild(h6NFTAddy);\n      curDiv.appendChild(h6Caption);\n      curDiv.appendChild(x);\n\n      msg.appendChild(curDiv);\n\n\n      function complete(value) {\n        if (value == \"submit\") {\n          SendNFT(txAdd, x.value, _nft[1]);\n        }\n        hideCover();\n        container.style.display = 'none';\n        document.onkeydown = null;\n        callback(value);\n      }\n\n      form.onsubmit = function () {\n        let value = \"submit\";\n        document.getElementById('nft' + _nft[0] + '|' + _nft[1]).className=\"nftCard\";\n        complete(value);\n        return false;\n      };\n\n      form.cancel.onclick = function () {\n        document.getElementById('nft' + _nft[0] + '|' + _nft[1]).className=\"nftCard\";\n        complete(null);\n      };\n\n      document.onkeydown = function (e) {\n        if (e.key == 'Escape') {\n          document.getElementById('nft' + _nft[0] + '|' + _nft[1]).className=\"nftCard\";\n          complete(null);\n        }\n      };\n      container.style.display = 'block';\n    }\n\n    async function showLoading() {\n      let form = document.getElementById('prompt-form');\n      let container = document.getElementById('prompt-form-container');\n\n      let DivContainer = document.getElementById('prompt-message');\n\n      showCover();\n      //DivContainer.className = \"scroll\";\n      DivContainer.innerHTML = \"\";\n\n      const lbl = document.createElement(\"LABEL\");\n      lbl.className = \"parent\";\n\n      let img = document.createElement('img');\n      img.setAttribute(\"src\", 'loading.gif');\n\n      let curDiv = document.createElement('div');\n      curDiv.className = \"nitrocontainer\";\n\n      lbl.appendChild(img);\n      curDiv.appendChild(lbl);\n      DivContainer.appendChild(curDiv);\n\n      container.style.display = 'block';\n\n      //console.log(DivContainer);\n    }\n\n    async function showPrompt(text, callback) {     \n      let container = document.getElementById('prompt-form-container');\n      let form;\n      let DivContainer; \n      if(isMobile){\n        form = document.getElementById('prompt-form-mobile');\n        DivContainer = document.getElementById('prompt-message-mobile'); \n      }\n      else{\n        form = document.getElementById('prompt-form');\n        DivContainer = document.getElementById('prompt-message'); \n      }\n\n      var curDiv;\n      var contractAdress;\n      var balanceOfOwner = await nitrocontract.methods.balanceOf(account).call(); \n\n      showCover();\n\n      var _nft = [];\n      _nft = text.split(\"|\");\n\n      var lastClass = document.getElementById('nft' + _nft[0] + '|' + _nft[1]).className;\n      document.getElementById('nft' + _nft[0] + '|' + _nft[1]).className=\"nftCard SelectedNFT\"; \n      curDiv = document.createElement('div');\n      contractAdress = await nitrocontract.methods.symbol().call();  \n      //DivContainer.className = \"nitro-scroll\";\n      DivContainer.innerHTML = \"\"; \n\n      for (let i = 0; i < balanceOfOwner; i++) {\n        (async function () {\n          try {\n            var tkID = await nitrocontract.methods.tokenOfOwnerByIndex(account, i).call();\n\n            var nitCard = document.createElement('div');            \n            nitCard.id = \"nit\" + tkID;\n            if(isMobile){\n              nitCard.className = \"nitCard-mobile\";\n            }\n            else{\n              nitCard.className = \"nitCard\";\n            }\n\n            var nitTable = document.createElement('TABLE');\n            nitTable = document.createElement(\"TABLE\");\n            nitTable.setAttribute(\"id\", \"tbl\" + tkID);\n            nitCard.appendChild(nitTable);\n\n            var nitTR = document.createElement('TR');\n            nitTR.className = \"nitTR\";\n            nitTable.appendChild(nitTR);\n\n            var nitTD1 = document.createElement('TD');\n            nitTD1.className = \"nitTD1\";\n            nitTR.appendChild(nitTD1);\n             \n            var nitchk = document.createElement(\"INPUT\");\n            nitchk.setAttribute(\"type\", \"radio\"); \n            nitchk.id = text + '|' + tkID;\n            nitchk.className = \"nitchk\";\n            nitchk.name = \"nitro\";\n            nitTD1.appendChild(nitchk);\n\n            var nitlbl = document.createElement(\"LABEL\");\n            nitlbl.htmlFor = nitchk.id;\n            nitTD1.appendChild(nitlbl);\n\n\n            let tokenMetadataURI = await nitrocontract.methods.tokenURI(tkID).call();\n            if (tokenMetadataURI.startsWith(\"ipfs://\")) {\n              tokenMetadataURI = `https://ipfs.io/ipfs/${tokenMetadataURI.split(\"ipfs://\")[1]}`;\n            }\n            else if (tokenMetadataURI.startsWith(\"https://gateway.pinata.cloud/ipfs/\")) {\n              tokenMetadataURI = tokenMetadataURI.replace(`https://gateway.pinata.cloud/ipfs/`, ``);\n              tokenMetadataURI = `https://ipfs.io/ipfs/${tokenMetadataURI}${1}`;\n            }\n            var tokenMetadata = await fetch(tokenMetadataURI).then((response) => response.json()); \n\n            var imgNFT = document.createElement('img');\n            imgNFT.setAttribute(\"src\", tokenMetadata[\"image\"]);  \n            imgNFT.setAttribute(\"alt\", contractAdress);\n            imgNFT.setAttribute(\"title\", \"Nitro #\" + tkID);\n            imgNFT.style.width = \"100px\";\n            nitlbl.appendChild(imgNFT);\n\n            \n\n            var nitTD2 = document.createElement('TD');\n            nitTD2.className = \"nitTD2\";\n            nitTR.appendChild(nitTD2);\n            \n            var nitAtt1 = document.createElement('h6');\n            nitAtt1.className = \"nitAtt\";\n            nitAtt1.innerHTML = tokenMetadata[\"attributes\"][0][\"trait_type\"] + ': <b> x' + tokenMetadata[\"attributes\"][0][\"value\"] + '</b>'; \n            nitTD2.appendChild(nitAtt1);\n\n            var nitAtt2 = document.createElement('h6');\n            nitAtt2.className = \"nitAtt\";\n            nitAtt2.innerHTML = tokenMetadata[\"attributes\"][1][\"trait_type\"] + ': ' + tokenMetadata[\"attributes\"][1][\"value\"]; \n            nitTD2.appendChild(nitAtt2);\n\n            var nitAtt3 = document.createElement('h6');\n            nitAtt3.className = \"nitAtt\";\n            nitAtt3.innerHTML = tokenMetadata[\"attributes\"][2][\"trait_type\"] + ': ' + tokenMetadata[\"attributes\"][2][\"value\"]; \n            nitTD2.appendChild(nitAtt3);\n \n            DivContainer.appendChild(nitCard);\n\n          }\n          catch (ex2) {\n            console.log(ex2);\n          }\n\n        })();\n      }\n\n      function complete(value) {\n        if (value == \"submit\") {\n          NitroAdd();\n        }\n        document.getElementById('nft' + _nft[0] + '|' + _nft[1]).className=lastClass;\n        hideCover();\n        container.style.display = 'none';\n        document.onkeydown = null;\n        callback(value);\n      }\n\n      form.onsubmit = function () {\n        let value = \"submit\";\n        document.getElementById('nft' + _nft[0] + '|' + _nft[1]).className=lastClass;\n        complete(value);\n        return false;\n      };\n\n      form.cancel.onclick = function () {\n        document.getElementById('nft' + _nft[0] + '|' + _nft[1]).className=lastClass;\n        complete(null);\n      };\n\n      document.onkeydown = function (e) {\n        if (e.key == 'Escape') {\n          document.getElementById('nft' + _nft[0] + '|' + _nft[1]).className=lastClass;\n          complete(null);\n        }\n      };\n      container.style.display = 'block';\n    }\n\n    async function NitroMint(pID) {\n      try { \n        if (account==null){\n          return;\n        }\n        await onGoingNotif(\"Pending...\");\n\n        if (amtNitro > 0) {\n \n          var totalCost = await nitrocontract.methods.getNitroPrice(pID).call(); \n          totalCost = Web3.utils.fromWei(totalCost) * amtNitro;\n          var totalCostWei = Web3.utils.toWei(String(totalCost));\n\n          var _token = await nitrocontract.methods.getCryptotoken(pID).call();\n          var _tokencontract = await ABIFetch(web3, ABI.TOKENREWARD.ABI, _token);\n          var _allow_int = await _tokencontract.methods.allowance(account, nitroboost_address).call(); \n          var _allow = parseInt(_allow_int); \n\n          var _txRejected = false;         \n\n          //console.log(\"_allow amount: \", _allow_int);\n          //console.log(\"totalCostWei: \", totalCostWei);\n          \n\n          if (_allow < parseInt(totalCostWei)) {\n            await onGoingNotif(\"Approval...\");\n\n            var apprAmt = Web3.utils.toWei( String( Number.MAX_SAFE_INTEGER));\n            //console.log(\"approval amount: \", apprAmt);\n\n            await _tokencontract.methods.approve(nitroboost_address, String(apprAmt))\n              .send({ from: account })\n              .on('error', function(error, receipt){\n                _txRejected=true;\n              })\n              .catch(()=>{\n                onGoingNotif(\"\");\n              });\n             \n            /* await rewardcontract.methods.approve(nitroboost_address, _maxSupp)\n              .send({ from: account }); */\n            await onGoingNotif(\"Pending...\");\n          }\n          /* console.log(_txRejected); */\n          if (_txRejected==false){\n\n            await nitrocontract.methods\n              .mint(amtNitro, pID)\n              .send({\n                gasLimit: String(totalGasLimit * amtNitro),\n                to: nitroboost_address,\n                from: account\n              })\n              .on('confirmation', (confirmationNumber, receipt) => {\n                onGoingNotif(\"\");\n                //console.log(confirmationNumber, receipt);\n              });\n          }\n\n        }\n      }\n      catch (ex) {\n        console.log(ex);\n      }\n      await onGoingNotif(\"\");\n    }\n\n    async function BtnSelected(amt) {\n      amtNitro = amt;\n    }\n \n    if (isMobile) { \n      return (\n        <div className=\"App nftapp\">\n          <nav class=\"navbar navbarfont navbar-expand-md navbar-dark bg-dark mb-1\" >\n            <div class=\"container-fluid\" style={{ fontFamily: \"SF Pro Display\" }}>\n              <a class=\"navbar-brand\" style={{ fontWeight: \"800\", fontSize: '15px' }} href=\"#\">\n                <img src=\"logo.png\" width=\"50\" />\n              </a>\n              <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarCollapse\" aria-controls=\"navbarCollapse\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                <span class=\"navbar-toggler-icon\"></span>\n              </button>\n              <div class=\"collapse navbar-collapse\" id=\"navbarCollapse\">\n                <ul class=\"navbar-nav me-auto mb-2 px-3 mb-md-0\" style={{ fontSize: \"15px\" }}>\n                  <li class=\"nav-item\">\n                    <a class=\"nav-link active\" aria-current=\"page\" href=\"#\">Dashboard</a>\n                  </li>\n                  <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"#\">Market Place</a>\n                  </li>\n                  <li class=\"nav-item\">\n                    <a class=\"nav-link\">Bridge NFTs</a>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </nav>\n\n          <div className='container container-style-mobile mb-5'>\n            <div className='row'>\n              <body className='nftminter-mobile'>\n                <form>\n                  <div className='row p-2'>\n                    <h5 className='h5Nitro'>Mint Nitro NFT Here</h5>\n                  </div>\n                  <img src=\"./nitrocommon.gif\" width=\"100px\" />\n                  <h6 className='h6Nitro'>Select Nitro Quantity</h6>\n\n                  <ButtonGroup size=\"lg\"\n                    aria-label=\"First group\"\n                    name=\"amount\"\n                    style={{ boxShadow: \"1px 1px 5px #000000\" }}\n                    class=\"btn-group\"\n                  >\n                    <Button value=\"1\" onClick={function () { BtnSelected(1) }}>1</Button>\n                    <Button value=\"2\" onClick={function () { BtnSelected(2) }}>2</Button>\n                    <Button value=\"3\" onClick={function () { BtnSelected(3) }}>3</Button>\n                    <Button value=\"4\" onClick={function () { BtnSelected(4) }}>4</Button>\n                    <Button value=\"5\" onClick={function () { BtnSelected(5) }}>5</Button>\n                  </ButtonGroup>\n\n                  <h6 className='h6Nitro mt-3'>Pay with your preferred Crypto</h6>\n                  <div className=\"nitro-qty\" role=\"group\" id=\"btnNitroQty\" aria-label=\"Token Payment\" >\n                  <img src={\"./tokens/1.png\"} width=\"50\" alt=\"CrudeOil\" class=\"btn btn-primary\" className='btnpayment ml-1' id=\"btnCrudeOil\" onClick={function () { NitroMint(0) }} />\n                    <img src={\"./tokens/2.png\"} width=\"50\" alt=\"MartinB\" class=\"btn btn-primary\" className='btnpayment ml-1' id=\"btnMartinB\" onClick={function () { NitroMint(1) }} />\n                    <img src={\"./tokens/3.png\"} width=\"50\" alt=\"KTH\" class=\"btn btn-primary\" className='btnpayment ml-1' id=\"btnKTH\" onClick={function () { NitroMint(2) }} />\n                    <img src={\"./tokens/4.png\"} width=\"50\" alt=\"ARG\" class=\"btn btn-primary\" className='btnpayment ml-1' id=\"btnARG\" onClick={function () { NitroMint(3) }} />\n                    <img src={\"./tokens/5.png\"} width=\"50\" alt=\"Tango\" class=\"btn btn-primary\" className='btnpayment ml-1' id=\"btnTango\" onClick={function () { NitroMint(4) }} />\n                  </div>\n                </form>\n              </body>              \n            </div>\n            <div className='row'>\n              <body className='nftstaker'>\n                <form style={{ fontFamily: \"SF Pro Display\" }} >\n                  <Tabs defaultActiveKey=\"second\" className=\"nav-pills nav-fill\">\n                    <Tab eventKey=\"first\" title=\"Unstaked NFT\">\n                      <div className='row items' >\n                        <div class=\"btn-toolbar justify-content-between\" role=\"toolbar\" aria-label=\"Toolbar with button groups\">\n                          <div class=\"hold-nft-menu buttonmenu\" role=\"group\" aria-label=\"Hold NFT Menu\">\n                            <button type=\"button\" style={{ fontSize: \"9px\" }} class=\"btn btn-secondary\" id=\"btnStakeSelected\" onClick={StakeThem}>Stake Selected</button>\n                            <button type=\"button\" style={{ fontSize: \"9px\" }} class=\"btn btn-secondary\" id=\"btnStakeAll\" onClick={StakeAll}>Stake All</button>\n                            <select id=\"nftFilter\" style={{ fontSize: \"9px\" }} className='drpFilter btn-secondary' onChange={RefreshCollection}>\n                              <option selected class=\"selected\">JeepneyRushNFT</option>\n                              <option>All Owned NFT</option>\n                            </select>\n                          </div>\n                        </div>\n                      </div>\n                      <div className='col'>\n                        <div className='row items'>\n                          <div id='unstaked-nft-container' className='nft_card_view-mobile' />\n                        </div>\n                      </div>\n                    </Tab>\n                    <Tab eventKey=\"second\" title=\"Staked NFT\">\n                      <div className='row items' >\n                        <div class=\"btn-toolbar justify-content-between\" role=\"toolbar\" aria-label=\"Toolbar with button groups\">\n                          <div class=\"hold-nft-menu buttonmenu\" id=\"btnUnstakeMenu\" role=\"group\" aria-label=\"Stake NFT Menu\">\n                            <button type=\"button\" style={{ fontSize: \"9px\" }} class=\"btn btn-secondary\" id=\"btnBack\" onClick={BackToCollection}>Back</button>\n                            <button type=\"button\" style={{ fontSize: \"9px\" }} class=\"btn btn-secondary\" id=\"btnClaimSelected\" onClick={ClaimSelected}>Claim Selected</button>\n                            <button type=\"button\" style={{ fontSize: \"9px\" }} class=\"btn btn-secondary\" id=\"btnUnstakeSelected\" onClick={UnstakeSelected}>Unstake Selected</button>\n                          </div>\n                        </div>\n                      </div>\n                      <div className='row items'>\n                        <div id='staked-nft-container' className='ml-3 mr-3 nft_card_view' />\n                      </div>\n                    </Tab>\n                  </Tabs>\n                </form>\n              </body>\n            </div>\n          </div>\n \n          <div className=\"row px-4 pt-2\">\n            <div className='header' style={{ fontSize: '11px' }}>\n              <div style={{ fontSize: '15px', borderRadius: '14px', color: \"#ffffff\", fontWeight: \"300\" }}>Staking Vault Rewards</div>\n              <table id=\"tblvaultInfo\" className='table px-15 table-bordered table-dark' />\n            </div>\n          </div>\n\n          <nav class=\"navbar navbarfont bg-dark\"/*navbar-expand-md navbar-dark  style={{ marginBottom: \"0px\", marginLeft: \"0px\", marginRight: \"0px\", clear: \"both\" }} */>\n            <div class=\"navbar-inner\">\n              <div class=\"d-flex flex-row accountInfo\" style={{marginLeft: \"10px\"}}>\n                <div id=\"wallBal\" className=\"walletBalance\" />\n                <div id=\"btnConnect\" onClick={connectwallet} className=\"connectbutton ml-2\" type=\"button\" style={{ fontFamily: \"SF Pro Display\" }}>\n                  Connect Your Wallet\n                </div>\n              </div>\n\n            </div>\n          </nav>\n\n          <div id=\"prompt-form-container\">\n            <form id=\"prompt-form-mobile\">\n              <div className='add-booster'>\n                <div id=\"prompt-message-mobile\"></div>\n                <input name=\"btnSubmit\" id=\"btnSubmit\" type=\"submit\" value=\"Equip\"></input>\n                <input name=\"cancel\" id=\"cancel\" type=\"button\" value=\"Cancel\" />\n              </div>\n            </form>\n          </div>\n\n        </div>\n      );\n    }\n    else { \n      return (\n        <div className=\"App nftapp\">\n          <nav class=\"navbar navbarfont navbar-expand-md navbar-dark bg-dark mb-4\">\n            <div class=\"container-fluid\" style={{ fontFamily: \"SF Pro Display\" }}>\n              <a class=\"navbar-brand px-5\" style={{ fontWeight: \"800\", fontSize: '15px' }} href=\"#\"></a><img src=\"logo.png\" width=\"7%\" />\n              <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarCollapse\" aria-controls=\"navbarCollapse\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                <span class=\"navbar-toggler-icon\"></span>\n              </button>\n              <div class=\"collapse navbar-collapse\" id=\"navbarCollapse\">\n                <ul class=\"navbar-nav me-auto mb-2 px-3 mb-md-0\" style={{ fontSize: \"15px\" }}>\n                  <li class=\"nav-item\">\n                    <a class=\"nav-link active\" aria-current=\"page\" href=\"#\">Dashboard</a>\n                  </li>\n                  <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"#\">Market Place</a>\n                  </li>\n                  <li class=\"nav-item\">\n                    <a class=\"nav-link\">Bridge NFTs</a>\n                  </li>\n                </ul>\n              </div>\n            </div> \n            <div className='px-5'>\n              <div class=\"d-flex flex-row accountInfo\">\n                <div id=\"wallBal\" className=\"walletBalance\" />\n                <div id=\"btnConnect\" onClick={connectwallet} className=\"connectbutton ml-2\" type=\"button\" style={{ fontFamily: \"SF Pro Display\" }}>\n                  Connect Your Wallet\n                </div>\n              </div>\n            </div>\n          </nav>\n\n          <div className='container container-style'>\n            <div className='col'>\n              <body className='nftminter'>\n                <form>\n                  <div className='row p-2'>\n                    <h5 className='h5Nitro'>Mint Nitro NFT Here</h5>\n                  </div>\n                  <img src=\"./nitrocommon.gif\" width=\"100px\" />\n                  <h6 className='h6Nitro'>Select Nitro Quantity</h6>\n\n                  <ButtonGroup size=\"lg\"\n                    aria-label=\"First group\"\n                    name=\"amount\"\n                    style={{ boxShadow: \"1px 1px 5px #000000\" }}\n                    class=\"btn-group\"\n                  >\n                    <Button value=\"1\" onClick={function () { BtnSelected(1) }}>1</Button>\n                    <Button value=\"2\" onClick={function () { BtnSelected(2) }}>2</Button>\n                    <Button value=\"3\" onClick={function () { BtnSelected(3) }}>3</Button>\n                    <Button value=\"4\" onClick={function () { BtnSelected(4) }}>4</Button>\n                    <Button value=\"5\" onClick={function () { BtnSelected(5) }}>5</Button>\n                  </ButtonGroup>\n\n                  <h6 className='h6Nitro mt-3'>Pay with your preferred Crypto</h6>\n                  <div class=\"nitro-qty\" role=\"group\" id=\"btnNitroQty\" aria-label=\"Token Payment\">\n                    <img src={\"./tokens/1.png\"} width=\"50\" alt=\"CrudeOil\" class=\"btn btn-primary\" className='btnpayment ml-1' id=\"btnCrudeOil\" onClick={function () { NitroMint(0) }} />\n                    <img src={\"./tokens/2.png\"} width=\"50\" alt=\"MartinB\" class=\"btn btn-primary\" className='btnpayment ml-1' id=\"btnMartinB\" onClick={function () { NitroMint(1) }} />\n                    <img src={\"./tokens/3.png\"} width=\"50\" alt=\"KTH\" class=\"btn btn-primary\" className='btnpayment ml-1' id=\"btnKTH\" onClick={function () { NitroMint(2) }} />\n                    <img src={\"./tokens/4.png\"} width=\"50\" alt=\"ARG\" class=\"btn btn-primary\" className='btnpayment ml-1' id=\"btnARG\" onClick={function () { NitroMint(3) }} />\n                    <img src={\"./tokens/5.png\"} width=\"50\" alt=\"Tango\" class=\"btn btn-primary\" className='btnpayment ml-1' id=\"btnTango\" onClick={function () { NitroMint(4) }} />\n                  </div>\n\n                  <br></br>\n                  <div className=\"row pt-2\">\n                    <div className='header' style={{ fontSize: '11px' }}>\n                      <div style={{ fontSize: '15px', borderRadius: '14px', color: \"#ffffff\", fontWeight: \"300\" }}>Nitro NFT Rates</div>\n                      <table id=\"tblnitroInfo\" className='table table-bordered table-dark' >\n                        <thead className='thead-light'>\n                          <tr>\n                            <th scope=\"col\">Type</th>\n                            <th scope=\"col\">Price</th>\n                            <th scope=\"col\">Reward Rate</th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          <tr>\n                            <td>Nitro Crude</td>\n                            <td>700 OIL</td>\n                            <td>x2.0</td>\n                          </tr>\n                          <tr>\n                            <td>Nitro Martin</td>\n                            <td>8,181,050,000 Martin₿</td>\n                            <td>x2.1</td>\n                          </tr>\n                          <tr>\n                            <td>Nitro KTH</td>\n                            <td>58,821.8 KTH</td>\n                            <td>x2.2</td>\n                          </tr>\n                          <tr>\n                            <td>Nitro ARG</td>\n                            <td>112,126,000 ARG</td>\n                            <td>x2.2</td>\n                          </tr>\n                          <tr>\n                            <td>Nitro Tango</td>\n                            <td>133.277 Tango</td>\n                            <td>x2.3</td>\n                          </tr>\n                        </tbody>\n                      </table>\n                    </div>\n\n                    <div className='header' style={{ fontSize: '11px' }}>\n                      <div style={{ fontSize: '15px', borderRadius: '14px', color: \"#ffffff\", fontWeight: \"300\" }}>Staking Vault Rewards</div>\n                      <table id=\"tblvaultInfo\" className='table px-5 table-bordered table-dark' />\n                    </div>\n                  </div>\n                  \n                </form>\n              </body>\n\n            </div>\n            <div className='col'>\n              <table className='nftstaker'>\n                <tr>\n                  <body className='nftstaker'>\n                    <form style={{ fontFamily: \"SF Pro Display\" }} >\n                      <Tabs defaultActiveKey=\"second\" className=\"nav-pills nav-fill\">\n                        <Tab eventKey=\"first\" title=\"Unstaked NFT\">\n                          <div className='row items' >\n                            <div class=\"btn-toolbar justify-content-between\" role=\"toolbar\" aria-label=\"Toolbar with button groups\">\n                              <div class=\"hold-nft-menu buttonmenu\" role=\"group\" aria-label=\"Hold NFT Menu\">\n                                <button type=\"button\" class=\"btn btn-secondary\" id=\"btnStakeSelected\" onClick={StakeThem}>Stake Selected</button>\n                                <button type=\"button\" class=\"btn btn-secondary\" id=\"btnStakeAll\" onClick={StakeAll}>Stake All</button>\n                                <select id=\"nftFilter\" className='drpFilter btn-secondary' onChange={RefreshCollection}>\n                                  <option selected class=\"selected\">JeepneyRushNFT</option>\n                                  <option>All Owned NFT</option>\n                                </select>\n                              </div>\n                            </div>\n                          </div>\n                          <div className='col'>\n                            <div className='row items'>\n                              <div id='unstaked-nft-container' className='nft_card_view' />\n                            </div>\n                          </div>\n                        </Tab>\n                        <Tab eventKey=\"second\" title=\"Staked NFT\">\n                          <div className='row items' >\n                            <div class=\"btn-toolbar justify-content-between\" role=\"toolbar\" aria-label=\"Toolbar with button groups\">\n                              <div class=\"hold-nft-menu buttonmenu\" id=\"btnUnstakeMenu\" role=\"group\" aria-label=\"Stake NFT Menu\">\n                                <button type=\"button\" class=\"btn btn-secondary\" id=\"btnBack\" onClick={BackToCollection}>Back</button>\n                                <button type=\"button\" class=\"btn btn-secondary\" id=\"btnClaimSelected\" onClick={ClaimSelected}>Claim Selected</button>\n                                <button type=\"button\" class=\"btn btn-secondary\" id=\"btnUnstakeSelected\" onClick={UnstakeSelected}>Unstake Selected</button>\n                              </div>\n                            </div>\n                          </div>\n                          <div className='row items'>\n                            <div id='staked-nft-container' className='ml-3 mr-3 nft_card_view' />\n                          </div>\n                        </Tab>\n                      </Tabs>\n                    </form>\n                  </body>\n                </tr>\n              </table>\n\n            </div>\n          </div>\n\n          <div id=\"prompt-form-container\"> \n            <form id=\"prompt-form\">\n              <div className='add-booster'>\n                <div id=\"prompt-message\" className='scroll'></div>\n                <input name=\"btnSubmit\" id=\"btnSubmit\" type=\"submit\" value=\"Equip\"></input>\n                <input name=\"cancel\" id=\"cancel\" type=\"button\" value=\"Cancel\" />\n              </div>\n            </form>\n          </div>\n\n          <footer>\n            <div class=\"container\">\n              <div class=\"row secondary\"></div>\n            </div>\n            <div class=\"row copyright\">\n              <p>Copyright &copy; 2022 RushDapp SmartBCH | All Rights Reserved\n              </p> \n            </div>\n\n          </footer>\n        </div>\n      );\n    }\n\n  };\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}