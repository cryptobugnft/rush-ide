{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["window","$","short_acct","tx_pending","CONFIG","ABI","account","nftcontract","defSymbol","totalGasLimit","walletBalanceAPI","scannerAPI","balanceAPI","resultAPICall","CONFIGWhitelist","stakingnftcontract","rewardcontract","nitrocontract","nftlevelcontract","stakingnft_address","nitroboost_address","scannercontract","web3","rewardInDetail","vaultSelected","amtNitro","isLoading","isRendering","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleWindowSizeChange","setState","width","innerWidth","state","addEventListener","removeEventListener","isMobile","connectwallet","_connectwallet","apply","arguments","asyncToGenerator","_regeneratorRuntime","mark","_callee","configResponse","accounts","networkId","abiResponse","abiWhitelist","sWallBal","wrap","_context","prev","next","ethereum","fetch","headers","Content-Type","Accept","sent","json","Web3","send","eth","getAccounts","request","method","MAINNET","ID","TESTNET","SYMBOL","GAS_LIMIT","API","BALANCE","WALLET","ABIFetch","TOKENREWARD","MAINDAPP","STAKING","NITROBOOST","RUSHLEVEL","LEVELING","SCANNER","TESTDAPP","onGoingNotif","document","getElementById","style","WalletBalance","innerHTML","APICall","listNFTFilter","LoadVaults","setInterval","CheckRewards","LoadVaultInfo","localStorage","setItem","confirm","t0","console","log","stop","VaultRewardToken","_x","_VaultRewardToken","_callee2","delegate","vaultrewarder","rewardToken","_rewardcontract","_context2","REWARDER","methods","abrupt","_LoadVaultInfo","_callee3","tbl","thd","_tr","_th1","_th2","counter_vault","_tbody","_vault","_rewardSymbol","_tbody_tr","_tbody_td1","short_vault","_tbody_td2","_span1","_span2","_context3","createElement","className","appendChild","scope","Vault","active","tokenReward","symbol","vaultName","length","substring","class","reqBooster","utils","fromWei","rewardRate","RefreshCollection","_RefreshCollection","_callee4","nftCol","_context4","value","listNFT","_x2","_x3","_APICall","_callee5","theURL","apiResponse","jsonParsedContents","_context5","APIBalanceCall","_x4","_x5","_x6","_APIBalanceCall","_callee6","_account","_CA","_context6","replace","_x7","_WalletBalance","_callee7","earnedrwd","rewards","_context7","result","Number","toFixed","claimVault","_x8","_claimVault","_callee8","_vaultId","_tkIDs","balanceOfOwner","j","_tkID","_context8","ERC721","nftAddress","balanceOf","tokenOfOwnerByIndex","nftStake","owner","push","claim","from","refreshDAppView","modifyVault","_x9","_x10","_modifyVault","_callee9","_vaultContract","tab_container","_context9","UnstakeMenuControl","getVaultAddress","renderNFT","_x11","_onGoingNotif","_callee10","msg","btnConnect","img","_context10","hideCover","ex","setAttribute","showCover","unstakeVault","_x12","_unstakeVault","_callee11","i","_context11","unstake","GetNFTLevel","_x13","_x14","_GetNFTLevel","_callee12","nftLevel","_context12","getNFTLevel","concat","_CheckRewards","_callee13","_stakeVaults","_symbol","totalVaults","_i","_i2","contractAdress","divPend","_pendingRewards","_pend2","_stakeCount","earned","tokenIds","_pend","objNFTPend","objNFTLvl","_nitroStakeRemaining","_result","nitroID","remain","_nitroEquipped","_multipower","_powerFloat","nftLvlBonus","_lvlFloat","_glowNum","seconds","d","h","m","s","remainingBurn","_context13","Array","includes","getTotalVault","isAcctHasStakeOnVault","pendingRewardByAccount","String","split","getVaultId","getTokenIDs","pendingReward","nitroStakeRemaining","getEquippedNitro","getNitroPower","parseFloat","getLevelBonus","getRareType","Math","floor","t1","t2","_x15","_x16","_x17","_UnstakeMenuControl","_callee14","btnBack","btnClaim","btnUnstake","_btnBack","_btnClaim","_btnUnstake","_context14","display","classList","add","removeAttribute","remove","_x18","_x19","_getTokenIDs","_callee15","tkns","_context15","getStakeInVaultAccount","_x20","_LoadVaults","_callee17","DivContainer","usrCurrVault","_i3","_vaultInfo","nftName","tokenMetadataURI","tokenMetadata","_context17","name","tokenURI","startsWith","then","response","_callee16","cardVault","cardVaultCard","cardVaultFront","imgNFT","vid_source","img_src","cardVaultDetails","cardH4","cardSpan","cardVaultBack","_tbl","_attrdiv","nft_dtl","_nftName","_symbl","_supply","_tr2","cardButtonClaim","cardButtonUnstake","cardButtonModify","_context16","id","color","totalSupply","onclick","_x21","_x22","_x23","_x24","_listNFT","_callee18","filterList","userNFTHold","btnStakeAll","btnStakeSelected","key","ctr","_i4","_context18","keys","NFT","done","type","ADDRESS","contractAddress","t3","toUpperCase","t4","t5","t6","t7","ShowNFTError","t8","_x25","_x26","_x27","_ABIFetch","_callee19","_abi","_address","_contract","ABIResponse","ABIJSON","_context19","Contract","_x28","_listNFTFilter","_callee20","lstNFT","z_1","t_1","z","t","_context20","createTextNode","balance","fetchNFTImage","_x29","_x30","_x31","_x32","_fetchNFTImage","_callee21","tkID","_caller","_context21","_x33","_x34","_x35","_x36","_x37","_renderNFT","_callee23","isStaked","nftContainer","nftCard","nftTable","nftMedia","nftTD","nftLvl","nftChk","nftLbl","nftImg","nftAtt","nftAttTD","nftTxt1","nftTxt2","nftBtn","nftTxt3","_loop","_context23","_callee22","_imgFix","_context22","htmlFor","img_er","showPrompt","showPromptTransfer","UnstakeSelected","_UnstakeSelected","_callee26","_context26","ClaimThem","ClaimSelected","_ClaimSelected","_callee27","_context27","BackToCollection","_BackToCollection","_callee28","_context28","_x43","_ClaimThem","_callee29","_DivContainer","children","elements","child","tkIDs","nft","_context29","getElementsByTagName","checked","StakeAll","_StakeAll","_callee31","_isNFTAppr","address","_context31","nftApproveAll","isWhitelist","stake","stakeAny","StakeThem","_StakeThem","_callee32","_DivContainer2","_context32","_refreshDAppView","_callee33","_context33","_x48","_nftApproveAll","_callee34","_nftcontract","_context34","isApprovedForAll","setApprovalForAll","_x49","_isWhitelist","_callee35","_res","_context35","_x50","_ShowNFTError","_callee36","msgValue","curDiv","chk","lbl","objNFT","_context36","_showCover","_callee37","coverDiv","_context37","body","overflowY","append","SendNFT","_x51","_x52","_x53","_SendNFT","_callee38","nftAdd","destiAdd","_context38","safeTransferFrom","NitroAdd","_NitroAdd","_callee39","_DivContainer3","_nitroId","_context39","gasLimit","stakeNitro","_hideCover","_callee40","_context40","_x54","_x55","_showPromptTransfer","_callee41","text","callback","_nft","form","container","h6NFTAddy","txAdd","h6Caption","x","complete","_context41","onkeydown","placeholder","onsubmit","cancel","e","_x56","_x57","_showPrompt","_callee44","lastClass","_loop3","_context44","_callee43","nitCard","nitTable","nitTR","nitTD1","nitchk","nitlbl","nitTD2","nitAtt1","nitAtt2","nitAtt3","_context43","NitroMint","_x58","_NitroMint","_callee45","pID","totalCost","totalCostWei","_token","_tokencontract","_allow_int","_allow","_txRejected","apprAmt","_context45","getNitroPrice","toWei","getCryptotoken","allowance","parseInt","MAX_SAFE_INTEGER","approve","on","error","receipt","catch","mint","to","confirmationNumber","BtnSelected","_x59","_BtnSelected","_callee46","amt","_context46","react_default","a","fontFamily","fontWeight","fontSize","href","src","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","aria-current","ButtonGroup","size","boxShadow","Button","onClick","role","alt","Tabs","defaultActiveKey","Tab","eventKey","title","onChange","selected","borderRadius","marginLeft","Component","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App_0"],"mappings":"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","file":"static/js/main.736e28b3.chunk.js","sourcesContent":["import './App.css';\nimport { Button, ButtonGroup} from 'react-bootstrap';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { Component } from 'react'; \n\nimport 'sf-font'; \nimport Web3 from 'web3';\n \n\nconst $ = window.$;\n\nvar tx_pending = false;\n\nvar CONFIG = null;\nvar ABI = null;\nvar account = null;\nvar nftcontract = null;\n\nvar defSymbol = null;\nvar totalGasLimit = null;\n\nvar walletBalanceAPI = null;\nvar scannerAPI = null;\nvar balanceAPI = null;\nvar resultAPICall = null;\nvar CONFIGWhitelist = null;\n\nvar nftName = null;\n\nvar stakingnftcontract = null;\nvar rewardcontract = null;\nvar nitrocontract = null;\nvar nftlevelcontract = null;\n\nvar stakingnft_address = null;\nvar nitroboost_address = null;\n\nvar scannercontract = null; \nvar scanneraddress = null; \n \nvar short_acct;\n\nvar web3 = null; \n\nvar rewardInDetail = false;\nvar vaultSelected = null;\n\nvar amtNitro = 0;\n\nvar isLoading = false;\nvar isRendering = false; \n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      width: window.innerWidth,\n    };\n\n  }\n\n  componentWillMount() {\n    window.addEventListener('resize', this.handleWindowSizeChange);\n  }\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n  handleWindowSizeChange = () => {\n    this.setState({ width: window.innerWidth });\n  };\n\n  componentDidUpdate(){ \n\n  }\n  \n \n  render() {\n    const { width } = this.state;\n    const isMobile = width <= 900;\n\n    let nftcost = '';\n  \n    const sleep = (milliseconds) => {\n      return new Promise(resolve => setTimeout(resolve, milliseconds))\n    }\n  \n    function delay() { \n      return new Promise(resolve => setTimeout(resolve, 300));\n    }\n \n    async function connectwallet() {\n      try {\n        if (window.ethereum) {\n\n          const configResponse = await fetch(\"/config/config.json\", {\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Accept: \"application/json\",\n            },\n          });\n          CONFIG = await configResponse.json();\n\n          web3 = new Web3(window.ethereum);\n\n\n          await window.ethereum.send('eth_requestAccounts');\n          var accounts = await web3.eth.getAccounts();\n          account = accounts[0];\n\n          const networkId = await window.ethereum.request({\n            method: \"net_version\",\n          });\n\n          if ((networkId == CONFIG.MAINNET.ID) || (networkId == CONFIG.TESTNET.ID)) {\n\n            const abiResponse = await fetch(\"/config/abi.json\", {\n              headers: {\n                \"Content-Type\": \"application/json\",\n                Accept: \"application/json\",\n              },\n            });\n            ABI = await abiResponse.json();\n\n            var abiWhitelist = null;\n\n            if (networkId == CONFIG.MAINNET.ID) {\n              defSymbol = CONFIG.MAINNET.SYMBOL;\n              totalGasLimit = CONFIG.MAINNET.GAS_LIMIT;\n              scannerAPI = CONFIG.MAINNET.API;\n              balanceAPI = CONFIG.MAINNET.BALANCE;\n              walletBalanceAPI = CONFIG.MAINNET.WALLET;\n              rewardcontract = await ABIFetch(web3, ABI.TOKENREWARD.ABI, CONFIG.MAINDAPP.TOKENREWARD);\n              stakingnftcontract = await ABIFetch(web3, ABI.STAKING.ABI, CONFIG.MAINDAPP.STAKING);\n              nitrocontract = await ABIFetch(web3, ABI.NITROBOOST.ABI, CONFIG.MAINDAPP.NITROBOOST);\n              nftlevelcontract = await ABIFetch(web3, ABI.RUSHLEVEL.ABI, CONFIG.MAINDAPP.LEVELING);\n              scannercontract =  await ABIFetch(web3, ABI.SCANNER.ABI, CONFIG.MAINDAPP.SCANNER);\n              \n\n              stakingnft_address = CONFIG.MAINDAPP.STAKING;\n              nitroboost_address = CONFIG.MAINDAPP.NITROBOOST;  \n              scanneraddress = CONFIG.MAINDAPP.SCANNER;\n\n              abiWhitelist = await fetch(\"/config/whitelisted.json\", {\n                headers: {\n                  \"Content-Type\": \"application/json\",\n                  Accept: \"application/json\",\n                },\n              });\n              CONFIGWhitelist = await abiWhitelist.json();\n\n            }\n            else if (networkId == CONFIG.TESTNET.ID) {  \n              defSymbol = CONFIG.TESTNET.SYMBOL;\n              totalGasLimit = CONFIG.TESTNET.GAS_LIMIT;\n              scannerAPI = CONFIG.TESTNET.API;\n              balanceAPI = CONFIG.TESTNET.BALANCE;\n              walletBalanceAPI = CONFIG.TESTNET.WALLET;\n              rewardcontract = await ABIFetch(web3, ABI.TOKENREWARD.ABI, CONFIG.TESTDAPP.TOKENREWARD);\n              stakingnftcontract = await ABIFetch(web3, ABI.STAKING.ABI, CONFIG.TESTDAPP.STAKING);\n              nitrocontract = await ABIFetch(web3, ABI.NITROBOOST.ABI, CONFIG.TESTDAPP.NITROBOOST);\n              nftlevelcontract = await ABIFetch(web3, ABI.RUSHLEVEL.ABI, CONFIG.TESTDAPP.LEVELING);\n              scannercontract =  await ABIFetch(web3, ABI.SCANNER.ABI, CONFIG.TESTDAPP.SCANNER);\n \n              stakingnft_address = CONFIG.TESTDAPP.STAKING;\n              nitroboost_address = CONFIG.TESTDAPP.NITROBOOST;\n              scanneraddress = CONFIG.TESTDAPP.SCANNER;\n\n              abiWhitelist = await fetch(\"/config/testwhitelisted.json\", {\n                headers: {\n                  \"Content-Type\": \"application/json\",\n                  Accept: \"application/json\",\n                },\n              });\n              CONFIGWhitelist = await abiWhitelist.json();\n\n            }\n\n            onGoingNotif(\"\");\n\n            var sWallBal = document.getElementById(\"wallBal\");\n            sWallBal.style.width = \"100px\";\n            sWallBal.innerHTML = await WalletBalance(account);\n\n            resultAPICall = await APICall(account, scannerAPI); \n\n            await listNFTFilter(resultAPICall); \n\n            document.getElementById('unstaked-nft-container').innerHTML=\"\";\n            const DivContainer = document.getElementById('staked-nft-container');\n            DivContainer.innerHTML = \"\"; \n            await LoadVaults('staked-nft-container'); \n            var timer = setInterval(function () {\n              if (tx_pending==false){ \n                CheckRewards();\n              }\n            }, 5000);\n            await LoadVaultInfo();\n\n            localStorage.setItem('isWalletConnected', true);\n          }\n\n          else {\n            var z = window.confirm(\"Wrong network!\");\n          }\n\n        }\n      }\n      catch (ex) {\n        console.log('connectwallet - SeeError - ' + ex);\n      }\n    }\n\n    async function VaultRewardToken(delegate){\n      var vaultrewarder = await ABIFetch(web3, ABI.REWARDER.ABI, delegate); \n      var rewardToken = await vaultrewarder.methods.rewardToken().call(); \n      var _rewardcontract = await ABIFetch(web3, ABI.TOKENREWARD.ABI, rewardToken);\n      return _rewardcontract;\n    }\n\n    async function LoadVaultInfo(){\n      try{\n        var tbl = document.getElementById('tblvaultInfo');\n        tbl.innerHTML=\"\";\n\n        var thd = document.createElement('thead');\n        thd.className = \"thead-light\";\n        tbl.appendChild(thd);\n\n        var _tr = document.createElement('tr');\n        var _th1 = document.createElement('th');\n        _th1.scope = 'col';\n        _th1.innerHTML = 'Collection';\n        _tr.appendChild(_th1)\n\n        var _th2 = document.createElement('th');\n        _th2.scope = 'col';\n        _th2.innerHTML = 'Rewards Per Day';\n        _tr.appendChild(_th2)\n\n        thd.appendChild(_tr);\n\n        var counter_vault = 0;\n\n        var _tbody = document.createElement('tbody');\n        var _vault = await stakingnftcontract.methods.Vault(counter_vault).call();\n        while (_vault.active) { \n          var _rewardcontract;\n          if (_vault.delegate != stakingnft_address){\n            _rewardcontract = await VaultRewardToken(_vault.delegate); \n          }\n          else{\n            _rewardcontract = await ABIFetch(web3, ABI.TOKENREWARD.ABI, _vault.tokenReward);\n          }\n          var _rewardSymbol = await _rewardcontract.methods.symbol().call(); \n\n          var _tbody_tr = document.createElement('tr');\n\n          var _tbody_td1 = document.createElement('td');\n  \n          var short_vault = (_vault.vaultName.length > 20 ? _vault.vaultName.substring(0, 20) + \"...\" : _vault.vaultName);\n          _tbody_td1.innerHTML = short_vault;  \n          _tbody_tr.appendChild(_tbody_td1);\n\n          var _tbody_td2 = document.createElement('td');\n          _tbody_td2.class='amount'; \n \n          if (_vault.reqBooster == false){ \n            _tbody_td1.className=\"textGlow\";  \n            _tbody_td2.className=\"textGlow\";  \n          }\n\n          var _span1 = document.createElement('span');\n          _span1.class = \"amount\";\n          _span1.innerHTML=Web3.utils.fromWei(_vault.rewardRate) + \" \";\n\n          var _span2 = document.createElement('span');\n          _span2.class = \"currency\";\n          _span2.innerHTML = _rewardSymbol;\n\n          _tbody_td2.appendChild(_span1);\n          _tbody_td2.appendChild(_span2);\n\n          _tbody_tr.appendChild(_tbody_td2);\n\n          _tbody.appendChild(_tbody_tr);\n\n          counter_vault += 1;\n          var _vault = await stakingnftcontract.methods.Vault(counter_vault).call();\n\n        }    \n        tbl.appendChild(_tbody);\n      }\n      catch(ex){\n        console.log(ex);\n      } \n    }\n \n\n    async function RefreshCollection() {      \n      if (account==null){\n        return;\n      }\n      var nftCol = document.getElementById(\"nftFilter\").value;  \n      resultAPICall = await APICall(account, scannerAPI);\n      await listNFT(account, 'unstaked-nft-container', resultAPICall, nftCol);\n    }\n\n    async function APICall(account, API) {\n      var theURL = API + \"=\" + account;\n      var apiResponse = await fetch(theURL);\n      var jsonParsedContents = await apiResponse.json();\n\n      return jsonParsedContents;\n    }\n\n    async function APIBalanceCall(_account, _CA, API) {\n      var theURL = API.replace('@CONTRACTADDRESS', _CA).replace('@ACCOUNT', _account);\n      var apiResponse = await fetch(theURL);\n      var jsonParsedContents = await apiResponse.json();\n\n      return jsonParsedContents;\n    }\n\n    async function WalletBalance(_account) {\n      var theURL = walletBalanceAPI.replace('@ACCOUNT', _account);\n      var apiResponse = await fetch(theURL);\n      var jsonParsedContents = await apiResponse.json();\n\n      var earnedrwd = Web3.utils.fromWei(jsonParsedContents.result);\n      var rewards = Number(earnedrwd).toFixed(3);\n\n      return '  ' + rewards + ' ' + defSymbol;\n    }\n\n    async function claimVault(_vaultId) {\n      try {\n        await onGoingNotif(\"Pending...\"); \n        var _vault = await stakingnftcontract.methods.Vault(_vaultId).call();\n\n        var _tkIDs = [];\n\n        var nftcontract = await ABIFetch(web3, ABI.ERC721.ABI, _vault.nftAddress);        \n        var balanceOfOwner = await nftcontract.methods.balanceOf(stakingnft_address).call(); \n\n        for (let j = 0; j < balanceOfOwner; j++) {\n          var _tkID = await nftcontract.methods.tokenOfOwnerByIndex(stakingnft_address, j).call();\n          var _nftStakeInfo = await stakingnftcontract.methods.nftStake(_vaultId, _tkID).call();\n          if (_nftStakeInfo.owner == account) { \n            _tkIDs.push(_tkID);\n          }\n        }\n  \n        await stakingnftcontract.methods.claim(_vaultId, _tkIDs).send({ from: account });\n        await refreshDAppView();\n\n      }\n      catch (ex) {\n        console.log('claimVault');\n        console.log(ex);\n      }\n      await onGoingNotif(\"\"); \n    } \n\n    async function modifyVault(_vaultId, _vaultContract) {\n      try {\n        await UnstakeMenuControl(true, true, true);\n\n        var tab_container = \"staked-nft-container\";\n        document.getElementById('staked-nft-container').innerHTML = \"\";\n \n        rewardInDetail = true;\n\n        vaultSelected = await scannercontract.methods.getVaultAddress(_vaultId).call();\n        nftcontract = await ABIFetch(web3, ABI.ERC721.ABI, vaultSelected);\n        await renderNFT(tab_container, nftcontract, vaultSelected, account, true);\n \n      }\n      catch (ex) {\n        console.log(ex);\n      }\n    }\n\n\n    async function onGoingNotif(msg) {\n      var btnConnect = document.getElementById('btnConnect');\n      if (msg == \"\") {\n        try {\n          hideCover();\n          tx_pending=false;\n        }\n        catch (ex) {\n        }\n\n        short_acct = account.substring(0, 6) + \"....\" + account.substring(account.length - 4, account.length);\n        var img = document.createElement('img');\n        img.className = \"ml-3\";\n        img.setAttribute(\"src\", 'chef.svg'); \n        btnConnect.innerHTML = short_acct;\n        btnConnect.appendChild(img);\n      }\n      else {\n        showCover();\n        btnConnect.innerHTML = \"\";\n        btnConnect.innerHTML = msg; \n      }\n    }\n\n    async function unstakeVault(_vaultId) {\n      try {\n        await onGoingNotif(\"Pending...\");\n\n        var _vault = await stakingnftcontract.methods.Vault(_vaultId).call();\n\n        var _tkIDs = [];\n        resultAPICall = await APIBalanceCall(stakingnft_address, _vault.nftAddress, balanceAPI);\n        nftcontract = await ABIFetch(web3, ABI.ERC721.ABI, _vault.nftAddress);\n\n        for (let i = 0; i < resultAPICall.result; i++) {\n          var _tkID = await nftcontract.methods.tokenOfOwnerByIndex(stakingnft_address, i).call();\n          var _nftStakeInfo = await stakingnftcontract.methods.nftStake(_vaultId, _tkID).call();\n          if (_nftStakeInfo.owner == account) {\n            _tkIDs.push(_tkID);\n          }\n        }\n        await stakingnftcontract.methods.unstake(_vaultId, _tkIDs).send({ from: account });\n        await refreshDAppView();\n      }\n      catch (ex) {\n        console.log('unstakeVault');\n        console.log(ex);\n      }\n      await onGoingNotif(\"\");\n    }\n\n    async function GetNFTLevel(_vaultId, _tkID){   \n      try{\n        var nftLevel = await nftlevelcontract.methods.getNFTLevel(_vaultId, _tkID).call(); \n        if (nftLevel != \"undefined\") {\n          return `Lv ${nftLevel}`;\n        }         \n      } \n      catch(ex){\n        return \"\";\n      }     \n    }\n\n    async function CheckRewards() {\n      if (isLoading || isRendering) {\n        return;\n      }\n      isLoading = true;\n\n      var _stakeVaults = new Array();\n      var _vaultId;\n      var _symbol = await rewardcontract.methods.symbol().call();\n\n      try {\n        var btnConnect = document.getElementById('btnConnect');\n        if (!btnConnect.innerHTML.includes(short_acct)) {\n          return;\n        }\n        var sWallBal = document.getElementById(\"wallBal\");\n        sWallBal.innerHTML = await WalletBalance(account);\n \n        var totalVaults = await scannercontract.methods.getTotalVault().call();\n\n        if (rewardInDetail == false) {\n\n          for (let i = 0; i < totalVaults; i++) {\n            var isAcctHasStakeOnVault = await scannercontract.methods.isAcctHasStakeOnVault(account, i).call();\n            if (isAcctHasStakeOnVault) {\n              _stakeVaults.push(i); \n            }\n          }\n\n          for (let i = 0; i < _stakeVaults.length; i++) {\n            _vaultId = _stakeVaults[i];  \n            var contractAdress = await scannercontract.methods.getVaultAddress(_vaultId).call();  \n\n            var divPend = document.getElementById(\"Pending\" + contractAdress);\n            var _pendingRewards = 0;\n\n            if (divPend != null) {\n              var result = await stakingnftcontract.methods.pendingRewardByAccount(_vaultId, account).call();\n              const { 0: _pend, 1: _stakeCount } = result;\n\n              var earned = String(_pend).split(\",\")[0];\n              var earnedrwd = Web3.utils.fromWei(earned);\n              _pendingRewards = Number(earnedrwd).toFixed(2);\n\n              //Custom Reward Token\n              var _vault = await stakingnftcontract.methods.Vault(_vaultId).call();\n              if (_vault.delegate != stakingnft_address) {\n                var _rewardcontract = await VaultRewardToken(_vault.delegate);\n                _symbol = await _rewardcontract.methods.symbol().call();\n              }\n              divPend.innerHTML = `Total: ${_stakeCount} | <h6 class='pendingRewards'> Earn: ${_pendingRewards} ${_symbol} </h6>`;\n            }\n          }\n        }\n        else if (rewardInDetail == true) {\n          try { \n            _vaultId = await stakingnftcontract.methods.getVaultId(vaultSelected).call(); \n            _pendingRewards = 0; \n\n            //Custom Reward Token\n            var _vault = await stakingnftcontract.methods.Vault(_vaultId).call();\n            if (_vault.delegate != stakingnft_address) {\n              var _rewardcontract = await VaultRewardToken(_vault.delegate);\n              _symbol = await _rewardcontract.methods.symbol().call();\n            }\n\n            var tokenIds = await getTokenIDs(_vaultId, account);\n            for (var i = 0; i < tokenIds.length; i++) {\n              var _tkID = tokenIds[i];\n              var _pend = await stakingnftcontract.methods.pendingReward(_vaultId, _tkID).call();\n              var earned = String(_pend).split(\",\")[0];\n              var earnedrwd = Web3.utils.fromWei(earned);\n              var rewards = Number(earnedrwd).toFixed(4);\n              _pendingRewards = Number(rewards).toFixed(4);\n\n              const objNFTPend = document.getElementById(\"att\" + _vaultId + _tkID);\n              objNFTPend.innerHTML = \"\";\n              objNFTPend.innerHTML = \"Earn: \" + _pendingRewards + \" \" + _symbol;\n\n\n              var nftLevel = await GetNFTLevel(_vaultId, _tkID);\n              const objNFTLvl = document.getElementById(\"lvl\" + _vaultId + _tkID);\n              objNFTLvl.innerHTML = \"\";\n              objNFTLvl.innerHTML = nftLevel;\n\n              var _nitroStakeRemaining;\n              try {\n                const result = await stakingnftcontract.methods.nitroStakeRemaining(_vaultId, _tkID).call();\n\n                const { 0: nitroID, 1: limit, 2: remain } = result;\n                _nitroStakeRemaining = remain;\n\n                var _nitroEquipped;\n                var _multipower;\n                var _powerFloat;\n                var nftLvlBonus;\n                var _lvlFloat;\n\n                _nitroEquipped = await stakingnftcontract.methods.getEquippedNitro(_vaultId, _tkID).call();\n                if (_nitroEquipped > 0) {\n                  _multipower = await stakingnftcontract.methods.getNitroPower(_vaultId, _nitroEquipped).call();\n                  _powerFloat = parseFloat(_multipower + '.00') / 100;\n                  nftLvlBonus = await nftlevelcontract.methods.getLevelBonus(_vaultId, _tkID).call();\n                  _lvlFloat = parseFloat(nftLvlBonus + '.00') / 100;\n                  _powerFloat = _powerFloat * _lvlFloat;\n \n                  if (_nitroStakeRemaining > 0) {\n                    var _glowNum = await nitrocontract.methods.getRareType(nitroID).call();\n\n                    var inSec = (_nitroStakeRemaining / 86400) * 24 * 60 * 60;\n\n                    var seconds = Number(inSec);\n                    var d = Math.floor(seconds / (3600 * 24));\n                    var h = Math.floor(seconds % (3600 * 24) / 3600);\n                    var m = Math.floor(seconds % 3600 / 60);\n                    var s = Math.floor(seconds % 60);\n\n                    var dDisplay = d > 0 ? d + (d == 1 ? \" day, \" : \" days, \") : \"\";\n                    var hDisplay = h > 0 ? h + (h == 1 ? \":\" : \":\") : \"\";\n                    var mDisplay = m > 0 ? m + (m == 1 ? \":\" : \":\") : \"\";\n                    var sDisplay = s > 0 ? s + (s == 1 ? \"\" : \"\") : \"\";\n                    var remainingBurn = dDisplay + hDisplay + mDisplay + sDisplay;\n \n                    document.getElementById(\"att2\" + _vaultId + _tkID).innerHTML = \"<span class='font-awesome-icons rocket'></span> \" + remainingBurn + ' left'\n                      + '</br> x' + _powerFloat.toFixed(2);\n                    document.getElementById(\"nft\" + _vaultId + \"|\" + _tkID).className = \"nftCard Equipped\" + _glowNum;\n\n                  }\n                  else {\n                    document.getElementById(\"att2\" + _vaultId + _tkID).innerHTML = 'x' + _powerFloat.toFixed(2);\n                  } \n                }\n              }\n              catch (ex3) {\n                console.log(\"Error in RewardInquiry - Detailed: \", ex3);\n              }\n            }\n          }\n          catch (ex2) {\n            console.log(ex2);\n          }\n        }\n      }\n      catch(ex1){\n        console.log(ex1);\n      }\n      isLoading = false; \n    }\n \n    async function UnstakeMenuControl(btnBack, btnClaim, btnUnstake) {\n      var _btnBack = document.getElementById(\"btnBack\");\n      var _btnClaim = document.getElementById(\"btnClaimSelected\");\n      var _btnUnstake = document.getElementById(\"btnUnstakeSelected\");\n\n      if ((btnBack == false) && (btnClaim == false) && (btnUnstake == false)) {\n        document.getElementById(\"btnUnstakeMenu\").style.display = \"none\";\n      }\n      else {\n        document.getElementById(\"btnUnstakeMenu\").style.display = \"\";\n      }\n\n      if (btnBack == false) {\n        _btnBack.setAttribute(\"disabled\", \"disabled\");\n        _btnBack.classList.add(\"disabled\");\n      }\n      else {\n        _btnBack.removeAttribute('disabled');\n        _btnBack.classList.remove(\"disabled\");\n      }\n\n      if (btnClaim == false) {\n        _btnClaim.setAttribute(\"disabled\", \"disabled\");\n        _btnClaim.classList.add(\"disabled\");\n      }\n      else {\n        _btnClaim.removeAttribute('disabled');\n        _btnClaim.classList.remove(\"disabled\");\n      }\n\n      if (btnUnstake == false) {\n        _btnUnstake.setAttribute(\"disabled\", \"disabled\");\n        _btnUnstake.classList.add(\"disabled\");\n      }\n      else {\n        _btnUnstake.removeAttribute('disabled');\n        _btnUnstake.classList.remove(\"disabled\");\n      }\n    }\n  \n    async function getTokenIDs(_vaultId, _account) {\n      var tokenIds = await scannercontract.methods.getStakeInVaultAccount(_vaultId, _account).call();\n      var tkns = new Array();\n      for (let j = 0; j < tokenIds.length; j++) {\n        if (tokenIds[j] > 0) {\n          tkns.push(tokenIds[j]);\n        }\n      }\n      return tkns;\n    }\n  \n    async function LoadVaults(tab_container){\n      if (account == null) {\n        return;\n      }\n      if(isRendering){\n        return;\n      }\n      isRendering = true;\n      onGoingNotif(\"Rendering NFTs...\");\n \n      await UnstakeMenuControl(false, false, false);\n\n      const DivContainer = document.getElementById(tab_container);\n      DivContainer.innerHTML = \"\";\n\n      if (width < 830) {\n        DivContainer.className = \"nft_card_view1\";\n      }\n      else if (width>=830 && width<1000){\n        DivContainer.className = \"nft_card_view2\";\n      }\n      else if (width>=1000 && width<1300){\n        DivContainer.className = \"nft_card_view3\";\n      }\n      else if(width>=1300){\n        DivContainer.className = \"nft_card_view4\";\n      }\n\n      var _vaultId;\n      var tokenIds;\n      var totalVaults = await scannercontract.methods.getTotalVault().call();\n      var isAcctHasStakeOnVault;\n      var _stakeVaults = new Array();\n      var contractAdress;\n      var usrCurrVault;\n      var _vaultContract;\n\n      for (let i=0; i<totalVaults; i++){\n        isAcctHasStakeOnVault = await scannercontract.methods.isAcctHasStakeOnVault(account, i).call();\n        if (isAcctHasStakeOnVault){\n          _stakeVaults.push(i);\n          usrCurrVault = i;\n        }\n      }\n \n      if (_stakeVaults.length==1){\n        rewardInDetail = true;\n        _vaultContract = await scannercontract.methods.getVaultAddress(usrCurrVault).call();\n        await modifyVault(usrCurrVault, _vaultContract);\n      }\n      else{\n        for (let i=0; i<_stakeVaults.length; i++){\n          _vaultId = _stakeVaults[i];\n          var _vaultInfo = await stakingnftcontract.methods.Vault(_vaultId).call();\n          if (_vaultInfo.active) {\n            contractAdress = _vaultInfo.nftAddress;\n            nftcontract = await ABIFetch(web3, ABI.ERC721.ABI, contractAdress);\n            var nftName = await nftcontract.methods.name().call();\n\n            tokenIds = await getTokenIDs(_vaultId, account);\n\n            var _tkID = 0;\n            for (var j = 0; j < tokenIds.length; j++) {\n              _tkID = tokenIds[j];\n              if (_tkID == 0) {\n                continue;\n              }\n\n              let tokenMetadataURI = await nftcontract.methods.tokenURI(_tkID).call();\n              if (tokenMetadataURI.startsWith(\"ipfs://\")) {\n                tokenMetadataURI = `https://ipfs.io/ipfs/${tokenMetadataURI.split(\"ipfs://\")[1]}`;\n              }\n              else if (tokenMetadataURI.startsWith(\"https://gateway.pinata.cloud/ipfs/\")) {\n                tokenMetadataURI = tokenMetadataURI.replace(`https://gateway.pinata.cloud/ipfs/`, ``);\n                tokenMetadataURI = `https://ipfs.io/ipfs/${tokenMetadataURI}${1}`;\n              }\n              var tokenMetadata = await fetch(tokenMetadataURI).then((response) => response.json());\n\n              (async function () {\n                const cardVault = document.createElement('div');\n                cardVault.className = \"vault_container\";\n                cardVault.id = contractAdress;\n                cardVault.value = _vaultId;\n\n                const cardVaultCard = document.createElement('div');\n                cardVaultCard.className = \"vault_card\";\n                if (isMobile) {\n                  cardVaultCard.className = \"vault_card-mobile\";\n                }\n\n                const cardVaultFront = document.createElement('div');\n                cardVaultFront.className = \"vault_front parent\";\n                if (isMobile) {\n                  cardVaultFront.className = \"vault_front-mobile parent\";\n                }\n\n                var imgNFT\n                if (tokenMetadata[\"image\"].includes(\"mp4\")) {\n                  imgNFT = document.createElement('video');\n\n                  const vid_source = document.createElement(\"source\");\n\n                  if (tokenMetadata[\"image\"].startsWith(\"ipfs://\")) {\n                    vid_source.setAttribute(\"src\", `https://ipfs.io/ipfs/${tokenMetadata[\"image\"].split(\"ipfs://\")[1]}`);\n                  }\n                  else {\n                    vid_source.setAttribute(\"src\", tokenMetadata[\"image\"]);\n                  }\n                  vid_source.setAttribute(\"type\", \"video/mp4\");\n                  imgNFT.appendChild(vid_source);\n                }\n                else {\n                  imgNFT = document.createElement('img');\n                  imgNFT.setAttribute(\"src\", '.\\loading.gif');\n\n                  var img_src = tokenMetadata[\"image\"];\n                  imgNFT.setAttribute(\"src\", img_src);\n                }\n                imgNFT.setAttribute(\"alt\", contractAdress);\n\n                const cardVaultDetails = document.createElement('div');\n                cardVaultDetails.className = \"vault_details\";\n\n                const cardH4 = document.createElement('h5');\n                cardH4.style.color = \"white\";\n                cardH4.className = \"VaultName\";\n                cardH4.innerHTML = (nftName.length > 15 ? nftName.substring(0, 10) + \"...\" : nftName) + \" Vault\";\n\n                const cardSpan = document.createElement('span');\n                cardSpan.className = \"spanX\"\n                cardSpan.id = \"Pending\" + contractAdress;\n                cardSpan.style.color = \"white\";\n                cardSpan.innerHTML = \"\";\n\n                cardVaultDetails.appendChild(cardH4);\n                cardVaultDetails.appendChild(cardSpan);\n\n                cardVaultFront.appendChild(imgNFT);\n                cardVaultFront.appendChild(cardVaultDetails);\n\n                const cardVaultBack = document.createElement('div');\n                cardVaultBack.className = \"vault_back\";\n\n                var _tbl = document.createElement('table');\n                var _tr = document.createElement('tr');\n                _tbl.appendChild(_tr);\n\n                var _attrdiv = document.createElement('div');\n                var nft_dtl = document.createElement('h6');\n                var _nftName = await nftcontract.methods.name().call();\n                var _symbl = await nftcontract.methods.symbol().call();\n                var _supply = await nftcontract.methods.totalSupply().call();\n                nft_dtl.innerHTML = \"Name: \" + _nftName + '</br>Symbol: ' + _symbl + '</br>Total Supply: ' + _supply;\n                _attrdiv.appendChild(nft_dtl);\n                _tbl.appendChild(_attrdiv);\n\n                var _tr2 = document.createElement('tr');\n                _tr2.className = \"vault_back_att\";\n\n                const cardButtonClaim = document.createElement('a');\n                cardButtonClaim.style.color = \"white\";\n                cardButtonClaim.innerHTML = \"Claim All \";\n                cardButtonClaim.className = \"back_attr\";\n                cardButtonClaim.onclick = function () { claimVault(cardVault.value); }\n\n                const cardButtonUnstake = document.createElement('a');\n                cardButtonUnstake.style.color = \"white\";\n                cardButtonUnstake.innerHTML = \"Unstake All \";\n                cardButtonUnstake.className = \"back_attr\";\n                cardButtonUnstake.onclick = function () { unstakeVault(cardVault.value); }\n\n                const cardButtonModify = document.createElement('a');\n                cardButtonModify.style.color = \"white\";\n                cardButtonModify.innerHTML = \"Modify\";\n                cardButtonModify.className = \"back_attr\";\n                cardButtonModify.onclick = function () { modifyVault(cardVault.value, cardVault.id); }\n\n                _tr2.appendChild(cardButtonClaim);\n                _tr2.appendChild(cardButtonUnstake);\n                _tr2.appendChild(cardButtonModify);\n\n                _tbl.appendChild(_tr2);\n                cardVaultBack.appendChild(_tbl);\n \n                cardVaultCard.appendChild(cardVaultFront);\n                cardVaultCard.appendChild(cardVaultBack);\n\n                cardVault.appendChild(cardVaultCard);\n\n                DivContainer.appendChild(cardVault);\n              })(); \n              break; \n            }\n          }\n        }\n      } \n      isRendering = false;\n      onGoingNotif(\"\"); \n    }\n \n    async function listNFT(_account, tab_container, jsonParsedContents, filterList) {\n      try {\n        var userNFTHold = 0;\n        var btnStakeAll = document.getElementById(\"btnStakeAll\");\n        var btnStakeSelected = document.getElementById(\"btnStakeSelected\");\n\n        document.getElementById(tab_container).innerHTML = \"\"; \n\n        if (filterList == \"All\" || filterList == \"All Owned NFT\") {\n          btnStakeAll.setAttribute('disabled', 'disabled');\n          btnStakeSelected.setAttribute('disabled', 'disabled');\n\n          //Populate List NFT \n          if (jsonParsedContents != null) {  \n            for (var key in CONFIGWhitelist.NFT) {\n              for (let i = 0; i < jsonParsedContents.result.length; i++) { \n\n                if (jsonParsedContents.result[i].type == \"ERC-721\") {\n                  if (CONFIGWhitelist.NFT[key].ADDRESS == jsonParsedContents.result[i].contractAddress) {\n                    nftcontract = await ABIFetch(web3, ABI.ERC721.ABI, jsonParsedContents.result[i].contractAddress);\n                    userNFTHold = userNFTHold + (await renderNFT(tab_container, nftcontract, jsonParsedContents.result[i].contractAddress, _account));  //myHoldNFT\n                    break;\n                  }\n                }\n              }\n            }\n\n            //All other ERC-721\n            var ctr;\n            for (let i = 0; i < jsonParsedContents.result.length; i++) {\n                if (jsonParsedContents.result[i].type == \"ERC-721\" && nitroboost_address.toUpperCase() != jsonParsedContents.result[i].contractAddress.toUpperCase()) {\n                ctr = 0;\n                for (var key in CONFIGWhitelist.NFT) {\n                  if (CONFIGWhitelist.NFT[key].ADDRESS != jsonParsedContents.result[i].contractAddress) {\n                    ctr++;\n                  }\n                }\n                if (ctr >= CONFIGWhitelist.NFT.length) {\n                  nftcontract = await ABIFetch(web3, ABI.ERC721.ABI, jsonParsedContents.result[i].contractAddress);  \n                  userNFTHold = userNFTHold + (await renderNFT(tab_container, nftcontract, jsonParsedContents.result[i].contractAddress, _account));  //myHoldNFT\n                }\n              }\n            }\n          }\n        }\n        else {\n          nftcontract = await ABIFetch(web3, ABI.ERC721.ABI, filterList); \n          userNFTHold = userNFTHold + (await renderNFT(tab_container, nftcontract, filterList, _account));   \n          btnStakeAll.removeAttribute('disabled');\n          btnStakeSelected.removeAttribute('disabled');\n        }\n\n        if (userNFTHold == 0) {\n          ShowNFTError(\"NO NFT SCANNED.\");\n        }\n      }\n\n      catch (ex) {\n        console.log('listNFT - SeeError - ' + ex);\n        ShowNFTError(ex);\n      }\n    }\n\n    async function ABIFetch(web3, _abi, _address) {\n      var _contract;\n      var ABIResponse;\n\n      ABIResponse = await fetch(_abi, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n        },\n      });\n      const ABIJSON = await ABIResponse.json();\n      _contract = new web3.eth.Contract(ABIJSON, _address);\n      return _contract;\n    }\n\n    async function listNFTFilter(jsonParsedContents) {\n      var lstNFT = document.getElementById(\"nftFilter\");\n      lstNFT.innerHTML = \"\";\n\n      for (let i = 0; i < jsonParsedContents.result.length; i++) {\n        if (i == 0) {\n          var z_1 = document.createElement(\"option\");\n          z_1.setAttribute(\"value\", \"All\");\n          var t_1 = document.createTextNode(\"All Owned NFT\");\n\n          z_1.appendChild(t_1);\n          lstNFT.appendChild(z_1);\n        }\n\n        if (jsonParsedContents.result[i].type == \"ERC-721\" && jsonParsedContents.result[i].balance > 0 && nitroboost_address.toUpperCase() != jsonParsedContents.result[i].contractAddress.toUpperCase()) {\n          var z = document.createElement(\"option\");\n          z.setAttribute(\"value\", jsonParsedContents.result[i].contractAddress);\n\n          var t = document.createTextNode(jsonParsedContents.result[i].name + \": \" + jsonParsedContents.result[i].balance);\n          z.appendChild(t);\n\n          lstNFT.appendChild(z);\n        } \n      }\n    }\n\n    async function fetchNFTImage(nftcontract, _account, tkID, _caller) {\n      var tokenMetadata = null;\n      try {\n        let tokenMetadataURI = await nftcontract.methods.tokenURI(tkID).call();  \n\n        if (tokenMetadataURI.startsWith(\"ipfs://\")) {\n          tokenMetadataURI = `https://ipfs.io/ipfs/${tokenMetadataURI.split(\"ipfs://\")[1]}`;\n        }\n        else if (tokenMetadataURI.startsWith(\"https://gateway.pinata.cloud/ipfs/\")) {\n          tokenMetadataURI = tokenMetadataURI.replace(`https://gateway.pinata.cloud/ipfs/`, ``);\n          tokenMetadataURI = `https://ipfs.io/ipfs/${tokenMetadataURI}${tkID}`;\n        }\n        tokenMetadata = await fetch(tokenMetadataURI).then((response) => response.json());\n\n      }\n      catch (ex) {\n        var uri = \"https://raw.githubusercontent.com/cryptobugnft/nitro/main/tank/InvalidURI.json\";\n        tokenMetadata = await fetch(uri).then((response) => response.json());\n        console.log('Caller - ' + _caller, ex);\n      } \n      return tokenMetadata; \n    }\n  \n    async function renderNFT(tab_container, nftcontract, contractAdress, _account, isStaked){\n      var nftName = await nftcontract.methods.name().call();\n      var balanceOfOwner;  \n\n      var tokenIds;\n      if (isStaked){        \n        var _vaultId = await stakingnftcontract.methods.getVaultId(contractAdress).call();\n        tokenIds = await getTokenIDs(_vaultId, _account); \n        balanceOfOwner = tokenIds.length;\n      }\n      else{\n        balanceOfOwner = await nftcontract.methods.balanceOf(_account).call();  \n      }\n\n      var nftContainer = document.getElementById(tab_container); \n      var nftCard;\n        var nftTable;\n      var nftMedia;\n        var nftTD;\n          var nftLvl;\n          var nftChk;\n          var nftLbl;\n          var nftImg;\n      var nftAtt;\n        var nftAttTD;\n          var nftTxt1;\n          var nftTxt2;\n          var nftBtn;\n          var nftTxt3;\n      try{\n\n        if (width>=400 && width<850){\n          nftContainer.className = \"nft_card_view2\";\n        }\n        else if (width>=850 && width<1000){\n          nftContainer.className = \"nft_card_view3\";\n        }\n        else if (width>=1000 && width<1300){\n          nftContainer.className = \"nft_card_view4\";\n        }\n        else if(width>=1300){\n          nftContainer.className = \"nft_card_view5\";\n        }\n\n        onGoingNotif(\"Loading...\");\n        for (let i = 0; i < balanceOfOwner; i++){\n          (async function (){\n            var tkID;\n\n            if (isStaked){\n              if (tokenIds[i]==0){\n                return;\n              }\n              tkID = tokenIds[i];\n            }\n            else{\n              tkID = await nftcontract.methods.tokenOfOwnerByIndex(_account, i).call();\n            }\n            \n            const tokenMetadata = await fetchNFTImage(nftcontract, _account, tkID, 'renderNFT');  \n            const _vaultId = await stakingnftcontract.methods.getVaultId(contractAdress).call();\n             \n\n            nftCard = document.createElement(\"div\");\n            nftCard.id = \"nft\" + _vaultId + \"|\" + tkID;\n            nftCard.className = \"nftCard\";\n\n            nftTable = document.createElement(\"TABLE\");\n            nftTable.setAttribute(\"id\", \"tbl\" + _vaultId + tkID);\n            nftCard.appendChild(nftTable);\n\n            nftMedia = document.createElement(\"TR\");\n            nftMedia.className = \"nftMedia\";\n            nftTable.appendChild(nftMedia);\n\n            nftTD = document.createElement(\"TD\");\n            nftTD.className = \"nftTD\";\n            nftMedia.appendChild(nftTD);\n\n            nftLvl = document.createElement('h6');\n            nftLvl.id = \"lvl\" + _vaultId + tkID;\n            nftLvl.className = \"nftLvl\";\n            nftLvl.innerHTML = \"\"\n            nftTD.appendChild(nftLvl);\n\n            nftChk = document.createElement(\"INPUT\");\n            nftChk.setAttribute(\"type\", \"checkbox\");\n            nftChk.id = contractAdress + \"_\" + tkID;\n            nftChk.className = \"nftChk\";\n            nftTD.appendChild(nftChk);\n \n            nftLbl = document.createElement(\"LABEL\");\n            nftLbl.className = \"parent\";\n            nftLbl.htmlFor = nftChk.id;\n            nftTD.appendChild(nftLbl);\n\n            if (tokenMetadata[\"image\"].includes(\"mp4\")) {\n              nftImg = document.createElement('video');\n              const vid_source = document.createElement(\"source\");\n              if (tokenMetadata[\"image\"].startsWith(\"ipfs://\")) {\n                vid_source.setAttribute(\"src\", `https://ipfs.io/ipfs/${tokenMetadata[\"image\"].split(\"ipfs://\")[1]}`);\n              }\n              else {\n                vid_source.setAttribute(\"src\", tokenMetadata[\"image\"]);\n              }\n              vid_source.setAttribute(\"type\", \"video/mp4\");\n              nftImg.appendChild(vid_source);\n            }\n            else {\n              try{\n                nftImg = document.createElement('img');\n                var _imgFix = tokenMetadata[\"image\"];\n                if (_imgFix.startsWith(\"ipfs://\")) {\n                  _imgFix = `https://ipfs.io/ipfs/${_imgFix.replace(\"ipfs://\", '')}`\n                }\n                else if (_imgFix.startsWith(\"https://cattos.mypinata.cloud/ipfs/\")) {\n                  _imgFix = _imgFix.replace(`https://cattos.mypinata.cloud/ipfs/`, `https://gateway.ipfs.io/ipfs/`);\n                }\n                nftImg.setAttribute(\"src\", _imgFix);\n              }\n              catch(img_er){\n                console.log(\"renderNFT:\", img_er);\n                nftImg.setAttribute(\"src\", \"hidden.jpg\");\n              }\n            }\n            nftImg.setAttribute(\"alt\", \"Error loading image\");\n            nftImg.className=\"nftImg\";\n            nftLbl.appendChild(nftImg);\n             \n            nftAtt = document.createElement(\"TR\");\n            nftAtt.className = \"nftAtt\";\n            nftTable.appendChild(nftAtt);\n\n            nftAttTD = document.createElement(\"TD\");\n            nftAttTD.className = \"nftAttTD\";\n            nftAtt.appendChild(nftAttTD);\n\n \n            nftTxt1 = document.createElement('h6');\n            nftTxt1.id = \"stk\" + _vaultId + tkID;\n            nftTxt1.className = \"nftTxt1\";\n            nftTxt1.innerHTML = (nftName.length > 20 ? nftName.substring(0, 20) : nftName) + ` #` + (tkID.length > 5 ? tkID.substring(1, 5) : tkID);\n            nftAttTD.appendChild(nftTxt1); \n\n            nftTxt2 = document.createElement('h6');\n            nftTxt2.id = \"att\" + _vaultId + tkID;\n            nftTxt2.className = \"nftTxt2\";\n            nftTxt2.innerHTML = \"\";\n            nftAttTD.appendChild(nftTxt2); \n\n            nftBtn = document.createElement('button');\n            nftBtn.type = \"button\";\n            nftBtn.className = \"nftBtn\";\n            nftBtn.style = \"{{ fontFamily: 'SF Pro Display' }}\";\n            nftBtn.innerHTML = \"+\";\n\n            if (isStaked){              \n              nftBtn.onclick = function () {\n                showPrompt(_vaultId + \"|\" + tkID, function (value) {\n                });\n              };\n            }\n            else{              \n              nftBtn.onclick = function () {\n                showPromptTransfer(_vaultId + \"|\" + tkID + \"|\" + contractAdress, function (value) {\n                });\n              };\n            }\n\n            nftAttTD.appendChild(nftBtn); \n \n            nftTxt3 = document.createElement('h6');\n            nftTxt3.id = \"att2\" + _vaultId + tkID;\n            nftTxt3.className = \"nftTxt3\";\n            nftTxt3.innerHTML = \"\";\n            nftAttTD.appendChild(nftTxt3); \n\n            nftContainer.appendChild(nftCard);\n\n          })();\n        }\n        onGoingNotif(\"\");\n        return balanceOfOwner;\n\n\n      }\n      catch(ex){\n        ShowNFTError(nftcontract + \" - Error on reading token URI\");\n        console.log(\"renderNFT\", ex);\n      }\n    }\n\n    async function ShowNFTCard(tab_container, nftcontract, contractAdress, _account, isStaked) {\n      var nftName = await nftcontract.methods.name().call();\n      var balanceOfOwner = await nftcontract.methods.balanceOf(_account).call();\n      var DivContainer = document.getElementById(tab_container);\n      var nftcontainer;\n      var objNFTPend;\n      var objNFTNitroEquip;\n      var btnPowerUp;\n      var imgNFT;\n\n      var mismatchNFT; \n\n      try {\n        for (let i = 0; i < balanceOfOwner; i++) {\n          (async function () {\n            try {\n              var tkID = await nftcontract.methods.tokenOfOwnerByIndex(_account, i).call();\n              const tokenMetadata = await fetchNFTImage(nftcontract, _account, tkID, 'ShowNFTCard');\n              var _vaultId = await stakingnftcontract.methods.getVaultId(contractAdress).call();\n              var _checkAdd = stakingnftcontract.methods.Vault(_vaultId).call();\n              \n              mismatchNFT = false;\n              if (_checkAdd.nftAddress != contractAdress) {\n                mismatchNFT = true;\n              }\n\n              var _nftStakeInfo = await stakingnftcontract.methods.nftStake(_vaultId, tkID).call();\n              if (isStaked) {\n                if (_nftStakeInfo.owner != account) {\n                  return;\n                }\n              }\n\n              nftcontainer = document.createElement(\"div\");\n              nftcontainer.id = \"nftcontainer_\" + _vaultId + \"_\" + tkID; \n              if (isMobile) {\n                nftcontainer.className = \"nftcontainer-mobile\";\n              }\n              else {\n                nftcontainer.className = \"nftcontainer\";\n              }\n\n              const nftdetail = document.createElement('div');\n              nftdetail.id = \"nftdetail_\" + _vaultId + \"_\" + tkID;\n              nftdetail.className = \"nftdetail\";\n\n              const chk = document.createElement(\"INPUT\");\n              chk.setAttribute(\"type\", \"checkbox\");\n              chk.id = contractAdress + \"_\" + tkID;\n              chk.className = \"unlisted\";\n\n              const lbl = document.createElement(\"LABEL\");\n              lbl.className = \"parent\";\n              lbl.htmlFor = chk.id;\n\n              if (tokenMetadata[\"image\"].includes(\"mp4\")) {\n                imgNFT = document.createElement('video');\n              }\n              else {\n                imgNFT = document.createElement('img');\n              }\n              if (isMobile) {\n                imgNFT.className = \"image-mobile\";\n              }\n              else {\n                imgNFT.className = \"image\";\n              }\n\n              if (tokenMetadata[\"image\"].includes(\"mp4\")) {\n\n                const vid_source = document.createElement(\"source\");\n                if (tokenMetadata[\"image\"].startsWith(\"ipfs://\")) {\n                  vid_source.setAttribute(\"src\", `https://ipfs.io/ipfs/${tokenMetadata[\"image\"].split(\"ipfs://\")[1]}`);\n                }\n                else {\n                  vid_source.setAttribute(\"src\", tokenMetadata[\"image\"]);\n                }\n\n                vid_source.setAttribute(\"type\", \"video/mp4\");\n                imgNFT.appendChild(vid_source);\n              }\n              else {\n                var _imgFix = tokenMetadata[\"image\"];\n                if (_imgFix.startsWith(\"ipfs://\")) {\n                  _imgFix = `https://ipfs.io/ipfs/${_imgFix.replace(\"ipfs://\", '')}`\n                }\n                imgNFT.setAttribute(\"src\", _imgFix);\n              } \n              imgNFT.setAttribute(\"alt\", \"Error loading image\");  \n \n              var _level = await nftlevelcontract.methods.getNFTLevel(_vaultId, tkID).call();\n              if(_level>0){\n                _level = \"(Lv\" + _level + \")\"; \n              }\n              else{\n                _level=\"\";\n              }\n\n              const objNFT = document.createElement('h6');\n              objNFT.id = \"stk\" + _vaultId + tkID;\n              objNFT.className = \"h6nftName\";\n              objNFT.innerHTML = (nftName.length > 20 ? nftName.substring(1, 20) : nftName) + ` #` + (tkID.length > 5 ? tkID.substring(1, 5) : tkID) + _level;\n\n              lbl.appendChild(imgNFT);\n              nftcontainer.appendChild(chk);\n              nftcontainer.appendChild(lbl);\n\n              nftdetail.appendChild(objNFT);\n              nftcontainer.appendChild(nftdetail);\n\n              /* Begin - For Staked NFT Only */\n              if (isStaked) {\n \n                objNFTPend = document.createElement('h6');\n                objNFTPend.className = \"h6pendingEarn\";\n                objNFTPend.id = \"pend\" + _vaultId + tkID;\n                objNFTPend.innerHTML = \"\";\n\n                objNFTNitroEquip = document.createElement('h6');\n                objNFTNitroEquip.className = \"h6nitroEquip\";\n                objNFTNitroEquip.id = \"nitro\" + _vaultId + tkID;\n                objNFTNitroEquip.innerHTML = \"\";\n\n                btnPowerUp = document.createElement('button');\n                btnPowerUp.type = \"button\";\n                btnPowerUp.className = \"powerUpButton\";\n                btnPowerUp.style = \"{{ fontFamily: 'SF Pro Display' }}\";\n                btnPowerUp.innerHTML = \"+\";\n\n                btnPowerUp.onclick = function () {\n                  showPrompt(_vaultId + \"|\" + tkID, function (value) {\n                  });\n                };\n                nftdetail.appendChild(objNFTNitroEquip);\n                nftcontainer.appendChild(objNFTPend);\n                nftcontainer.appendChild(btnPowerUp);\n              }\n              /* End - For Staked NFT Only */\n\n              /*Put Transfer NFT if Not Staked*/\n              else {\n\n                btnPowerUp = document.createElement('button');\n                btnPowerUp.type = \"button\";\n                btnPowerUp.className = \"transferButton\";\n                btnPowerUp.style = \"{{ fontFamily: 'SF Pro Display' }}\";\n                btnPowerUp.innerHTML = \"+\";\n\n                if (mismatchNFT) {\n                  btnPowerUp.onclick = function () {\n                    showPromptTransfer(\"-1|\" + tkID + \"|\" + contractAdress, function (value) {\n                    });\n                  };\n                }\n                else {\n                  btnPowerUp.onclick = function () {\n                    showPromptTransfer(_vaultId + \"|\" + tkID + \"|\" + contractAdress, function (value) {\n                    });\n                  };\n                } \n                nftcontainer.appendChild(btnPowerUp)\n              } \n              DivContainer.appendChild(nftcontainer); \n            }\n            catch (ex2) {\n              ShowNFTError(nftName + \" - Error on reading token URI\");\n              console.log('ShowNFTErrorCard', ex2);\n            }\n\n          })();\n        }\n\n        return balanceOfOwner;\n      }\n      catch (ex) {\n        console.log('Error on ShowNFTCard', ex);\n      }\n    }\n\n    async function UnstakeSelected() {\n      ClaimThem(true);\n    }\n\n    async function ClaimSelected() {\n      ClaimThem(false);\n    }\n\n    async function BackToCollection() { \n      await LoadVaults('staked-nft-container');\n    }\n\n    async function ClaimThem(unstake) {\n      try {        \n        if (account==null){\n          return;\n        }\n\n        isLoading = true; \n        await onGoingNotif(\"Pending...\");\n\n        const DivContainer = document.getElementById('staked-nft-container');\n        var children = DivContainer.getElementsByTagName('*');\n        var elements = [], child;\n        for (var i = 0; i < children.length; i++) {\n          child = children[i];\n          if (child.type == \"checkbox\" && child.checked == true) {\n            elements.push(child);\n          }\n        }\n\n        var tkIDs = [];\n        var _vaultId;\n\n        //loop for getting staked vault\n        for (var j = 0; j < elements.length; j++) {\n          var nft = [];\n          nft = elements[j].id.split(\"_\");\n          _vaultId = await stakingnftcontract.methods.getVaultId(nft[0]).call();\n\n          tkIDs.push(nft[1]);\n        }\n\n        if (unstake) {\n          await stakingnftcontract.methods.unstake(_vaultId, tkIDs).send({ from: account });\n        }\n        else {\n          await stakingnftcontract.methods.claim(_vaultId, tkIDs).send({ from: account });\n        }\n        BackToCollection();\n        isLoading = false;\n\n      }\n      catch (ex) {\n        console.log(\"ClaimThem - \" + ex);\n      }\n      await onGoingNotif(\"\");\n    }\n\n    async function addToken(tokenAddress, tokenSymbol, tokenDecimals, tokenImage){\n      const wasAdded = await window.ethereum.request({\n        method: 'wallet_watchAsset',\n        params: {\n          type: 'ERC20', // Initially only supports ERC20, but eventually more!\n          options: {\n            address: tokenAddress, // The address that the token is at.\n            symbol: tokenSymbol, // A ticker symbol or shorthand, up to 5 chars.\n            decimals: tokenDecimals, // The number of decimals in the token\n            image: tokenImage, // A string url of the token logo\n          },\n        },\n      }); \n    }\n  \n    async function StakeAll() {      \n      if (account==null){\n        return;\n      }\n\n      const DivContainer = document.getElementById('unstaked-nft-container');\n      var children = DivContainer.getElementsByTagName('*');\n      var elements = [], child;\n  \n      for (var i = 0; i < children.length; i++) {\n        child = children[i];\n        if (child.type == \"checkbox\") {\n          elements.push(child);\n        }\n      }\n\n      if (elements.length == 0) {\n        return;\n      }\n\n      var _isNFTAppr = false;\n      var address;\n      var tkIDs = [];\n\n      var _reject = false;\n\n      for (var i = 0; i < elements.length; i++) {\n        var nft = [];\n        nft = elements[i].id.replace(\"chk\", \"\").split(\"_\");\n\n        if (_isNFTAppr == false) {\n          address = nft[0];\n          await onGoingNotif(\"Approve All\");\n          _isNFTAppr = await nftApproveAll(address);\n\n          if (_isNFTAppr == false) {\n            _reject = true;\n            await onGoingNotif(\"\");\n            return;\n          }\n          await onGoingNotif(\"Pending...\");\n        }\n\n        tkIDs.push(nft[1]);\n      }\n\n      if (await isWhitelist(address)) {\n        var _vaultId = await stakingnftcontract.methods.getVaultId(address).call();\n        await stakingnftcontract.methods.stake(_vaultId, tkIDs).send({ from: account });\n      }\n      else {\n        await stakingnftcontract.methods.stakeAny(address, tkIDs, true).send({ from: account });\n      }\n      await refreshDAppView();\n      await onGoingNotif(\"\");\n\n\n    }\n\n    async function StakeThem() {\n      try {        \n        if (account==null){\n          return;\n        }\n        await onGoingNotif(\"Pending...\");\n\n        const DivContainer = document.getElementById('unstaked-nft-container');\n        var children = DivContainer.getElementsByTagName('*');\n        var elements = [], child;\n        for (var i = 0; i < children.length; i++) {\n          child = children[i];\n          if (child.type == \"checkbox\" && child.checked == true) {\n            elements.push(child);\n          }\n        }\n\n        var _isNFTAppr = false;\n        var address;\n        var tkIDs = [];\n\n        var _reject = false;\n\n        for (var i = 0; i < elements.length; i++) {\n          var nft = [];\n          nft = elements[i].id.replace(\"chk\", \"\").split(\"_\");\n\n          if (_isNFTAppr == false) {\n            address = nft[0];\n              await onGoingNotif(\"\");\n              await onGoingNotif(\"Approve All\");\n            _isNFTAppr = await nftApproveAll(address);\n\n            if (_isNFTAppr == false) {\n              _reject = true;\n              await onGoingNotif(\"\");\n              return;\n            }\n            await onGoingNotif(\"Pending...\");\n          }\n          tkIDs.push(nft[1]);\n        }\n\n        if (await isWhitelist(address)) {\n          var _vaultId = await stakingnftcontract.methods.getVaultId(address).call();\n          await stakingnftcontract.methods.stake(_vaultId, tkIDs).send({ from: account });\n        }\n        else {\n          await stakingnftcontract.methods.stakeAny(address, tkIDs, true).send({ from: account });\n        }\n        await refreshDAppView();\n        await onGoingNotif(\"\");\n      }\n      catch (ex) {\n        console.log(\"StakeThem - \" + ex);\n      }\n      await onGoingNotif(\"\");\n\n    }\n\n    async function refreshDAppView() {\n      await RefreshCollection();\n      console.log(resultAPICall);\n      await listNFTFilter(resultAPICall);\n      //await stakeVaults('staked-nft-container');\n      await LoadVaults('staked-nft-container');\n      await onGoingNotif(\"\");\n    }\n\n    async function nftApproveAll(address) {\n      try {\n        var _nftcontract = await ABIFetch(web3, ABI.ERC721.ABI, address);\n        var _isAppr = await _nftcontract.methods.isApprovedForAll(account, stakingnft_address).call();\n        if (_isAppr == false) {\n          await _nftcontract.methods.setApprovalForAll(stakingnft_address, true).send({ from: account })\n        }\n        return true;\n      }\n      catch (ex) {\n        console.log(address);\n        console.log(\"nftApproveAll - \" + ex);\n        return false;\n      }\n\n    }\n\n    async function isWhitelist(address) {\n      var _res = false;\n      try {\n        for (var key in CONFIGWhitelist.NFT) {\n          if (CONFIGWhitelist.NFT[key].ADDRESS == address) {\n            _res = true;\n            break;\n          }\n        }\n      }\n      catch (ex) {\n        console.log(\"isWhitelist - \" + ex);\n      }\n      return _res;\n    }\n\n    async function ShowNFTError(msgValue) {\n      const DivContainer = document.getElementById('unstaked-nft-container');\n\n      const curDiv = document.createElement('div');\n      curDiv.className = \"nftcontainer\";  // mt-3 ml-3\";\n\n      const chk = document.createElement(\"INPUT\");\n      chk.setAttribute(\"type\", \"checkbox\");\n      chk.id = \"chk\";\n      chk.className = \"unlisted\";\n\n      const lbl = document.createElement(\"LABEL\");\n      lbl.htmlFor = chk.id;\n\n      const objNFT = document.createElement('h6');\n      objNFT.innerHTML = msgValue;\n      objNFT.className = \"errorMessage\";\n\n      curDiv.appendChild(chk);\n      curDiv.appendChild(lbl);\n\n      curDiv.appendChild(objNFT);\n      DivContainer.appendChild(curDiv);\n    }\n\n    async function showCover() {\n      let coverDiv = document.createElement('div');\n      coverDiv.id = 'cover-div'; \n\n      // make the page unscrollable while the modal form is open\n      document.body.style.overflowY = 'hidden';\n      document.body.append(coverDiv);\n    }\n\n    async function SendNFT(nftAdd, destiAdd, tkID) {\n      try {\n        await onGoingNotif(\"Sending NFT...\");\n\n        nftcontract = await ABIFetch(web3, ABI.ERC721.ABI, nftAdd); \n\n        if (await nftcontract.methods.isApprovedForAll(account, stakingnft_address).call()==false){\n          await nftcontract.methods.setApprovalForAll(stakingnft_address, true).send({ from: account});\n        }\n\n        await nftcontract.methods.safeTransferFrom(account, destiAdd, tkID).send({ from: account });\n        await refreshDAppView();\n\n        await onGoingNotif(\"\");\n      }\n      catch (ex) {\n        console.log(ex);\n        await onGoingNotif(\"\");\n      }\n    }\n\n    async function NitroAdd() {\n      await onGoingNotif(\"Pending...\");\n      try {\n        let DivContainer = document.getElementById('prompt-message');\n        if (isMobile){\n          DivContainer = document.getElementById('prompt-message-mobile');\n        }\n        var children = DivContainer.getElementsByTagName('*');\n        var child;\n\n        if (children.length > 0) {\n\n          var _isAppr = await nitrocontract.methods.isApprovedForAll(account, stakingnft_address).call();\n          if (_isAppr == false) {\n            await nitrocontract.methods.setApprovalForAll(stakingnft_address, true)\n              .send({\n                from: account,\n                gasLimit: String(totalGasLimit)\n              })\n          }\n\n          for (var i = 0; i < children.length; i++) {\n            child = children[i];\n            if (child.type == \"radio\" && child.checked == true) {\n              var nft = [];\n              nft = child.id.split(\"|\");\n\n              var _vaultId = nft[0];\n              var _tkID = nft[1];\n              var _nitroId = nft[2]; \n\n              await stakingnftcontract.methods.stakeNitro(_vaultId, _tkID, _nitroId)\n                .send({\n                  from: account \n                });\n              break;\n            }\n          }\n        }\n      }\n      catch (ex) {\n        console.log(ex);\n      }\n      await onGoingNotif(\"\");\n    }\n\n    async function hideCover() {\n      try {\n        document.getElementById('cover-div').remove();\n        document.body.style.overflowY = '';\n      }\n      catch (ex) {\n      }\n    }\n\n    async function showPromptTransfer(text, callback) {\n      showCover();\n \n      var _nft = [];\n      _nft = text.split(\"|\");\n      var _vaultId = _nft[0];\n \n      //Highlight the selected NFT\n      document.getElementById('nft' + _nft[0] + '|' + _nft[1]).className=\"nftCard SelectedNFT\";\n\n      var _vault;\n      if (_vaultId == -1) {\n        nftcontract = await ABIFetch(web3, ABI.ERC721.ABI, _nft[2]);\n      }\n      else {\n        _vault = await stakingnftcontract.methods.Vault(_vaultId).call();\n        nftcontract = await ABIFetch(web3, ABI.ERC721.ABI, _vault.nftAddress);\n      }\n\n      var _nftName = await nftcontract.methods.name().call();\n\n      \n      let form = document.getElementById('prompt-form');\n      if (isMobile){\n        form = document.getElementById('prompt-form-mobile');\n      }\n\n      let container = document.getElementById('prompt-form-container');\n      let msg = document.getElementById('prompt-message');\n      if (isMobile){\n        msg = document.getElementById('prompt-message-mobile');\n      }\n\n      var h6NFTAddy = document.createElement('h5');\n      h6NFTAddy.className = \"h6Nitro\";\n      form.className = \"transfer-width\";\n\n      var txAdd;\n      if (_vaultId == -1) {\n        h6NFTAddy.innerHTML = _nftName + \" #\" + _nft[1] + \"<br>\" + _nft[2] + \"<br>\";\n        txAdd = _nft[2];\n      }\n      else {\n        h6NFTAddy.innerHTML = _nftName + \" #\" + _nft[1] + \"<br>\" + _vault.nftAddress + \"<br>\";\n        txAdd = _vault.nftAddress;\n      }\n\n      var h6Caption = document.createElement('h6');\n      h6Caption.className = \"h6Nitro\";\n      h6Caption.innerHTML = \"Transfer NFT to (Input Wallet Address)\";\n\n      var x = document.createElement(\"INPUT\");\n      x.id = text;\n      x.placeholder = \"0x0000000000000000000000000000000000000000\";\n      x.setAttribute(\"type\", \"text\");\n\n      var curDiv = document.createElement('div');\n      curDiv.className = \"transfer-nft\";\n      msg.className = \"\";\n      msg.innerHTML = \"\";\n\n      var btnSubmit = document.getElementById('btnSubmit');\n      btnSubmit.value = \"Send\";\n\n      curDiv.appendChild(h6NFTAddy);\n      curDiv.appendChild(h6Caption);\n      curDiv.appendChild(x);\n\n      msg.appendChild(curDiv);\n\n\n      function complete(value) {\n        if (value == \"submit\") {\n          SendNFT(txAdd, x.value, _nft[1]);\n        }\n        hideCover();\n        container.style.display = 'none';\n        document.onkeydown = null;\n        callback(value);\n      }\n\n      form.onsubmit = function () {\n        let value = \"submit\";\n        document.getElementById('nft' + _nft[0] + '|' + _nft[1]).className=\"nftCard\";\n        complete(value);\n        return false;\n      };\n\n      form.cancel.onclick = function () {\n        document.getElementById('nft' + _nft[0] + '|' + _nft[1]).className=\"nftCard\";\n        complete(null);\n      };\n\n      document.onkeydown = function (e) {\n        if (e.key == 'Escape') {\n          document.getElementById('nft' + _nft[0] + '|' + _nft[1]).className=\"nftCard\";\n          complete(null);\n        }\n      };\n      container.style.display = 'block';\n    }\n\n    async function showLoading() {\n      let form = document.getElementById('prompt-form');\n      let container = document.getElementById('prompt-form-container');\n\n      let DivContainer = document.getElementById('prompt-message');\n\n      showCover(); \n      DivContainer.innerHTML = \"\";\n\n      const lbl = document.createElement(\"LABEL\");\n      lbl.className = \"parent\";\n\n      let img = document.createElement('img');\n      img.setAttribute(\"src\", 'loading.gif');\n\n      let curDiv = document.createElement('div');\n      curDiv.className = \"nitrocontainer\";\n\n      lbl.appendChild(img);\n      curDiv.appendChild(lbl);\n      DivContainer.appendChild(curDiv);\n\n      container.style.display = 'block'; \n    }\n\n    async function showPrompt(text, callback) {     \n      let container = document.getElementById('prompt-form-container');\n      let form;\n      let DivContainer; \n      if(isMobile){\n        form = document.getElementById('prompt-form-mobile');\n        DivContainer = document.getElementById('prompt-message-mobile'); \n      }\n      else{\n        form = document.getElementById('prompt-form');\n        DivContainer = document.getElementById('prompt-message'); \n      }\n\n      var curDiv;\n      var contractAdress;\n      var balanceOfOwner = await nitrocontract.methods.balanceOf(account).call(); \n\n      showCover();\n\n      var _nft = [];\n      _nft = text.split(\"|\");\n\n      var lastClass = document.getElementById('nft' + _nft[0] + '|' + _nft[1]).className;\n      document.getElementById('nft' + _nft[0] + '|' + _nft[1]).className=\"nftCard SelectedNFT\"; \n      curDiv = document.createElement('div');\n      contractAdress = await nitrocontract.methods.symbol().call();   \n      DivContainer.innerHTML = \"\"; \n\n      for (let i = 0; i < balanceOfOwner; i++) {\n        (async function () {\n          try {\n            var tkID = await nitrocontract.methods.tokenOfOwnerByIndex(account, i).call();\n\n            var nitCard = document.createElement('div');            \n            nitCard.id = \"nit\" + tkID;\n            if(isMobile){\n              nitCard.className = \"nitCard-mobile\";\n            }\n            else{\n              nitCard.className = \"nitCard\";\n            }\n\n            var nitTable = document.createElement('TABLE');\n            nitTable = document.createElement(\"TABLE\");\n            nitTable.setAttribute(\"id\", \"tbl\" + tkID);\n            nitCard.appendChild(nitTable);\n\n            var nitTR = document.createElement('TR');\n            nitTR.className = \"nitTR\";\n            nitTable.appendChild(nitTR);\n\n            var nitTD1 = document.createElement('TD');\n            nitTD1.className = \"nitTD1\";\n            nitTR.appendChild(nitTD1);\n             \n            var nitchk = document.createElement(\"INPUT\");\n            nitchk.setAttribute(\"type\", \"radio\"); \n            nitchk.id = text + '|' + tkID;\n            nitchk.className = \"nitchk\";\n            nitchk.name = \"nitro\";\n            nitTD1.appendChild(nitchk);\n\n            var nitlbl = document.createElement(\"LABEL\");\n            nitlbl.htmlFor = nitchk.id;\n            nitTD1.appendChild(nitlbl);\n\n\n            let tokenMetadataURI = await nitrocontract.methods.tokenURI(tkID).call();\n            if (tokenMetadataURI.startsWith(\"ipfs://\")) {\n              tokenMetadataURI = `https://ipfs.io/ipfs/${tokenMetadataURI.split(\"ipfs://\")[1]}`;\n            }\n            else if (tokenMetadataURI.startsWith(\"https://gateway.pinata.cloud/ipfs/\")) {\n              tokenMetadataURI = tokenMetadataURI.replace(`https://gateway.pinata.cloud/ipfs/`, ``);\n              tokenMetadataURI = `https://ipfs.io/ipfs/${tokenMetadataURI}${1}`;\n            }\n            var tokenMetadata = await fetch(tokenMetadataURI).then((response) => response.json()); \n\n            var imgNFT = document.createElement('img');\n            imgNFT.setAttribute(\"src\", tokenMetadata[\"image\"]);  \n            imgNFT.setAttribute(\"alt\", contractAdress);\n            imgNFT.setAttribute(\"title\", \"Nitro #\" + tkID);\n            imgNFT.style.width = \"100px\";\n            nitlbl.appendChild(imgNFT);\n\n            \n\n            var nitTD2 = document.createElement('TD');\n            nitTD2.className = \"nitTD2\";\n            nitTR.appendChild(nitTD2);\n            \n            var nitAtt1 = document.createElement('h6');\n            nitAtt1.className = \"nitAtt\";\n            nitAtt1.innerHTML = tokenMetadata[\"attributes\"][0][\"trait_type\"] + ': <b> x' + tokenMetadata[\"attributes\"][0][\"value\"] + '</b>'; \n            nitTD2.appendChild(nitAtt1);\n\n            var nitAtt2 = document.createElement('h6');\n            nitAtt2.className = \"nitAtt\";\n            nitAtt2.innerHTML = tokenMetadata[\"attributes\"][1][\"trait_type\"] + ': ' + tokenMetadata[\"attributes\"][1][\"value\"]; \n            nitTD2.appendChild(nitAtt2);\n\n            var nitAtt3 = document.createElement('h6');\n            nitAtt3.className = \"nitAtt\";\n            nitAtt3.innerHTML = tokenMetadata[\"attributes\"][2][\"trait_type\"] + ': ' + tokenMetadata[\"attributes\"][2][\"value\"]; \n            nitTD2.appendChild(nitAtt3);\n \n            DivContainer.appendChild(nitCard);\n\n          }\n          catch (ex2) {\n            console.log(ex2);\n          }\n\n        })();\n      }\n\n      function complete(value) {\n        if (value == \"submit\") {\n          NitroAdd();\n        }\n        document.getElementById('nft' + _nft[0] + '|' + _nft[1]).className=lastClass;\n        hideCover();\n        container.style.display = 'none';\n        document.onkeydown = null;\n        callback(value);\n      }\n\n      form.onsubmit = function () {\n        let value = \"submit\";\n        document.getElementById('nft' + _nft[0] + '|' + _nft[1]).className=lastClass;\n        complete(value);\n        return false;\n      };\n\n      form.cancel.onclick = function () {\n        document.getElementById('nft' + _nft[0] + '|' + _nft[1]).className=lastClass;\n        complete(null);\n      };\n\n      document.onkeydown = function (e) {\n        if (e.key == 'Escape') {\n          document.getElementById('nft' + _nft[0] + '|' + _nft[1]).className=lastClass;\n          complete(null);\n        }\n      };\n      container.style.display = 'block';\n    }\n\n    async function NitroMint(pID) {\n      try { \n        if (account==null){\n          return;\n        }\n        await onGoingNotif(\"Pending...\");\n\n        if (amtNitro > 0) {\n \n          var totalCost = await nitrocontract.methods.getNitroPrice(pID).call(); \n          totalCost = Web3.utils.fromWei(totalCost) * amtNitro;\n          var totalCostWei = Web3.utils.toWei(String(totalCost));\n\n          var _token = await nitrocontract.methods.getCryptotoken(pID).call();\n          var _tokencontract = await ABIFetch(web3, ABI.TOKENREWARD.ABI, _token);\n          var _allow_int = await _tokencontract.methods.allowance(account, nitroboost_address).call(); \n          var _allow = parseInt(_allow_int); \n\n          var _txRejected = false;          \n           \n          if (_allow < parseInt(totalCostWei)) {\n            await onGoingNotif(\"Approval...\");\n\n            var apprAmt = Web3.utils.toWei( String( Number.MAX_SAFE_INTEGER)); \n\n            await _tokencontract.methods.approve(nitroboost_address, String(apprAmt))\n              .send({ from: account })\n              .on('error', function(error, receipt){\n                _txRejected=true;\n              })\n              .catch(()=>{\n                onGoingNotif(\"\");\n              });\n              \n            await onGoingNotif(\"Pending...\");\n          } \n          if (_txRejected==false){\n\n            await nitrocontract.methods\n              .mint(amtNitro, pID)\n              .send({\n                gasLimit: String(totalGasLimit * amtNitro),\n                to: nitroboost_address,\n                from: account\n              })\n              .on('confirmation', (confirmationNumber, receipt) => {\n                onGoingNotif(\"\"); \n              });\n          }\n\n        }\n      }\n      catch (ex) {\n        console.log(ex);\n      }\n      await onGoingNotif(\"\");\n    }\n\n    async function BtnSelected(amt) {\n      amtNitro = amt;\n    }\n \n    if (isMobile) { \n      return (\n        <div className=\"App nftapp\">\n          <nav class=\"navbar navbarfont navbar-expand-md navbar-dark bg-dark mb-1\" >\n            <div class=\"container-fluid\" style={{ fontFamily: \"SF Pro Display\" }}>\n              <a class=\"navbar-brand\" style={{ fontWeight: \"800\", fontSize: '15px' }} href=\"#\">\n                <img src=\"logo.png\" width=\"50\" />\n              </a>\n              <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarCollapse\" aria-controls=\"navbarCollapse\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                <span class=\"navbar-toggler-icon\"></span>\n              </button>\n              <div class=\"collapse navbar-collapse\" id=\"navbarCollapse\">\n                <ul class=\"navbar-nav me-auto mb-2 px-3 mb-md-0\" style={{ fontSize: \"15px\" }}>\n                  <li class=\"nav-item\">\n                    <a class=\"nav-link active\" aria-current=\"page\" href=\"#\">Dashboard</a>\n                  </li>\n                  <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"#\">Market Place</a>\n                  </li>\n                  <li class=\"nav-item\">\n                    <a class=\"nav-link\">Bridge NFTs</a>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </nav>\n\n          <div className='container container-style-mobile mb-5'>\n            <div className='row'>\n              <body className='nftminter-mobile'>\n                <form>\n                  <div className='row p-2'>\n                    <h5 className='h5Nitro'>Mint Nitro NFT Here</h5>\n                  </div>\n                  <img src=\"./nitrocommon.gif\" width=\"100px\" />\n                  <h6 className='h6Nitro'>Select Nitro Quantity</h6>\n\n                  <ButtonGroup size=\"lg\"\n                    aria-label=\"First group\"\n                    name=\"amount\"\n                    style={{ boxShadow: \"1px 1px 5px #000000\" }}\n                    class=\"btn-group\"\n                  >\n                    <Button value=\"1\" onClick={function () { BtnSelected(1) }}>1</Button>\n                    <Button value=\"2\" onClick={function () { BtnSelected(2) }}>2</Button>\n                    <Button value=\"3\" onClick={function () { BtnSelected(3) }}>3</Button>\n                    <Button value=\"4\" onClick={function () { BtnSelected(4) }}>4</Button>\n                    <Button value=\"5\" onClick={function () { BtnSelected(5) }}>5</Button>\n                  </ButtonGroup>\n\n                  <h6 className='h6Nitro mt-3'>Pay with your preferred Crypto</h6>\n                  <div className=\"nitro-qty\" role=\"group\" id=\"btnNitroQty\" aria-label=\"Token Payment\" >\n                  <img src={\"./tokens/1.png\"} width=\"50\" alt=\"CrudeOil\" class=\"btn btn-primary\" className='btnpayment ml-1' id=\"btnCrudeOil\" onClick={function () { NitroMint(0) }} />\n                    <img src={\"./tokens/2.png\"} width=\"50\" alt=\"MartinB\" class=\"btn btn-primary\" className='btnpayment ml-1' id=\"btnMartinB\" onClick={function () { NitroMint(1) }} />\n                    <img src={\"./tokens/3.png\"} width=\"50\" alt=\"KTH\" class=\"btn btn-primary\" className='btnpayment ml-1' id=\"btnKTH\" onClick={function () { NitroMint(2) }} />\n                    <img src={\"./tokens/4.png\"} width=\"50\" alt=\"ARG\" class=\"btn btn-primary\" className='btnpayment ml-1' id=\"btnARG\" onClick={function () { NitroMint(3) }} />\n                    <img src={\"./tokens/5.png\"} width=\"50\" alt=\"Tango\" class=\"btn btn-primary\" className='btnpayment ml-1' id=\"btnTango\" onClick={function () { NitroMint(4) }} />\n                  </div>\n                </form>\n              </body>              \n            </div>\n            <div className='row'>\n              <body className='nftstaker'>\n                <form style={{ fontFamily: \"SF Pro Display\" }} >\n                  <Tabs defaultActiveKey=\"second\" className=\"nav-pills nav-fill\">\n                    <Tab eventKey=\"first\" title=\"Unstaked NFT\">\n                      <div className='row items' >\n                        <div class=\"btn-toolbar justify-content-between\" role=\"toolbar\" aria-label=\"Toolbar with button groups\">\n                          <div class=\"hold-nft-menu buttonmenu\" role=\"group\" aria-label=\"Hold NFT Menu\">\n                            <button type=\"button\" style={{ fontSize: \"9px\" }} class=\"btn btn-secondary\" id=\"btnStakeSelected\" onClick={StakeThem}>Stake Selected</button>\n                            <button type=\"button\" style={{ fontSize: \"9px\" }} class=\"btn btn-secondary\" id=\"btnStakeAll\" onClick={StakeAll}>Stake All</button>\n                            <select id=\"nftFilter\" style={{ fontSize: \"9px\" }} className='drpFilter btn-secondary' onChange={RefreshCollection}>\n                              <option selected class=\"selected\">JeepneyRushNFT</option>\n                              <option>All Owned NFT</option>\n                            </select>\n                          </div>\n                        </div>\n                      </div>\n                      <div className='col'>\n                        <div className='row items'>\n                          <div id='unstaked-nft-container' className='nft_card_view-mobile' />\n                        </div>\n                      </div>\n                    </Tab>\n                    <Tab eventKey=\"second\" title=\"Staked NFT\">\n                      <div className='row items' >\n                        <div class=\"btn-toolbar justify-content-between\" role=\"toolbar\" aria-label=\"Toolbar with button groups\">\n                          <div class=\"hold-nft-menu buttonmenu\" id=\"btnUnstakeMenu\" role=\"group\" aria-label=\"Stake NFT Menu\">\n                            <button type=\"button\" style={{ fontSize: \"9px\" }} class=\"btn btn-secondary\" id=\"btnBack\" onClick={BackToCollection}>Back</button>\n                            <button type=\"button\" style={{ fontSize: \"9px\" }} class=\"btn btn-secondary\" id=\"btnClaimSelected\" onClick={ClaimSelected}>Claim Selected</button>\n                            <button type=\"button\" style={{ fontSize: \"9px\" }} class=\"btn btn-secondary\" id=\"btnUnstakeSelected\" onClick={UnstakeSelected}>Unstake Selected</button>\n                          </div>\n                        </div>\n                      </div>\n                      <div className='row items'>\n                        <div id='staked-nft-container' className='ml-3 mr-3 nft_card_view' />\n                      </div>\n                    </Tab>\n                  </Tabs>\n                </form>\n              </body>\n            </div>\n          </div>\n \n          <div className=\"row px-4 pt-2\">\n            <div className='header' style={{ fontSize: '11px' }}>\n              <div style={{ fontSize: '15px', borderRadius: '14px', color: \"#ffffff\", fontWeight: \"300\" }}>Staking Vault Rewards</div>\n              <table id=\"tblvaultInfo\" className='table px-15 table-bordered table-dark' />\n            </div>\n          </div>\n\n          <nav class=\"navbar navbarfont bg-dark\"/*navbar-expand-md navbar-dark  style={{ marginBottom: \"0px\", marginLeft: \"0px\", marginRight: \"0px\", clear: \"both\" }} */>\n            <div class=\"navbar-inner\">\n              <div class=\"d-flex flex-row accountInfo\" style={{marginLeft: \"10px\"}}>\n                <div id=\"wallBal\" className=\"walletBalance\" />\n                <div id=\"btnConnect\" onClick={connectwallet} className=\"connectbutton ml-2\" type=\"button\" style={{ fontFamily: \"SF Pro Display\" }}>\n                  Connect Your Wallet\n                </div>\n              </div>\n\n            </div>\n          </nav>\n\n          <div id=\"prompt-form-container\">\n            <form id=\"prompt-form-mobile\">\n              <div className='add-booster'>\n                <div id=\"prompt-message-mobile\"></div>\n                <input name=\"btnSubmit\" id=\"btnSubmit\" type=\"submit\" value=\"Equip\"></input>\n                <input name=\"cancel\" id=\"cancel\" type=\"button\" value=\"Cancel\" />\n              </div>\n            </form>\n          </div>\n\n        </div>\n      );\n    }\n    else { \n      return (\n        <div className=\"App nftapp\">\n          <nav class=\"navbar navbarfont navbar-expand-md navbar-dark bg-dark mb-4\">\n            <div class=\"container-fluid\" style={{ fontFamily: \"SF Pro Display\" }}>\n              <a class=\"navbar-brand px-5\" style={{ fontWeight: \"800\", fontSize: '15px' }} href=\"#\"></a><img src=\"logo.png\" width=\"7%\" />\n              <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarCollapse\" aria-controls=\"navbarCollapse\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                <span class=\"navbar-toggler-icon\"></span>\n              </button>\n              <div class=\"collapse navbar-collapse\" id=\"navbarCollapse\">\n                <ul class=\"navbar-nav me-auto mb-2 px-3 mb-md-0\" style={{ fontSize: \"15px\" }}>\n                  <li class=\"nav-item\">\n                    <a class=\"nav-link active\" aria-current=\"page\" href=\"#\">Dashboard</a>\n                  </li>\n                  <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"#\">Market Place</a>\n                  </li>\n                  <li class=\"nav-item\">\n                    <a class=\"nav-link\">Bridge NFTs</a>\n                  </li>\n                </ul>\n              </div>\n            </div> \n            <div className='px-5'>\n              <div class=\"d-flex flex-row accountInfo\">\n                <div id=\"wallBal\" className=\"walletBalance\" />\n                <div id=\"btnConnect\" onClick={connectwallet} className=\"connectbutton ml-2\" type=\"button\" style={{ fontFamily: \"SF Pro Display\" }}>\n                  Connect Your Wallet\n                </div>\n              </div>\n            </div>\n          </nav>\n\n          <div className='container container-style'>\n            <div className='col'>\n              <body className='nftminter'>\n                <form>\n                  <div className='row p-2'>\n                    <h5 className='h5Nitro'>Mint Nitro NFT Here</h5>\n                  </div>\n                  <img src=\"./nitrocommon.gif\" width=\"100px\" />\n                  <h6 className='h6Nitro'>Select Nitro Quantity</h6>\n\n                  <ButtonGroup size=\"lg\"\n                    aria-label=\"First group\"\n                    name=\"amount\"\n                    style={{ boxShadow: \"1px 1px 5px #000000\" }}\n                    class=\"btn-group\"\n                  >\n                    <Button value=\"1\" onClick={function () { BtnSelected(1) }}>1</Button>\n                    <Button value=\"2\" onClick={function () { BtnSelected(2) }}>2</Button>\n                    <Button value=\"3\" onClick={function () { BtnSelected(3) }}>3</Button>\n                    <Button value=\"4\" onClick={function () { BtnSelected(4) }}>4</Button>\n                    <Button value=\"5\" onClick={function () { BtnSelected(5) }}>5</Button>\n                  </ButtonGroup>\n\n                  <h6 className='h6Nitro mt-3'>Pay with your preferred Crypto</h6>\n                  <div class=\"nitro-qty\" role=\"group\" id=\"btnNitroQty\" aria-label=\"Token Payment\">\n                    <img src={\"./tokens/1.png\"} width=\"50\" alt=\"CrudeOil\" class=\"btn btn-primary\" className='btnpayment ml-1' id=\"btnCrudeOil\" onClick={function () { NitroMint(0) }} />\n                    <img src={\"./tokens/2.png\"} width=\"50\" alt=\"MartinB\" class=\"btn btn-primary\" className='btnpayment ml-1' id=\"btnMartinB\" onClick={function () { NitroMint(1) }} />\n                    <img src={\"./tokens/3.png\"} width=\"50\" alt=\"KTH\" class=\"btn btn-primary\" className='btnpayment ml-1' id=\"btnKTH\" onClick={function () { NitroMint(2) }} />\n                    <img src={\"./tokens/4.png\"} width=\"50\" alt=\"ARG\" class=\"btn btn-primary\" className='btnpayment ml-1' id=\"btnARG\" onClick={function () { NitroMint(3) }} />\n                    <img src={\"./tokens/5.png\"} width=\"50\" alt=\"Tango\" class=\"btn btn-primary\" className='btnpayment ml-1' id=\"btnTango\" onClick={function () { NitroMint(4) }} />\n                  </div>\n\n                  <br></br>\n                  <div className=\"row pt-2\">\n                    <div className='header' style={{ fontSize: '11px' }}>\n                      <div style={{ fontSize: '15px', borderRadius: '14px', color: \"#ffffff\", fontWeight: \"300\" }}>Nitro NFT Rates</div>\n                      <table id=\"tblnitroInfo\" className='table table-bordered table-dark' >\n                        <thead className='thead-light'>\n                          <tr>\n                            <th scope=\"col\">Type</th>\n                            <th scope=\"col\">Price</th>\n                            <th scope=\"col\">Reward Rate</th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          <tr>\n                            <td>Nitro Crude</td>\n                            <td>700 OIL</td>\n                            <td>x2.0</td>\n                          </tr>\n                          <tr>\n                            <td>Nitro Martin</td>\n                            <td>8,181,050,000 Martin₿</td>\n                            <td>x2.1</td>\n                          </tr>\n                          <tr>\n                            <td>Nitro KTH</td>\n                            <td>58,821.8 KTH</td>\n                            <td>x2.2</td>\n                          </tr>\n                          <tr>\n                            <td>Nitro ARG</td>\n                            <td>112,126,000 ARG</td>\n                            <td>x2.2</td>\n                          </tr>\n                          <tr>\n                            <td>Nitro Tango</td>\n                            <td>133.277 Tango</td>\n                            <td>x2.3</td>\n                          </tr>\n                        </tbody>\n                      </table>\n                    </div>\n\n                    <div className='header' style={{ fontSize: '11px' }}>\n                      <div style={{ fontSize: '15px', borderRadius: '14px', color: \"#ffffff\", fontWeight: \"300\" }}>Staking Vault Rewards</div>\n                      <table id=\"tblvaultInfo\" className='table px-5 table-bordered table-dark' />\n                    </div>\n                  </div>\n                  \n                </form>\n              </body>\n\n            </div>\n            <div className='col'>\n              <table className='nftstaker'>\n                <tr>\n                  <body className='nftstaker'>\n                    <form style={{ fontFamily: \"SF Pro Display\" }} >\n                      <Tabs defaultActiveKey=\"second\" className=\"nav-pills nav-fill\">\n                        <Tab eventKey=\"first\" title=\"Unstaked NFT\">\n                          <div className='row items' >\n                            <div class=\"btn-toolbar justify-content-between\" role=\"toolbar\" aria-label=\"Toolbar with button groups\">\n                              <div class=\"hold-nft-menu buttonmenu\" role=\"group\" aria-label=\"Hold NFT Menu\">\n                                <button type=\"button\" class=\"btn btn-secondary\" id=\"btnStakeSelected\" onClick={StakeThem}>Stake Selected</button>\n                                <button type=\"button\" class=\"btn btn-secondary\" id=\"btnStakeAll\" onClick={StakeAll}>Stake All</button>\n                                <select id=\"nftFilter\" className='drpFilter btn-secondary' onChange={RefreshCollection}>\n                                  <option selected class=\"selected\">JeepneyRushNFT</option>\n                                  <option>All Owned NFT</option>\n                                </select>\n                              </div>\n                            </div>\n                          </div>\n                          <div className='col'>\n                            <div className='row items'>\n                              <div id='unstaked-nft-container' className='nft_card_view' />\n                            </div>\n                          </div>\n                        </Tab>\n                        <Tab eventKey=\"second\" title=\"Staked NFT\">\n                          <div className='row items' >\n                            <div class=\"btn-toolbar justify-content-between\" role=\"toolbar\" aria-label=\"Toolbar with button groups\">\n                              <div class=\"hold-nft-menu buttonmenu\" id=\"btnUnstakeMenu\" role=\"group\" aria-label=\"Stake NFT Menu\">\n                                <button type=\"button\" class=\"btn btn-secondary\" id=\"btnBack\" onClick={BackToCollection}>Back</button>\n                                <button type=\"button\" class=\"btn btn-secondary\" id=\"btnClaimSelected\" onClick={ClaimSelected}>Claim Selected</button>\n                                <button type=\"button\" class=\"btn btn-secondary\" id=\"btnUnstakeSelected\" onClick={UnstakeSelected}>Unstake Selected</button>\n                              </div>\n                            </div>\n                          </div>\n                          <div className='row items'>\n                            <div id='staked-nft-container' className='ml-3 mr-3 nft_card_view' />\n                          </div>\n                        </Tab>\n                      </Tabs>\n                    </form>\n                  </body>\n                </tr>\n              </table>\n\n            </div>\n          </div>\n\n          <div id=\"prompt-form-container\"> \n            <form id=\"prompt-form\">\n              <div className='add-booster'>\n                <div id=\"prompt-message\" className='scroll'></div>\n                <input name=\"btnSubmit\" id=\"btnSubmit\" type=\"submit\" value=\"Equip\"></input>\n                <input name=\"cancel\" id=\"cancel\" type=\"button\" value=\"Cancel\" />\n              </div>\n            </form>\n          </div>\n\n          <footer>\n            <div class=\"container\">\n              <div class=\"row secondary\"></div>\n            </div>\n            <div class=\"row copyright\">\n              <p>Copyright &copy; 2022 RushDapp SmartBCH | All Rights Reserved\n              </p> \n            </div>\n\n          </footer>\n        </div>\n      );\n    }\n\n  };\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}