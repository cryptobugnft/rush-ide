{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["window","$","short_acct","tx_pending","CONFIG","ABI","account","nftcontract","defSymbol","totalGasLimit","walletBalanceAPI","scannerAPI","balanceAPI","resultAPICall","CONFIGWhitelist","stakingnftcontract","rewardcontract","nitrocontract","nftlevelcontract","stakingnft_address","nitroboost_address","web3","localStorage","getItem","rewardInDetail","vaultSelected","amtNitro","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleWindowSizeChange","setState","width","innerWidth","state","addEventListener","removeEventListener","isMobile","delay","Promise","resolve","setTimeout","connectwallet","_connectwallet","apply","arguments","asyncToGenerator","_regeneratorRuntime","mark","_callee","configResponse","accounts","networkId","abiResponse","abiWhitelist","sWallBal","wrap","_context","prev","next","ethereum","fetch","headers","Content-Type","Accept","sent","json","Web3","send","eth","getAccounts","request","method","MAINNET","ID","TESTNET","SYMBOL","GAS_LIMIT","API","BALANCE","WALLET","ABIFetch","TOKENREWARD","MAINDAPP","STAKING","NITROBOOST","RUSHLEVEL","LEVELING","toUpperCase","onGoingNotif","document","getElementById","style","WalletBalance","innerHTML","APICall","listNFTFilter","stakeVaults","LoadVaultInfo","setInterval","RewardInquiry","setItem","confirm","t0","console","log","stop","VaultRewardToken","_x","_VaultRewardToken","_callee2","delegate","vaultrewarder","rewardToken","_rewardcontract","_context2","REWARDER","methods","abrupt","_LoadVaultInfo","_callee3","tbl","thd","_tr","_th1","_th2","counter_vault","_tbody","_vault","_rewardSymbol","_tbody_tr","_tbody_td1","_tbody_td2","_span1","_span2","_context3","createElement","className","appendChild","scope","Vault","active","tokenReward","symbol","vaultName","class","reqBooster","utils","fromWei","rewardRate","RefreshCollection","_RefreshCollection","_callee4","nftCol","_context4","value","listNFT","_x2","_x3","_APICall","_callee5","theURL","apiResponse","jsonParsedContents","_context5","APIBalanceCall","_x4","_x5","_x6","_APIBalanceCall","_callee6","_account","_CA","_context6","replace","_x7","_WalletBalance","_callee7","earnedrwd","rewards","_context7","result","Number","toFixed","claimVault","_x8","_claimVault","_callee8","_vaultId","_tkIDs","balanceOfOwner","j","_tkID","_context8","ERC721","nftAddress","balanceOf","tokenOfOwnerByIndex","nftStake","owner","push","claim","from","refreshDAppView","modifyVault","_x9","_x10","_modifyVault","_callee10","_vaultContract","tab_container","i","_contractAddress","_vId","_context10","UnstakeMenuControl","length","type","contractAddress","getVaultId","renderNFT","_x11","_onGoingNotif","_callee11","msg","btnConnect","img","_context11","hideCover","ex","substring","setAttribute","showCover","unstakeVault","_x12","_unstakeVault","_callee12","_context12","unstake","GetNFTLevel","_x13","_x14","_GetNFTLevel","_callee13","nftLevel","_context13","getNFTLevel","concat","_RewardInquiry","_callee14","balanceOfVault","_symbol","contractAdress","divPend","_pendingRewards","_pend2","_stakeCount2","earned","_stakeCount","_pend","objNFTPend","objNFTLvl","_nitroStakeRemaining","_result","nitroID","remain","_nitroEquipped","_multipower","_powerFloat","nftLvlBonus","_lvlFloat","_glowNum","seconds","d","h","m","s","remainingBurn","_context14","includes","pendingRewardByAccount","String","split","pendingReward","nitroStakeRemaining","getEquippedNitro","getNitroPower","parseFloat","getLevelBonus","getRareType","Math","floor","t1","t2","_x15","_x16","_x17","_UnstakeMenuControl","_callee15","btnBack","btnClaim","btnUnstake","_btnBack","_btnClaim","_btnUnstake","_context15","display","classList","add","removeAttribute","remove","_x18","_stakeVaults","_callee17","DivContainer","usrVaultCount","usrCurrVault","_i","nftName","tokenMetadataURI","tokenMetadata","_context17","name","tokenURI","startsWith","then","response","_callee16","cardVault","cardVaultCard","cardVaultFront","imgNFT","vid_source","img_src","cardVaultDetails","cardH4","cardSpan","cardVaultBack","_tbl","_attrdiv","nft_dtl","_nftName","_symbl","_supply","_tr2","cardButtonClaim","cardButtonUnstake","cardButtonModify","_context16","id","color","totalSupply","onclick","_x19","_x20","_x21","_x22","_listNFT","_callee18","filterList","userNFTHold","btnStakeAll","btnStakeSelected","key","ctr","_i2","_context18","keys","NFT","done","ADDRESS","t3","t4","t5","t6","t7","ShowNFTError","t8","_x23","_x24","_x25","_ABIFetch","_callee19","_abi","_address","_contract","ABIResponse","ABIJSON","_context19","Contract","_x26","_listNFTFilter","_callee20","lstNFT","z_1","t_1","z","t","_context20","createTextNode","balance","fetchNFTImage","_x27","_x28","_x29","_x30","_fetchNFTImage","_callee21","tkID","_caller","_context21","_x31","_x32","_x33","_x34","_x35","_renderNFT","_callee23","isStaked","nftContainer","nftCard","nftTable","nftMedia","nftTD","nftLvl","nftChk","nftLbl","nftImg","nftAtt","nftAttTD","nftTxt1","nftTxt2","nftBtn","nftTxt3","_loop","_context23","_callee22","_nftStakeInfo","_imgFix","_context22","htmlFor","img_er","showPrompt","showPromptTransfer","UnstakeSelected","_UnstakeSelected","_callee26","_context26","ClaimThem","ClaimSelected","_ClaimSelected","_callee27","_context27","BackToCollection","_BackToCollection","_callee28","_context28","_x41","_ClaimThem","_callee29","_DivContainer","children","elements","child","tkIDs","nft","_context29","getElementsByTagName","checked","StakeAll","_StakeAll","_callee31","_isNFTAppr","address","_context31","nftApproveAll","isWhitelist","stake","stakeAny","StakeThem","_StakeThem","_callee32","_DivContainer2","_context32","_refreshDAppView","_callee33","_context33","_x46","_nftApproveAll","_callee34","_nftcontract","_context34","isApprovedForAll","setApprovalForAll","_x47","_isWhitelist","_callee35","_res","_context35","_x48","_ShowNFTError","_callee36","msgValue","curDiv","chk","lbl","objNFT","_context36","_showCover","_callee37","coverDiv","_context37","body","overflowY","append","SendNFT","_x49","_x50","_x51","_SendNFT","_callee38","nftAdd","destiAdd","_context38","safeTransferFrom","NitroAdd","_NitroAdd","_callee39","_DivContainer3","_nitroId","_context39","gasLimit","stakeNitro","_hideCover","_callee40","_context40","_x52","_x53","_showPromptTransfer","_callee41","text","callback","_nft","form","container","h6NFTAddy","txAdd","h6Caption","x","complete","_context41","onkeydown","placeholder","onsubmit","cancel","e","_x54","_x55","_showPrompt","_callee44","lastClass","_loop3","_context44","_callee43","nitCard","nitTable","nitTR","nitTD1","nitchk","nitlbl","nitTD2","nitAtt1","nitAtt2","nitAtt3","_context43","NitroMint","_x56","_NitroMint","_callee45","pID","totalCost","totalCostWei","_token","_tokencontract","_allow","_txRejected","apprAmt","_context45","getNitroPrice","toWei","getCryptotoken","parseInt","allowance","MAX_SAFE_INTEGER","approve","on","error","receipt","catch","mint","to","confirmationNumber","BtnSelected","_x57","_BtnSelected","_callee46","amt","_context46","react_default","a","fontFamily","fontWeight","fontSize","href","src","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","aria-current","ButtonGroup","size","boxShadow","Button","onClick","role","alt","Tabs","defaultActiveKey","Tab","eventKey","title","onChange","selected","borderRadius","marginLeft","Component","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App_0"],"mappings":"y/NAsBUA,OAAOC,EAAjB,IA6BIC,EA3BAC,GAAa,EAEbC,EAAS,KACTC,EAAM,KACNC,EAAU,KACVC,EAAc,KAEdC,EAAY,KACZC,EAAgB,KAEhBC,EAAmB,KACnBC,EAAa,KACbC,EAAa,KACbC,EAAgB,KAChBC,EAAkB,KAIlBC,EAAqB,KACrBC,EAAiB,KACjBC,EAAgB,KAChBC,EAAmB,KAEnBC,EAAqB,KACrBC,EAAqB,KAKrBC,GAHMC,aAAaC,QAAQ,WAGpB,MAGPC,GAAiB,EACjBC,EAAgB,KAEhBC,EAAW,EAm4EAC,cAv3Eb,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACZC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QAaFI,uBAAyB,WACvBP,EAAKQ,SAAS,CAAEC,MAAOrC,OAAOsC,cAb9BV,EAAKW,MAAQ,CACXF,MAAOrC,OAAOsC,YAHJV,oFASZ5B,OAAOwC,iBAAiB,SAAUT,KAAKI,uEAGvCnC,OAAOyC,oBAAoB,SAAUV,KAAKI,uGAqBnC,IACCE,EAAUN,KAAKQ,MAAfF,MACFK,EAAWL,GAAS,IAQ1B,SAASM,IACP,OAAO,IAAIC,QAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAAS,OAX7C,SAeQE,IAfR,OAAAC,EAAAC,MAAAlB,KAAAmB,WAAA,SAAAF,IAAA,OAAAA,EAAAnB,OAAAsB,EAAA,EAAAtB,CAAAuB,IAAAC,KAeP,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAR,IAAAS,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAAAF,EAAAC,KAAA,GAEQ/D,OAAOiE,SAFf,CAAAH,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,EAImCE,MAAM,sBAAuB,CACxDC,QAAS,CACPC,eAAgB,mBAChBC,OAAQ,sBAPlB,cAIYd,EAJZO,EAAAQ,KAAAR,EAAAE,KAAA,EAUqBT,EAAegB,OAVpC,cAUMnE,EAVN0D,EAAAQ,KAYMjD,EAAO,IAAImD,IAAKxE,OAAOiE,UAZ7BH,EAAAE,KAAA,GAeYhE,OAAOiE,SAASQ,KAAK,uBAfjC,eAAAX,EAAAE,KAAA,GAgB2B3C,EAAKqD,IAAIC,cAhBpC,eAgBUnB,EAhBVM,EAAAQ,KAiBMhE,EAAUkD,EAAS,GAjBzBM,EAAAE,KAAA,GAmB8BhE,OAAOiE,SAASW,QAAQ,CAC9CC,OAAQ,gBApBhB,YAmBYpB,EAnBZK,EAAAQ,OAuBwBlE,EAAO0E,QAAQC,IAAQtB,GAAarD,EAAO4E,QAAQD,GAvB3E,CAAAjB,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,GAyBkCE,MAAM,mBAAoB,CAClDC,QAAS,CACPC,eAAgB,mBAChBC,OAAQ,sBA5BpB,eAyBcX,EAzBdI,EAAAQ,KAAAR,EAAAE,KAAA,GA+BoBN,EAAYa,OA/BhC,WA+BQlE,EA/BRyD,EAAAQ,KAiCYX,EAAe,KAEfF,GAAarD,EAAO0E,QAAQC,GAnCxC,CAAAjB,EAAAE,KAAA,gBAoCUxD,EAAYJ,EAAO0E,QAAQG,OAC3BxE,EAAgBL,EAAO0E,QAAQI,UAC/BvE,EAAaP,EAAO0E,QAAQK,IAC5BvE,EAAaR,EAAO0E,QAAQM,QAC5B1E,EAAmBN,EAAO0E,QAAQO,OAxC5CvB,EAAAE,KAAA,GAyCiCsB,GAASjE,EAAMhB,EAAIkF,YAAYlF,IAAKD,EAAOoF,SAASD,aAzCrF,eAyCUvE,EAzCV8C,EAAAQ,KAAAR,EAAAE,KAAA,GA0CqCsB,GAASjE,EAAMhB,EAAIoF,QAAQpF,IAAKD,EAAOoF,SAASC,SA1CrF,eA0CU1E,EA1CV+C,EAAAQ,KAAAR,EAAAE,KAAA,GA2CgCsB,GAASjE,EAAMhB,EAAIqF,WAAWrF,IAAKD,EAAOoF,SAASE,YA3CnF,eA2CUzE,EA3CV6C,EAAAQ,KAAAR,EAAAE,KAAA,GA4CmCsB,GAASjE,EAAMhB,EAAIsF,UAAUtF,IAAKD,EAAOoF,SAASI,UA5CrF,eA4CU1E,EA5CV4C,EAAAQ,KA8CUnD,EAAqBf,EAAOoF,SAASC,QACrCrE,EAAqBhB,EAAOoF,SAASE,WAAWG,cA/C1D/B,EAAAE,KAAA,GAiD+BE,MAAM,2BAA4B,CACrDC,QAAS,CACPC,eAAgB,mBAChBC,OAAQ,sBApDtB,eAiDUV,EAjDVG,EAAAQ,KAAAR,EAAAE,KAAA,GAuDkCL,EAAaY,OAvD/C,QAuDUzD,EAvDVgD,EAAAQ,KAAA,eAqFQwB,EAAa,KAETlC,EAAWmC,SAASC,eAAe,YAC9BC,MAAM5D,MAAQ,QAxF/ByB,EAAAE,KAAA,GAyFmCkC,EAAc5F,GAzFjD,eAyFQsD,EAASuC,UAzFjBrC,EAAAQ,KAAAR,EAAAE,KAAA,GA2F8BoC,EAAQ9F,EAASK,GA3F/C,eA2FQE,EA3FRiD,EAAAQ,KAAAR,EAAAE,KAAA,GA4FcqC,GAAcxF,GA5F5B,eAgGQkF,SAASC,eAAe,0BAA0BG,UAAU,GACvCJ,SAASC,eAAe,wBAChCG,UAAY,GAlGjCrC,EAAAE,KAAA,GAmGcsC,GAAY,wBAnG1B,eAAAxC,EAAAE,KAAA,GAqGcuC,IArGd,QAuGoBC,YAAY,WACN,GAAZrG,GACFsG,MAED,KAEHnF,aAAaoF,QAAQ,qBAAqB,GA7GlD5C,EAAAE,KAAA,iBAkHgBhE,OAAO2G,QAAQ,kBAlH/B,QAAA7C,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAA8C,GAAA9C,EAAA,SAwHI+C,QAAQC,IAAI,8BAAAhD,EAAA8C,IAxHhB,yBAAA9C,EAAAiD,SAAAzD,EAAA,mBAfOL,MAAAlB,KAAAmB,WAAA,SA2IQ8D,EA3IRC,GAAA,OAAAC,EAAAjE,MAAAlB,KAAAmB,WAAA,SAAAgE,IAAA,OAAAA,EAAArF,OAAAsB,EAAA,EAAAtB,CAAAuB,IAAAC,KA2IP,SAAA8D,EAAgCC,GAAhC,IAAAC,EAAAC,EAAAC,EAAA,OAAAnE,IAAAS,KAAA,SAAA2D,GAAA,cAAAA,EAAAzD,KAAAyD,EAAAxD,MAAA,cAAAwD,EAAAxD,KAAA,EAC4BsB,GAASjE,EAAMhB,EAAIoH,SAASpH,IAAK+G,GAD7D,cACMC,EADNG,EAAAlD,KAAAkD,EAAAxD,KAAA,EAE0BqD,EAAcK,QAAQJ,cAAcpF,OAF9D,cAEMoF,EAFNE,EAAAlD,KAAAkD,EAAAxD,KAAA,EAG8BsB,GAASjE,EAAMhB,EAAIkF,YAAYlF,IAAKiH,GAHlE,cAGMC,EAHNC,EAAAlD,KAAAkD,EAAAG,OAAA,SAISJ,GAJT,yBAAAC,EAAAT,SAAAI,OA3IOlE,MAAAlB,KAAAmB,WAAA,SAkJQqD,IAlJR,OAAAqB,EAAA3E,MAAAlB,KAAAmB,WAAA,SAAA0E,IAAA,OAAAA,EAAA/F,OAAAsB,EAAA,EAAAtB,CAAAuB,IAAAC,KAkJP,SAAAwE,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAd,EAAAe,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAvF,IAAAS,KAAA,SAAA+E,GAAA,cAAAA,EAAA7E,KAAA6E,EAAA5E,MAAA,cAAA4E,EAAA7E,KAAA,GAEQ+D,EAAM/B,SAASC,eAAe,iBAC9BG,UAAU,IAEV4B,EAAMhC,SAAS8C,cAAc,UAC7BC,UAAY,cAChBhB,EAAIiB,YAAYhB,GAEZC,EAAMjC,SAAS8C,cAAc,OAC7BZ,EAAOlC,SAAS8C,cAAc,OAC7BG,MAAQ,MACbf,EAAK9B,UAAY,aACjB6B,EAAIe,YAAYd,IAEZC,EAAOnC,SAAS8C,cAAc,OAC7BG,MAAQ,MACbd,EAAK/B,UAAY,kBACjB6B,EAAIe,YAAYb,GAEhBH,EAAIgB,YAAYf,GAEZG,EAAgB,EAEhBC,EAASrC,SAAS8C,cAAc,SAxBxCD,EAAA5E,KAAA,GAyBuBjD,EAAmB2G,QAAQuB,MAAMd,GAAejG,OAzBvE,QAyBQmG,EAzBRO,EAAAtE,KAAA,YA0BW+D,EAAOa,OA1BlB,CAAAN,EAAA5E,KAAA,YA4BUqE,EAAOjB,UAAYjG,EA5B7B,CAAAyH,EAAA5E,KAAA,gBAAA4E,EAAA5E,KAAA,GA6BgCgD,EAAiBqB,EAAOjB,UA7BxD,QA6BQG,EA7BRqB,EAAAtE,KAAAsE,EAAA5E,KAAA,wBAAA4E,EAAA5E,KAAA,GAgCgCsB,GAASjE,EAAMhB,EAAIkF,YAAYlF,IAAKgI,EAAOc,aAhC3E,QAgCQ5B,EAhCRqB,EAAAtE,KAAA,eAAAsE,EAAA5E,KAAA,GAkCgCuD,EAAgBG,QAAQ0B,SAASlH,OAlCjE,eAkCUoG,EAlCVM,EAAAtE,KAoCUiE,EAAYxC,SAAS8C,cAAc,OAEnCL,EAAazC,SAAS8C,cAAc,OAC7B1C,UAAYkC,EAAOgB,UAC9Bd,EAAUQ,YAAYP,IAElBC,EAAa1C,SAAS8C,cAAc,OAC7BS,MAAM,SAGQ,GAArBjB,EAAOkB,aAETf,EAAWM,UAAU,WACrBL,EAAWK,UAAU,aAGnBJ,EAAS3C,SAAS8C,cAAc,SAC7BS,MAAQ,SACfZ,EAAOvC,UAAU3B,IAAKgF,MAAMC,QAAQpB,EAAOqB,YAAc,KAErDf,EAAS5C,SAAS8C,cAAc,SAC7BS,MAAQ,WACfX,EAAOxC,UAAYmC,EAEnBG,EAAWM,YAAYL,GACvBD,EAAWM,YAAYJ,GAEvBJ,EAAUQ,YAAYN,GAEtBL,EAAOW,YAAYR,GAEnBJ,GAAiB,EAnEvBS,EAAA5E,KAAA,GAoEyBjD,EAAmB2G,QAAQuB,MAAMd,GAAejG,OApEzE,QAoEUmG,EApEVO,EAAAtE,KAAAsE,EAAA5E,KAAA,iBAuEI8D,EAAIiB,YAAYX,GAvEpBQ,EAAA5E,KAAA,iBAAA4E,EAAA7E,KAAA,GAAA6E,EAAAhC,GAAAgC,EAAA,SA0EI/B,QAAQC,IAAR8B,EAAAhC,IA1EJ,yBAAAgC,EAAA7B,SAAAc,EAAA,mBAlJO5E,MAAAlB,KAAAmB,WAAA,SAmOQyG,IAnOR,OAAAC,EAAA3G,MAAAlB,KAAAmB,WAAA,SAAA0G,IAAA,OAAAA,EAAA/H,OAAAsB,EAAA,EAAAtB,CAAAuB,IAAAC,KAmOP,SAAAwG,IAAA,IAAAC,EAAA,OAAA1G,IAAAS,KAAA,SAAAkG,GAAA,cAAAA,EAAAhG,KAAAgG,EAAA/F,MAAA,UACe,MAAT1D,EADN,CAAAyJ,EAAA/F,KAAA,eAAA+F,EAAApC,OAAA,wBAIMmC,EAAS/D,SAASC,eAAe,aAAagE,MAJpDD,EAAA/F,KAAA,EAQwBoC,EAAQ9F,EAASK,GARzC,cAQEE,EARFkJ,EAAAzF,KAAAyF,EAAA/F,KAAA,EASQiG,GAAQ3J,EAAS,yBAA0BO,EAAeiJ,GATlE,wBAAAC,EAAAhD,SAAA8C,OAnOO5G,MAAAlB,KAAAmB,WAAA,SA+OQkD,EA/OR8D,EAAAC,GAAA,OAAAC,EAAAnH,MAAAlB,KAAAmB,WAAA,SAAAkH,IAAA,OAAAA,EAAAvI,OAAAsB,EAAA,EAAAtB,CAAAuB,IAAAC,KA+OP,SAAAgH,EAAuB/J,EAAS6E,GAAhC,IAAAmF,EAAAC,EAAAC,EAAA,OAAApH,IAAAS,KAAA,SAAA4G,GAAA,cAAAA,EAAA1G,KAAA0G,EAAAzG,MAAA,cACMsG,EAASnF,EAAM,IAAM7E,EAD3BmK,EAAAzG,KAAA,EAE0BE,MAAMoG,GAFhC,cAEMC,EAFNE,EAAAnG,KAAAmG,EAAAzG,KAAA,EAGiCuG,EAAYhG,OAH7C,cAGMiG,EAHNC,EAAAnG,KAAAmG,EAAA9C,OAAA,SAKS6C,GALT,wBAAAC,EAAA1D,SAAAsD,OA/OOpH,MAAAlB,KAAAmB,WAAA,SAuPQwH,EAvPRC,EAAAC,EAAAC,GAAA,OAAAC,EAAA7H,MAAAlB,KAAAmB,WAAA,SAAA4H,IAAA,OAAAA,EAAAjJ,OAAAsB,EAAA,EAAAtB,CAAAuB,IAAAC,KAuPP,SAAA0H,EAA8BC,EAAUC,EAAK9F,GAA7C,IAAAmF,EAAAC,EAAAC,EAAA,OAAApH,IAAAS,KAAA,SAAAqH,GAAA,cAAAA,EAAAnH,KAAAmH,EAAAlH,MAAA,cACMsG,EAASnF,EAAIgG,QAAQ,mBAAoBF,GAAKE,QAAQ,WAAYH,GADxEE,EAAAlH,KAAA,EAE0BE,MAAMoG,GAFhC,cAEMC,EAFNW,EAAA5G,KAAA4G,EAAAlH,KAAA,EAGiCuG,EAAYhG,OAH7C,cAGMiG,EAHNU,EAAA5G,KAAA4G,EAAAvD,OAAA,SAKS6C,GALT,wBAAAU,EAAAnE,SAAAgE,OAvPO9H,MAAAlB,KAAAmB,WAAA,SA+PQgD,EA/PRkF,GAAA,OAAAC,EAAApI,MAAAlB,KAAAmB,WAAA,SAAAmI,IAAA,OAAAA,EAAAxJ,OAAAsB,EAAA,EAAAtB,CAAAuB,IAAAC,KA+PP,SAAAiI,EAA6BN,GAA7B,IAAAV,EAAAC,EAAAC,EAAAe,EAAAC,EAAA,OAAApI,IAAAS,KAAA,SAAA4H,GAAA,cAAAA,EAAA1H,KAAA0H,EAAAzH,MAAA,cACMsG,EAAS5J,EAAiByK,QAAQ,WAAYH,GADpDS,EAAAzH,KAAA,EAE0BE,MAAMoG,GAFhC,cAEMC,EAFNkB,EAAAnH,KAAAmH,EAAAzH,KAAA,EAGiCuG,EAAYhG,OAH7C,cAGMiG,EAHNiB,EAAAnH,KAKMiH,EAAY/G,IAAKgF,MAAMC,QAAQe,EAAmBkB,QAClDF,EAAUG,OAAOJ,GAAWK,QAAQ,GAN1CH,EAAA9D,OAAA,SAQS,KAAO6D,EAAU,IAAMhL,GARhC,yBAAAiL,EAAA1E,SAAAuE,OA/POrI,MAAAlB,KAAAmB,WAAA,SA0QQ2I,EA1QRC,GAAA,OAAAC,EAAA9I,MAAAlB,KAAAmB,WAAA,SAAA6I,IAAA,OAAAA,EAAAlK,OAAAsB,EAAA,EAAAtB,CAAAuB,IAAAC,KA0QP,SAAA2I,EAA0BC,GAA1B,IAAA5D,EAAA6D,EAAA3L,EAAA4L,EAAAC,EAAAC,EAAA,OAAAjJ,IAAAS,KAAA,SAAAyI,GAAA,cAAAA,EAAAvI,KAAAuI,EAAAtI,MAAA,cAAAsI,EAAAvI,KAAA,EAAAuI,EAAAtI,KAAA,EAEU8B,EAAa,cAFvB,cAAAwG,EAAAtI,KAAA,EAKuBjD,EAAmB2G,QAAQuB,MAAMgD,GAAU/J,OALlE,cAKQmG,EALRiE,EAAAhI,KAOQ4H,EAAS,GAPjBI,EAAAtI,KAAA,EAS4BsB,GAASjE,EAAMhB,EAAIkM,OAAOlM,IAAKgI,EAAOmE,YATlE,cASQjM,EATR+L,EAAAhI,KAAAgI,EAAAtI,KAAA,GAU+BzD,EAAYmH,QAAQ+E,UAAUtL,GAAoBe,OAVjF,QAUQiK,EAVRG,EAAAhI,KAaa8H,EAAI,EAbjB,aAaoBA,EAAID,GAbxB,CAAAG,EAAAtI,KAAA,gBAAAsI,EAAAtI,KAAA,GAcwBzD,EAAYmH,QAAQgF,oBAAoBvL,EAAoBiL,GAAGlK,OAdvF,eAcUmK,EAdVC,EAAAhI,KAAAgI,EAAAtI,KAAA,GAegCjD,EAAmB2G,QAAQiF,SAASV,EAAUI,GAAOnK,OAfrF,QAAAoK,EAAAhI,KAgBwBsI,OAAStM,GAEzB4L,EAAOW,KAAKR,GAlBpB,QAawCD,IAbxCE,EAAAtI,KAAA,wBAAAsI,EAAAtI,KAAA,GAyCUjD,EAAmB2G,QAAQoF,MAAMb,EAAUC,GAAQzH,KAAK,CAAEsI,KAAMzM,IAzC1E,eAAAgM,EAAAtI,KAAA,GA0CUgJ,KA1CV,QAAAV,EAAAtI,KAAA,iBAAAsI,EAAAvI,KAAA,GAAAuI,EAAA1F,GAAA0F,EAAA,SA8CIzF,QAAQC,IAAI,cACZD,QAAQC,IAARwF,EAAA1F,IA/CJ,eAAA0F,EAAAtI,KAAA,GAiDQ8B,EAAa,IAjDrB,yBAAAwG,EAAAvF,SAAAiF,EAAA,mBA1QO/I,MAAAlB,KAAAmB,WAAA,SAmUQ+J,EAnURC,EAAAC,GAAA,OAAAC,EAAAnK,MAAAlB,KAAAmB,WAAA,SAAAkK,IAAA,OAAAA,EAAAvL,OAAAsB,EAAA,EAAAtB,CAAAuB,IAAAC,KAmUP,SAAAgK,EAA2BpB,EAAUqB,GAArC,IAAAC,EAAAvC,EAAAwC,EAAAC,EAAAC,EAAA,OAAAtK,IAAAS,KAAA,SAAA8J,GAAA,cAAAA,EAAA5J,KAAA4J,EAAA3J,MAAA,cAAA2J,EAAA5J,KAAA,EAAA4J,EAAA3J,KAAA,EAEU4J,IAAmB,GAAM,GAAM,GAFzC,cAIQL,EAAgB,uBACpBxH,SAASC,eAAe,wBAAwBG,UAAY,GAExD6E,EAAW7J,EAPnBwM,EAAA3J,KAAA,EAQ0BoC,EAAQ4E,EAAUrK,GAR5C,OAQIE,EARJ8M,EAAArJ,KAUI9C,GAAiB,EAERgM,EAAI,EAZjB,aAYoBA,EAAI3M,EAAc6K,OAAOmC,QAZ7C,CAAAF,EAAA3J,KAAA,YAa0C,WAAhCnD,EAAc6K,OAAO8B,GAAGM,KAblC,CAAAH,EAAA3J,KAAA,gBAcYyJ,EAAmB5M,EAAc6K,OAAO8B,GAAGO,gBAC/CtM,EAAgBgM,EAfxBE,EAAA3J,KAAA,GAgByBjD,EAAmB2G,QAAQsG,WAAWP,GAAkBvL,OAhBjF,WAgBYwL,EAhBZC,EAAArJ,KAiBa2H,GAAYyB,GAAUJ,GAAkBG,EAjBrD,CAAAE,EAAA3J,KAAA,gBAAA2J,EAAA3J,KAAA,GAkB8BsB,GAASjE,EAAMhB,EAAIkM,OAAOlM,IAAKoN,GAlB7D,eAkBUlN,EAlBVoN,EAAArJ,KAAAqJ,EAAA3J,KAAA,GAoBgBiK,GAAUV,EAAehN,EAAakN,EAAkBzC,GAAU,GApBlF,eAAA2C,EAAAhG,OAAA,oBAYqD6F,IAZrDG,EAAA3J,KAAA,iBAAA2J,EAAA3J,KAAA,iBAAA2J,EAAA5J,KAAA,GAAA4J,EAAA/G,GAAA+G,EAAA,SA4BI9G,QAAQC,IAAR6G,EAAA/G,IA5BJ,yBAAA+G,EAAA5G,SAAAsG,EAAA,mBAnUOpK,MAAAlB,KAAAmB,WAAA,SAoWQ4C,EApWRoI,GAAA,OAAAC,EAAAlL,MAAAlB,KAAAmB,WAAA,SAAAiL,IAAA,OAAAA,EAAAtM,OAAAsB,EAAA,EAAAtB,CAAAuB,IAAAC,KAoWP,SAAA+K,EAA4BC,GAA5B,IAAAC,EAAAC,EAAA,OAAAnL,IAAAS,KAAA,SAAA2K,GAAA,cAAAA,EAAAzK,KAAAyK,EAAAxK,MAAA,OAEE,GADIsK,EAAavI,SAASC,eAAe,cAC9B,IAAPqI,EAAW,CACb,IACEI,KACAtO,GAAW,EAEb,MAAOuO,IAGPxO,EAAaI,EAAQqO,UAAU,EAAG,GAAK,OAASrO,EAAQqO,UAAUrO,EAAQuN,OAAS,EAAGvN,EAAQuN,SAC1FU,EAAMxI,SAAS8C,cAAc,QAC7BC,UAAY,OAChByF,EAAIK,aAAa,MAAO,YAExBN,EAAWnI,UAAYjG,EACvBoO,EAAWvF,YAAYwF,QAGvBM,KACAP,EAAWnI,UAAY,GACvBmI,EAAWnI,UAAYkI,EArB3B,wBAAAG,EAAAzH,SAAAqH,OApWOnL,MAAAlB,KAAAmB,WAAA,SA8XQ4L,GA9XRC,GAAA,OAAAC,GAAA/L,MAAAlB,KAAAmB,WAAA,SAAA8L,KAAA,OAAAA,GAAAnN,OAAAsB,EAAA,EAAAtB,CAAAuB,IAAAC,KA8XP,SAAA4L,EAA4BhD,GAA5B,IAAA5D,EAAA6D,EAAAsB,EAAAnB,EAAA,OAAAjJ,IAAAS,KAAA,SAAAqL,GAAA,cAAAA,EAAAnL,KAAAmL,EAAAlL,MAAA,cAAAkL,EAAAnL,KAAA,EAAAmL,EAAAlL,KAAA,EAEU8B,EAAa,cAFvB,cAAAoJ,EAAAlL,KAAA,EAIuBjD,EAAmB2G,QAAQuB,MAAMgD,GAAU/J,OAJlE,cAIQmG,EAJR6G,EAAA5K,KAMQ4H,EAAS,GANjBgD,EAAAlL,KAAA,EAO0B0G,EAAevJ,EAAoBkH,EAAOmE,WAAY5L,GAPhF,cAOIC,EAPJqO,EAAA5K,KAAA4K,EAAAlL,KAAA,GAQwBsB,GAASjE,EAAMhB,EAAIkM,OAAOlM,IAAKgI,EAAOmE,YAR9D,QAQIjM,EARJ2O,EAAA5K,KAUakJ,EAAI,EAVjB,aAUoBA,EAAI3M,EAAc6K,QAVtC,CAAAwD,EAAAlL,KAAA,gBAAAkL,EAAAlL,KAAA,GAWwBzD,EAAYmH,QAAQgF,oBAAoBvL,EAAoBqM,GAAGtL,OAXvF,eAWUmK,EAXV6C,EAAA5K,KAAA4K,EAAAlL,KAAA,GAYgCjD,EAAmB2G,QAAQiF,SAASV,EAAUI,GAAOnK,OAZrF,QAAAgN,EAAA5K,KAawBsI,OAAStM,GACzB4L,EAAOW,KAAKR,GAdpB,QAU8CmB,IAV9C0B,EAAAlL,KAAA,wBAAAkL,EAAAlL,KAAA,GAiBUjD,EAAmB2G,QAAQyH,QAAQlD,EAAUC,GAAQzH,KAAK,CAAEsI,KAAMzM,IAjB5E,eAAA4O,EAAAlL,KAAA,GAkBUgJ,KAlBV,QAAAkC,EAAAlL,KAAA,iBAAAkL,EAAAnL,KAAA,GAAAmL,EAAAtI,GAAAsI,EAAA,SAqBIrI,QAAQC,IAAI,gBACZD,QAAQC,IAARoI,EAAAtI,IAtBJ,eAAAsI,EAAAlL,KAAA,GAwBQ8B,EAAa,IAxBrB,yBAAAoJ,EAAAnI,SAAAkI,EAAA,mBA9XOhM,MAAAlB,KAAAmB,WAAA,SAyZQkM,GAzZRC,EAAAC,GAAA,OAAAC,GAAAtM,MAAAlB,KAAAmB,WAAA,SAAAqM,KAAA,OAAAA,GAAA1N,OAAAsB,EAAA,EAAAtB,CAAAuB,IAAAC,KAyZP,SAAAmM,EAA2BvD,EAAUI,GAArC,IAAAoD,EAAA,OAAArM,IAAAS,KAAA,SAAA6L,GAAA,cAAAA,EAAA3L,KAAA2L,EAAA1L,MAAA,cAAA0L,EAAA3L,KAAA,EAAA2L,EAAA1L,KAAA,EAEyB9C,EAAiBwG,QAAQiI,YAAY1D,EAAUI,GAAOnK,OAF/E,UAGoB,cADZuN,EAFRC,EAAApL,MAAA,CAAAoL,EAAA1L,KAAA,eAAA0L,EAAA/H,OAAA,eAAAiI,OAImBH,IAJnB,OAAAC,EAAA1L,KAAA,uBAAA0L,EAAA3L,KAAA,EAAA2L,EAAA9I,GAAA8I,EAAA,SAAAA,EAAA/H,OAAA,SAQW,IARX,yBAAA+H,EAAA3I,SAAAyI,EAAA,kBAzZOvM,MAAAlB,KAAAmB,WAAA,SAqaQuD,KAraR,OAAAoJ,GAAA5M,MAAAlB,KAAAmB,WAAA,SAAA2M,KAAA,OAAAA,GAAAhO,OAAAsB,EAAA,EAAAtB,CAAAuB,IAAAC,KAqaP,SAAAyM,IAAA,IAAA7D,EAAArI,EAAAoH,EAAA+E,EAAAC,EAAAxC,EAAAyC,EAAAC,EAAAC,EAAAzE,EAAA0E,EAAAC,EAAAC,EAAA/E,EAAAlD,EAAAd,EAAAgJ,EAAAnE,EAAAC,EAAAmE,EAAAhF,EAAAiF,EAAAhB,EAAAiB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAA,OAAAtO,IAAAS,KAAA,SAAA8N,GAAA,cAAAA,EAAA5N,KAAA4N,EAAA3N,MAAA,UAAA2N,EAAA5N,KAAA,EAGqBgC,SAASC,eAAe,cACzBG,UAAUyL,SAAS1R,GAJvC,CAAAyR,EAAA3N,KAAA,eAAA2N,EAAAhK,OAAA,wBAQQ/D,EAAWmC,SAASC,eAAe,WAR3C2L,EAAA3N,KAAA,EAS+BkC,EAAc5F,GAT7C,cASIsD,EAASuC,UATbwL,EAAArN,KAYQ0G,EAAW7J,EAZnBwQ,EAAA3N,KAAA,GAa0BoC,EAAQ4E,EAAUrK,GAb5C,eAaIE,EAbJ8Q,EAAArN,KAeQyL,EAAiB,EAfzB4B,EAAA3N,KAAA,GAgBwBhD,EAAe0G,QAAQ0B,SAASlH,OAhBxD,WAgBQ8N,EAhBR2B,EAAArN,KAiB0B,GAAlB9C,EAjBR,CAAAmQ,EAAA3N,KAAA,SAmBewJ,EAAI,EAnBnB,aAmBsBA,EAAI3M,EAAc6K,OAAOmC,QAnB/C,CAAA8D,EAAA3N,KAAA,YAoB4C,WAAhCnD,EAAc6K,OAAO8B,GAAGM,MAAqB1M,EAAmByE,eAAiBhF,EAAc6K,OAAO8B,GAAGO,gBAAgBlI,cApBrI,CAAA8L,EAAA3N,KAAA,gBAqBciM,EAAiBpP,EAAc6K,OAAO8B,GAAGO,gBArBvD4D,EAAA3N,KAAA,GAsB2BjD,EAAmB2G,QAAQsG,WAAWiC,GAAgB/N,OAtBjF,WAsBU+J,EAtBV0F,EAAArN,KAwBc4L,EAAUnK,SAASC,eAAe,UAAYnF,EAAc6K,OAAO8B,GAAGO,iBAEtEoC,EAAkB,EAEP,MAAXD,EA5Bd,CAAAyB,EAAA3N,KAAA,gBAAA2N,EAAA3N,KAAA,GA6BgCsB,GAASjE,EAAMhB,EAAIkM,OAAOlM,IAAKQ,EAAc6K,OAAO8B,GAAGO,iBA7BvF,eA6BYxN,EA7BZoR,EAAArN,KAAAqN,EAAA3N,KAAA,GA8BmCzD,EAAYmH,QAAQ+E,UAAUzB,GAAU9I,OA9B3E,eA8BY6N,EA9BZ4B,EAAArN,KAAAqN,EAAA3N,KAAA,GAgC+BjD,EAAmB2G,QAAQmK,uBAAuB5F,EAAU3L,GAAS4B,OAhCpG,eAgCgBwJ,EAhChBiG,EAAArN,KAiCuBkM,EAAyB9E,EAA5B,GAAa6E,EAAe7E,EAAlB,GAEd4E,EAASwB,OAAOtB,GAAOuB,MAAM,KAAK,GAClCxG,EAAY/G,IAAKgF,MAAMC,QAAQ6G,GACnCH,EAAkBxE,OAAOJ,GAAWK,QAAQ,GArCxD+F,EAAA3N,KAAA,GAwC+BjD,EAAmB2G,QAAQuB,MAAMgD,GAAU/J,OAxC1E,YAwCgBmG,EAxChBsJ,EAAArN,MAyCuB8C,UAAYjG,EAzCnC,CAAAwQ,EAAA3N,KAAA,gBAAA2N,EAAA3N,KAAA,GA0C0CgD,EAAiBqB,EAAOjB,UA1ClE,eA0CkBG,EA1ClBoK,EAAArN,KAAAqN,EAAA3N,KAAA,GA2C8BuD,EAAgBG,QAAQ0B,SAASlH,OA3C/D,QA2Cc8N,EA3Cd2B,EAAArN,KAAA,QA8CY4L,EAAQ/J,UAAR,UAAAyJ,OAA8BW,EAA9B,yCAAAX,OAAiFO,EAAjF,KAAAP,OAAoGI,EAApG,UA9CZ,QAmBuDxC,IAnBvDmE,EAAA3N,KAAA,iBAAA2N,EAAA3N,KAAA,qBAmD+B,GAAlBxC,EAnDb,CAAAmQ,EAAA3N,KAAA,iBAAA2N,EAAA5N,KAAA,GAAA4N,EAAA3N,KAAA,GAqD4BsB,GAASjE,EAAMhB,EAAIkM,OAAOlM,IAAKoB,GArD3D,eAqDQlB,EArDRoR,EAAArN,KAAAqN,EAAA3N,KAAA,GAsDyBjD,EAAmB2G,QAAQsG,WAAWvM,GAAeS,OAtD9E,eAsDQ+J,EAtDR0F,EAAArN,KAAAqN,EAAA3N,KAAA,GAuD+BzD,EAAYmH,QAAQ+E,UAAUzB,GAAU9I,OAvDvE,eAuDQ6N,EAvDR4B,EAAArN,KAwDQ6L,EAAkB,EACdI,EAAc,EAzD1BoB,EAAA3N,KAAA,GA4D6BjD,EAAmB2G,QAAQuB,MAAMgD,GAAU/J,OA5DxE,YA4DcmG,EA5DdsJ,EAAArN,MA6DqB8C,UAAYjG,EA7DjC,CAAAwQ,EAAA3N,KAAA,gBAAA2N,EAAA3N,KAAA,GA8DwCgD,EAAiBqB,EAAOjB,UA9DhE,eA8DgBG,EA9DhBoK,EAAArN,KAAAqN,EAAA3N,KAAA,GA+D4BuD,EAAgBG,QAAQ0B,SAASlH,OA/D7D,QA+DY8N,EA/DZ2B,EAAArN,KAAA,QAkEiB8H,EAAI,EAlErB,aAkEwBA,EAAI2D,GAlE5B,CAAA4B,EAAA3N,KAAA,iBAAA2N,EAAA3N,KAAA,GAmE4BzD,EAAYmH,QAAQgF,oBAAoB1B,EAAUoB,GAAGlK,OAnEjF,eAmEcmK,EAnEdsF,EAAArN,KAAAqN,EAAA3N,KAAA,GAoEoCjD,EAAmB2G,QAAQiF,SAASV,EAAUI,GAAOnK,OApEzF,WAAAyP,EAAArN,KAsE4BsI,OAAStM,EAtErC,CAAAqR,EAAA3N,KAAA,iBAuEYuM,IAvEZoB,EAAA3N,KAAA,GAyE8BjD,EAAmB2G,QAAQsK,cAAc/F,EAAUI,GAAOnK,OAzExF,eAyEgBsO,EAzEhBmB,EAAArN,KA0EgBgM,EAASwB,OAAOtB,GAAOuB,MAAM,KAAK,GAClCxG,EAAY/G,IAAKgF,MAAMC,QAAQ6G,GAC/B9E,EAAUG,OAAOJ,GAAWK,QAAQ,GACxCuE,EAAkBxE,OAAOH,GAASI,QAAQ,IAEpC6E,EAAa1K,SAASC,eAAe,MAAQiG,EAAWI,IACnDlG,UAAY,GACvBsK,EAAWtK,UAAY,SAAWgK,EAAkB,IAAMH,EAjFtE2B,EAAA3N,KAAA,IAoFiCoL,GAAYnD,EAAUI,GApFvD,gBAoFgBoD,EApFhBkC,EAAArN,MAqFkBoM,EAAY3K,SAASC,eAAe,MAAQiG,EAAWI,IACnDlG,UAAY,GACtBuK,EAAUvK,UAAYsJ,EAvFlCkC,EAAA5N,KAAA,IAAA4N,EAAA3N,KAAA,IA2FmCjD,EAAmB2G,QAAQuK,oBAAoBhG,EAAUI,GAAOnK,OA3FnG,gBA2FoBwJ,EA3FpBiG,EAAArN,KA6FyBuM,EAAiCnF,EAApC,GAAoCA,EAAxB,GAAaoF,EAAWpF,EAAd,GAC9BiF,EAAuBG,EA9FrCa,EAAA3N,KAAA,IAsGqCjD,EAAmB2G,QAAQwK,iBAAiBjG,EAAUI,GAAOnK,OAtGlG,eAsGc6O,EAtGdY,EAAArN,MAuGmC,GAvGnC,CAAAqN,EAAA3N,KAAA,iBAAA2N,EAAA3N,KAAA,IAwGoCjD,EAAmB2G,QAAQyK,cAAclG,EAAU8E,GAAgB7O,OAxGvG,gBAwGgB8O,EAxGhBW,EAAArN,KAyGgB2M,EAAcmB,WAAWpB,EAAc,OAAS,IAzGhEW,EAAA3N,KAAA,IA0GoC9C,EAAiBwG,QAAQ2K,cAAcpG,EAAUI,GAAOnK,OA1G5F,YA0GgBgP,EA1GhBS,EAAArN,KA2GgB6M,EAAYiB,WAAWlB,EAAc,OAAS,IAC9CD,GAA4BE,IAGxBR,EAAuB,GA/G3C,CAAAgB,EAAA3N,KAAA,iBAAA2N,EAAA3N,KAAA,IAgHuC/C,EAAcyG,QAAQ4K,YAAYzB,GAAS3O,OAhHlF,SAgHsBkP,GAhHtBO,EAAArN,KAoHsB+M,GAAU1F,OAFDgF,EAAuB,MAAS,GAAK,GAAK,IAGnDW,GAAIiB,KAAKC,MAAMnB,GAAO,OACtBE,GAAIgB,KAAKC,MAAMnB,GAAO,MAAiB,MACvCG,GAAIe,KAAKC,MAAMnB,GAAU,KAAO,IAChCI,GAAIc,KAAKC,MAAMnB,GAAU,IAMzBK,IAJWJ,GAAI,EAAIA,IAAU,GAALA,GAAS,SAAW,WAAa,KAC9CC,GAAI,EAAIA,GAAc,IAAa,KACnCC,GAAI,EAAIA,GAAc,IAAa,KACnCC,GAAI,EAAIA,GAAc,GAAW,IAIhD1L,SAASC,eAAe,OAASiG,EAAWI,GAAOlG,UAAY,mDAAqDuL,GAAgB,eACpHT,EAAYrF,QAAQ,GACpC7F,SAASC,eAAe,MAAQiG,EAAW,IAAMI,GAAOvD,UAAY,mBAAqBsI,GAnI3GO,EAAA3N,KAAA,mBAuIkB+B,SAASC,eAAe,OAASiG,EAAWI,GAAOlG,UAAY,IAAM8K,EAAYrF,QAAQ,GAvI3G,SAAA+F,EAAA3N,KAAA,mBAAA2N,EAAA5N,KAAA,IAAA4N,EAAA/K,GAAA+K,EAAA,WAmJc9K,QAAQC,IAAI,iBAAkBmF,EAAUI,EAAOsE,EAA/CgB,EAAA/K,IAnJd,SAkE4CwF,IAlE5CuF,EAAA3N,KAAA,kBAAA2N,EAAA3N,KAAA,mBAAA2N,EAAA5N,KAAA,IAAA4N,EAAAc,GAAAd,EAAA,UA4JQ9K,QAAQC,IAAI,sCAAZ6K,EAAAc,IA5JR,SAAAd,EAAA3N,KAAA,mBAAA2N,EAAA5N,KAAA,IAAA4N,EAAAe,GAAAf,EAAA,SAiKI9K,QAAQC,IAAI,2BAA4BmF,GACxCpF,QAAQC,IAAR6K,EAAAe,IAlKJ,gBAAAf,EAAAhK,OAAA,SAoKS4I,GApKT,0BAAAoB,EAAA5K,SAAA+I,EAAA,uCAraO7M,MAAAlB,KAAAmB,WAAA,SA4kBQ0K,GA5kBR+E,EAAAC,EAAAC,GAAA,OAAAC,GAAA7P,MAAAlB,KAAAmB,WAAA,SAAA4P,KAAA,OAAAA,GAAAjR,OAAAsB,EAAA,EAAAtB,CAAAuB,IAAAC,KA4kBP,SAAA0P,EAAkCC,EAASC,EAAUC,GAArD,IAAAC,EAAAC,EAAAC,EAAA,OAAAjQ,IAAAS,KAAA,SAAAyP,GAAA,cAAAA,EAAAvP,KAAAuP,EAAAtP,MAAA,OACMmP,EAAWpN,SAASC,eAAe,WACnCoN,EAAYrN,SAASC,eAAe,oBACpCqN,EAActN,SAASC,eAAe,sBAGxCD,SAASC,eAAe,kBAAkBC,MAAMsN,QADlC,GAAXP,GAAkC,GAAZC,GAAqC,GAAdC,EACU,OAGA,GAG7C,GAAXF,GACFG,EAASvE,aAAa,WAAY,YAClCuE,EAASK,UAAUC,IAAI,cAGvBN,EAASO,gBAAgB,YACzBP,EAASK,UAAUG,OAAO,aAGZ,GAAZV,GACFG,EAAUxE,aAAa,WAAY,YACnCwE,EAAUI,UAAUC,IAAI,cAGxBL,EAAUM,gBAAgB,YAC1BN,EAAUI,UAAUG,OAAO,aAGX,GAAdT,GACFG,EAAYzE,aAAa,WAAY,YACrCyE,EAAYG,UAAUC,IAAI,cAG1BJ,EAAYK,gBAAgB,YAC5BL,EAAYG,UAAUG,OAAO,aApCjC,wBAAAL,EAAAvM,SAAAgM,OA5kBO9P,MAAAlB,KAAAmB,WAAA,SAonBQoD,GApnBRsN,GAAA,OAAAC,GAAA5Q,MAAAlB,KAAAmB,WAAA,SAAA2Q,KAAA,OAAAA,GAAAhS,OAAAsB,EAAA,EAAAtB,CAAAuB,IAAAC,KAonBP,SAAAyQ,EAA2BvG,GAA3B,IAAAvC,EAAA+I,EAAAC,EAAAC,EAAA3G,EAAAE,EAAAyC,EAAAhE,EAAA8D,EAAA3D,EAAAC,EAAA6H,EAAAC,EAAA5D,EAAA6D,EAAAC,EAAA,OAAAjR,IAAAS,KAAA,SAAAyQ,GAAA,cAAAA,EAAAvQ,KAAAuQ,EAAAtQ,MAAA,UACe,MAAT1D,EADN,CAAAgU,EAAAtQ,KAAA,eAAAsQ,EAAA3M,OAAA,wBAAA2M,EAAAtQ,KAAA,EAIQrB,IAJR,cAMMqI,EAAW7J,EANjBmT,EAAAtQ,KAAA,EAOwBoC,EAAQ4E,EAAUrK,GAP1C,cAOEE,EAPFyT,EAAAhQ,KAAAgQ,EAAAtQ,KAAA,GASQ4J,IAAmB,GAAO,GAAO,GATzC,SAWQmG,EAAehO,SAASC,eAAeuH,IAChCpH,UAAY,GAGrB9D,EAAM,IACR0R,EAAajL,UAAY,iBAElBzG,GAAO,KAAOA,EAAM,IAC3B0R,EAAajL,UAAY,iBAElBzG,GAAO,KAAQA,EAAM,KAC5B0R,EAAajL,UAAY,iBAEnBzG,GAAO,OACb0R,EAAajL,UAAY,kBAG3BtH,GAAiB,EACbwS,EAAgB,EAChBC,EAAe,KACf3G,EAAiB,KAGZE,EAAI,EAlCf,aAkCkBA,EAAI3M,EAAc6K,OAAOmC,QAlC3C,CAAAyG,EAAAtQ,KAAA,YAmCwC,WAAhCnD,EAAc6K,OAAO8B,GAAGM,MAAqB1M,EAAmByE,eAAiBhF,EAAc6K,OAAO8B,GAAGO,gBAAgBlI,cAnCjI,CAAAyO,EAAAtQ,KAAA,gBAoCUiM,EAAiBpP,EAAc6K,OAAO8B,GAAGO,gBApCnDuG,EAAAtQ,KAAA,GAqC2BjD,EAAmB2G,QAAQsG,WAAWiC,GAAgB/N,OArCjF,eAqCU+J,EArCVqI,EAAAhQ,KAAAgQ,EAAAtQ,KAAA,GAuC0BsB,GAASjE,EAAMhB,EAAIkM,OAAOlM,IAAK4P,GAvCzD,eAuCM1P,EAvCN+T,EAAAhQ,KAAAgQ,EAAAtQ,KAAA,GAwCiCzD,EAAYmH,QAAQ+E,UAAUzB,GAAU9I,OAxCzE,QAwCU6N,EAxCVuE,EAAAhQ,KA0Ce8H,EAAI,EA1CnB,aA0CsBA,EAAI2D,GA1C1B,CAAAuE,EAAAtQ,KAAA,gBAAAsQ,EAAAtQ,KAAA,GA2C0BzD,EAAYmH,QAAQgF,oBAAoB1B,EAAUoB,GAAGlK,OA3C/E,eA2CYmK,EA3CZiI,EAAAhQ,KAAAgQ,EAAAtQ,KAAA,GA4CkCjD,EAAmB2G,QAAQiF,SAASV,EAAUI,GAAOnK,OA5CvF,WAAAoS,EAAAhQ,KA6C0BsI,OAAStM,EA7CnC,CAAAgU,EAAAtQ,KAAA,gBA8CUgQ,IACAC,EAAehI,EACfqB,EAAiB2C,EAhD3BqE,EAAA3M,OAAA,oBA0C0CyE,IA1C1CkI,EAAAtQ,KAAA,iBAkCmDwJ,IAlCnD8G,EAAAtQ,KAAA,oBAuDuB,GAAjBgQ,EAvDN,CAAAM,EAAAtQ,KAAA,gBAwDIxC,GAAiB,EAxDrB8S,EAAAtQ,KAAA,GAyDUiJ,EAAYgH,EAAc3G,GAzDpC,QAAAgH,EAAAtQ,KAAA,kBA6DawJ,EAAI,EA7DjB,aA6DoBA,EAAI3M,EAAc6K,OAAOmC,QA7D7C,CAAAyG,EAAAtQ,KAAA,aA8D0C,WAAhCnD,EAAc6K,OAAO8B,GAAGM,MAAqB1M,EAAmByE,eAAiBhF,EAAc6K,OAAO8B,GAAGO,gBAAgBlI,cA9DnI,CAAAyO,EAAAtQ,KAAA,iBAgEYiM,EAAiBpP,EAAc6K,OAAO8B,GAAGO,gBAhErDuG,EAAAtQ,KAAA,GAiE6BjD,EAAmB2G,QAAQsG,WAAWiC,GAAgB/N,OAjEnF,eAiEY+J,EAjEZqI,EAAAhQ,KAAAgQ,EAAAtQ,KAAA,GAkE+BjD,EAAmB2G,QAAQuB,MAAMgD,GAAU/J,OAlE1E,YAAAoS,EAAAhQ,KAoEuB4E,OApEvB,CAAAoL,EAAAtQ,KAAA,iBAAAsQ,EAAAtQ,KAAA,GAqE8BsB,GAASjE,EAAMhB,EAAIkM,OAAOlM,IAAK4P,GArE7D,eAqEU1P,EArEV+T,EAAAhQ,KAAAgQ,EAAAtQ,KAAA,GAsE8BzD,EAAYmH,QAAQ6M,OAAOrS,OAtEzD,eAsEciS,EAtEdG,EAAAhQ,KAAAgQ,EAAAtQ,KAAA,GAuEqCzD,EAAYmH,QAAQ+E,UAAUzB,GAAU9I,OAvE7E,eAuEc6N,EAvEduE,EAAAhQ,KAAAgQ,EAAAtQ,KAAA,GAwE6BhD,EAAe0G,QAAQ0B,SAASlH,OAxE7D,QAAAoS,EAAAhQ,KA0Ec+H,EAAQ,EACRkE,EAAc,EACTnE,EAAI,EA5EvB,aA4E0BA,EAAI2D,GA5E9B,CAAAuE,EAAAtQ,KAAA,iBAAAsQ,EAAAtQ,KAAA,GA6E0BzD,EAAYmH,QAAQgF,oBAAoB1B,EAAUoB,GAAGlK,OA7E/E,eA6EYmK,EA7EZiI,EAAAhQ,KAAAgQ,EAAAtQ,KAAA,GA+EsCjD,EAAmB2G,QAAQiF,SAASV,EAAUI,GAAOnK,OA/E3F,WAAAoS,EAAAhQ,KAiF8BsI,OAAStM,EAjFvC,CAAAgU,EAAAtQ,KAAA,iBAkFcuM,EAEkB,GApFhC,CAAA+D,EAAAtQ,KAAA,gBAAAsQ,EAAAtQ,KAAA,GAqF6CzD,EAAYmH,QAAQ8M,SAASnI,GAAOnK,OArFjF,eAqFoBkS,EArFpBE,EAAAhQ,MAsFqCmQ,WAAW,WAC9BL,EAAgB,wBAAAxE,OAA2BwE,EAAiBrC,MAAM,WAAW,IAEtEqC,EAAiBK,WAAW,wCACnCL,EAAmBA,EAAiBjJ,QAAjB,yCACnBiJ,EAAgB,wBAAAxE,OAA2BwE,EAAmB,IA3FhFE,EAAAtQ,KAAA,GA6F0CE,MAAMkQ,GAAkBM,KAAK,SAACC,GAAD,OAAcA,EAASpQ,SA7F9F,QA6FoB8P,EA7FpBC,EAAAhQ,KA+FgBzC,OAAAsB,EAAA,EAAAtB,CAAAuB,IAAAC,KAAC,SAAAuR,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAvN,EAAAwN,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAA5S,IAAAS,KAAA,SAAAoS,GAAA,cAAAA,EAAAlS,KAAAkS,EAAAjS,MAAA,cACO6Q,EAAY9O,SAAS8C,cAAc,QAC/BC,UAAY,kBACtB+L,EAAUqB,GAAKjG,EACf4E,EAAU7K,MAAQiC,GAEZ6I,EAAgB/O,SAAS8C,cAAc,QAC/BC,UAAY,aACtBpG,IACFoS,EAAchM,UAAY,sBAGtBiM,EAAiBhP,SAAS8C,cAAc,QAC/BC,UAAY,qBACvBpG,IACFqS,EAAejM,UAAY,6BAIzBuL,EAAa,MAAUzC,SAAS,QAClCoD,EAASjP,SAAS8C,cAAc,SAE1BoM,EAAalP,SAAS8C,cAAc,UAEtCwL,EAAa,MAAUI,WAAW,WACpCQ,EAAWrG,aAAa,MAAxB,wBAAAgB,OAAuDyE,EAAa,MAAUtC,MAAM,WAAW,KAG/FkD,EAAWrG,aAAa,MAAOyF,EAAa,OAE9CY,EAAWrG,aAAa,OAAQ,aAChCoG,EAAOjM,YAAYkM,MAGnBD,EAASjP,SAAS8C,cAAc,QACzB+F,aAAa,MAAO,gBAEvBsG,EAAUb,EAAa,MAC3BW,EAAOpG,aAAa,MAAOsG,IAE7BF,EAAOpG,aAAa,MAAOqB,IAErBkF,EAAmBpP,SAAS8C,cAAc,QAC/BC,UAAY,iBAEvBsM,EAASrP,SAAS8C,cAAc,OAC/B5C,MAAMkQ,MAAQ,QACrBf,EAAOtM,UAAY,YACnBsM,EAAOjP,WAAagO,EAAQtG,OAAS,GAAKsG,EAAQxF,UAAU,EAAG,IAAM,MAAQwF,GAAW,UAElFkB,EAAWtP,SAAS8C,cAAc,SAC/BC,UAAY,QACrBuM,EAASa,GAAK,UAAYjG,EAC1BoF,EAASpP,MAAMkQ,MAAQ,QACvBd,EAASlP,UAAY,GAErBgP,EAAiBpM,YAAYqM,GAC7BD,EAAiBpM,YAAYsM,GAE7BN,EAAehM,YAAYiM,GAC3BD,EAAehM,YAAYoM,IAErBG,EAAgBvP,SAAS8C,cAAc,QAC/BC,UAAY,aAEtByM,EAAOxP,SAAS8C,cAAc,SAC9Bb,EAAMjC,SAAS8C,cAAc,MACjC0M,EAAKxM,YAAYf,GAEbwN,EAAWzP,SAAS8C,cAAc,OAClC4M,EAAU1P,SAAS8C,cAAc,MAtEtCoN,EAAAjS,KAAA,GAuEsBzD,EAAYmH,QAAQ6M,OAAOrS,OAvEjD,eAuEKwT,EAvELO,EAAA3R,KAAA2R,EAAAjS,KAAA,GAwEoBzD,EAAYmH,QAAQ0B,SAASlH,OAxEjD,eAwEKyT,EAxELM,EAAA3R,KAAA2R,EAAAjS,KAAA,GAyEqBzD,EAAYmH,QAAQ0O,cAAclU,OAzEvD,QAyEK0T,EAzELK,EAAA3R,KA0ECmR,EAAQtP,UAAY,SAAWuP,EAAW,gBAAkBC,EAAS,sBAAwBC,EAC7FJ,EAASzM,YAAY0M,GACrBF,EAAKxM,YAAYyM,IAEbK,EAAO9P,SAAS8C,cAAc,OAC7BC,UAAU,kBAETgN,EAAkB/P,SAAS8C,cAAc,MAC/B5C,MAAMkQ,MAAQ,QAC9BL,EAAgB3P,UAAY,aAC5B2P,EAAgBhN,UAAY,YAC5BgN,EAAgBO,QAAU,WAAcxK,EAAWgJ,EAAU7K,SAEvD+L,EAAoBhQ,SAAS8C,cAAc,MAC/B5C,MAAMkQ,MAAQ,QAChCJ,EAAkB5P,UAAY,eAC9B4P,EAAkBjN,UAAY,YAC9BiN,EAAkBM,QAAU,WAAcvH,GAAa+F,EAAU7K,SAE3DgM,EAAmBjQ,SAAS8C,cAAc,MAC/B5C,MAAMkQ,MAAQ,QAC/BH,EAAiB7P,UAAY,SAC7B6P,EAAiBlN,UAAY,YAC7BkN,EAAiBK,QAAU,WAAcpJ,EAAY4H,EAAU7K,MAAO6K,EAAUqB,KAEhFL,EAAK9M,YAAY+M,GACjBD,EAAK9M,YAAYgN,GACjBF,EAAK9M,YAAYiN,GAEjBT,EAAKxM,YAAY8M,GACjBP,EAAcvM,YAAYwM,GAO1BT,EAAc/L,YAAYgM,GAC1BD,EAAc/L,YAAYuM,GAE1BT,EAAU9L,YAAY+L,GAEtBf,EAAahL,YAAY8L,GApH1B,yBAAAoB,EAAAlP,SAAA6N,KAAD/S,GA/FhB,eAAAyS,EAAA3M,OAAA,sBA4E8CyE,IA5E9CkI,EAAAtQ,KAAA,kBA6DqDwJ,IA7DrD8G,EAAAtQ,KAAA,mCAAAsQ,EAAAvN,SAAA+M,OApnBO7Q,MAAAlB,KAAAmB,WAAA,SAo1BQ+G,GAp1BRqM,EAAAC,EAAAC,EAAAC,GAAA,OAAAC,GAAAzT,MAAAlB,KAAAmB,WAAA,SAAAwT,KAAA,OAAAA,GAAA7U,OAAAsB,EAAA,EAAAtB,CAAAuB,IAAAC,KAo1BP,SAAAsT,EAAuB3L,EAAUuC,EAAe/C,EAAoBoM,GAApE,IAAAC,EAAAC,EAAAC,EAAAC,EAAAxJ,EAAAyJ,EAAAC,EAAA,OAAA9T,IAAAS,KAAA,SAAAsT,GAAA,cAAAA,EAAApT,KAAAoT,EAAAnT,MAAA,UAAAmT,EAAApT,KAAA,EAEQ8S,EAAc,EACdC,EAAc/Q,SAASC,eAAe,eACtC+Q,EAAmBhR,SAASC,eAAe,oBAE/CD,SAASC,eAAeuH,GAAepH,UAAY,GAIjC,OAAdyQ,GAAqC,iBAAdA,EAV/B,CAAAO,EAAAnT,KAAA,YAWM8S,EAAYlI,aAAa,WAAY,YACrCmI,EAAiBnI,aAAa,WAAY,YAGhB,MAAtBpE,EAfV,CAAA2M,EAAAnT,KAAA,SAAAmT,EAAAvQ,GAAAxD,IAAAgU,KAgBwBtW,EAAgBuW,KAhBxC,YAAAF,EAAA1E,GAAA0E,EAAAvQ,MAAA0Q,KAAA,CAAAH,EAAAnT,KAAA,SAgBiBgT,EAhBjBG,EAAA1E,GAAAzI,MAiBmBwD,EAAI,EAjBvB,aAiB0BA,EAAIhD,EAAmBkB,OAAOmC,QAjBxD,CAAAsJ,EAAAnT,KAAA,YAkBqD,WAArCwG,EAAmBkB,OAAO8B,GAAGM,KAlB7C,CAAAqJ,EAAAnT,KAAA,YAmBkBlD,EAAgBuW,IAAIL,GAAKO,SAAW/M,EAAmBkB,OAAO8B,GAAGO,gBAnBnF,CAAAoJ,EAAAnT,KAAA,gBAAAmT,EAAAnT,KAAA,GAoBoCsB,GAASjE,EAAMhB,EAAIkM,OAAOlM,IAAKmK,EAAmBkB,OAAO8B,GAAGO,iBApBhG,eAoBgBxN,EApBhB4W,EAAA7S,KAAA6S,EAAAzE,GAsB8BmE,EAtB9BM,EAAAnT,KAAA,GAsBmDiK,GAAUV,EAAehN,EAAaiK,EAAmBkB,OAAO8B,GAAGO,gBAAiB/C,GAtBvI,eAAAmM,EAAAK,GAAAL,EAAA7S,KAsBgBuS,EAtBhBM,EAAAzE,GAAAyE,EAAAK,GAAAL,EAAAxP,OAAA,oBAiBgE6F,IAjBhE2J,EAAAnT,KAAA,iBAAAmT,EAAAnT,KAAA,iBA+BiBwJ,EAAI,EA/BrB,aA+BwBA,EAAIhD,EAAmBkB,OAAOmC,QA/BtD,CAAAsJ,EAAAnT,KAAA,YAgCmD,WAArCwG,EAAmBkB,OAAO8B,GAAGM,MAAqB1M,EAAmByE,eAAiB2E,EAAmBkB,OAAO8B,GAAGO,gBAAgBlI,cAhCjJ,CAAAsR,EAAAnT,KAAA,SAkCY,IAASgT,KADTC,EAAM,EACUnW,EAAgBuW,IAC1BvW,EAAgBuW,IAAIL,GAAKO,SAAW/M,EAAmBkB,OAAO8B,GAAGO,iBACnEkJ,IApChB,KAuCgBA,GAAOnW,EAAgBuW,IAAIxJ,QAvC3C,CAAAsJ,EAAAnT,KAAA,gBAAAmT,EAAAnT,KAAA,GAwCkCsB,GAASjE,EAAMhB,EAAIkM,OAAOlM,IAAKmK,EAAmBkB,OAAO8B,GAAGO,iBAxC9F,eAwCcxN,EAxCd4W,EAAA7S,KAAA6S,EAAAM,GA0C4BZ,EA1C5BM,EAAAnT,KAAA,GA0CiDiK,GAAUV,EAAehN,EAAaiK,EAAmBkB,OAAO8B,GAAGO,gBAAiB/C,GA1CrI,QAAAmM,EAAAO,GAAAP,EAAA7S,KA0CcuS,EA1CdM,EAAAM,GAAAN,EAAAO,GAAA,QA+B8DlK,IA/B9D2J,EAAAnT,KAAA,iBAAAmT,EAAAnT,KAAA,wBAAAmT,EAAAnT,KAAA,GAkD0BsB,GAASjE,EAAMhB,EAAIkM,OAAOlM,IAAKuW,GAlDzD,eAkDMrW,EAlDN4W,EAAA7S,KAAA6S,EAAAQ,GAuDoBd,EAvDpBM,EAAAnT,KAAA,GAuDyCiK,GAAUV,EAAehN,EAAaqW,EAAY5L,GAvD3F,QAAAmM,EAAAS,GAAAT,EAAA7S,KAuDMuS,EAvDNM,EAAAQ,GAAAR,EAAAS,GAwDMd,EAAYpD,gBAAgB,YAC5BqD,EAAiBrD,gBAAgB,YAzDvC,QA4DuB,GAAfmD,GACFgB,GAAa,mBA7DnBV,EAAAnT,KAAA,iBAAAmT,EAAApT,KAAA,GAAAoT,EAAAW,GAAAX,EAAA,SAkEItQ,QAAQC,IAAI,wBAAAqQ,EAAAW,IACZD,GAAYV,EAAAW,IAnEhB,yBAAAX,EAAApQ,SAAA4P,EAAA,mBAp1BO1T,MAAAlB,KAAAmB,WAAA,SA25BQoC,GA35BRyS,EAAAC,EAAAC,GAAA,OAAAC,GAAAjV,MAAAlB,KAAAmB,WAAA,SAAAgV,KAAA,OAAAA,GAAArW,OAAAsB,EAAA,EAAAtB,CAAAuB,IAAAC,KA25BP,SAAA8U,EAAwB9W,EAAM+W,EAAMC,GAApC,IAAAC,EAAAC,EAAAC,EAAA,OAAApV,IAAAS,KAAA,SAAA4U,GAAA,cAAAA,EAAA1U,KAAA0U,EAAAzU,MAAA,cAAAyU,EAAAzU,KAAA,EAIsBE,MAAMkU,EAAM,CAC9BjU,QAAS,CACPC,eAAgB,mBAChBC,OAAQ,sBAPd,cAIEkU,EAJFE,EAAAnU,KAAAmU,EAAAzU,KAAA,EAUwBuU,EAAYhU,OAVpC,cAUQiU,EAVRC,EAAAnU,KAWEgU,EAAY,IAAIjX,EAAKqD,IAAIgU,SAASF,EAASH,GAX7CI,EAAA9Q,OAAA,SAYS2Q,GAZT,wBAAAG,EAAA1R,SAAAoR,OA35BOlV,MAAAlB,KAAAmB,WAAA,SA06BQmD,GA16BRsS,GAAA,OAAAC,GAAA3V,MAAAlB,KAAAmB,WAAA,SAAA0V,KAAA,OAAAA,GAAA/W,OAAAsB,EAAA,EAAAtB,CAAAuB,IAAAC,KA06BP,SAAAwV,EAA6BrO,GAA7B,IAAAsO,EAAAtL,EAAAuL,EAAAC,EAAAC,EAAAC,EAAA,OAAA9V,IAAAS,KAAA,SAAAsV,GAAA,cAAAA,EAAApV,KAAAoV,EAAAnV,MAAA,OAIE,KAHI8U,EAAS/S,SAASC,eAAe,cAC9BG,UAAY,GAEVqH,EAAI,EAAGA,EAAIhD,EAAmBkB,OAAOmC,OAAQL,IAC3C,GAALA,KACEuL,EAAMhT,SAAS8C,cAAc,WAC7B+F,aAAa,QAAS,OACtBoK,EAAMjT,SAASqT,eAAe,iBAElCL,EAAIhQ,YAAYiQ,GAChBF,EAAO/P,YAAYgQ,IAGoB,WAArCvO,EAAmBkB,OAAO8B,GAAGM,MAAqBtD,EAAmBkB,OAAO8B,GAAG6L,QAAU,GAAKjY,EAAmByE,eAAiB2E,EAAmBkB,OAAO8B,GAAGO,gBAAgBlI,iBAC7KoT,EAAIlT,SAAS8C,cAAc,WAC7B+F,aAAa,QAASpE,EAAmBkB,OAAO8B,GAAGO,iBAEjDmL,EAAInT,SAASqT,eAAe5O,EAAmBkB,OAAO8B,GAAG+G,KAAO,KAAO/J,EAAmBkB,OAAO8B,GAAG6L,SACxGJ,EAAElQ,YAAYmQ,GAEdJ,EAAO/P,YAAYkQ,IArBzB,wBAAAE,EAAApS,SAAA8R,OA16BO5V,MAAAlB,KAAAmB,WAAA,SAq8BQoW,GAr8BRC,EAAAC,EAAAC,EAAAC,GAAA,OAAAC,GAAA1W,MAAAlB,KAAAmB,WAAA,SAAAyW,KAAA,OAAAA,GAAA9X,OAAAsB,EAAA,EAAAtB,CAAAuB,IAAAC,KAq8BP,SAAAuW,EAA6BrZ,EAAayK,EAAU6O,EAAMC,GAA1D,IAAAzF,EAAAD,EAAA,OAAAhR,IAAAS,KAAA,SAAAkW,GAAA,cAAAA,EAAAhW,KAAAgW,EAAA/V,MAAA,cACMqQ,EAAgB,KADtB0F,EAAAhW,KAAA,EAAAgW,EAAA/V,KAAA,EAGiCzD,EAAYmH,QAAQ8M,SAASqF,GAAM3X,OAHpE,cAGQkS,EAHR2F,EAAAzV,MAIyBmQ,WAAW,WAC9BL,EAAgB,wBAAAxE,OAA2BwE,EAAiBrC,MAAM,WAAW,IAEtEqC,EAAiBK,WAAW,wCACnCL,EAAmBA,EAAiBjJ,QAAjB,yCACnBiJ,EAAgB,wBAAAxE,OAA2BwE,GAA3BxE,OAA8CiK,IATpEE,EAAA/V,KAAA,EAW0BE,MAAMkQ,GAAkBM,KAAK,SAACC,GAAD,OAAcA,EAASpQ,SAX9E,OAWI8P,EAXJ0F,EAAAzV,KAYIuC,QAAQC,IAAIuN,GAZhB0F,EAAA/V,KAAA,iBAAA+V,EAAAhW,KAAA,GAAAgW,EAAAnT,GAAAmT,EAAA,SAeI1F,EAAgB,iFAChBxN,QAAQC,IAAIuN,GACZxN,QAAQC,IAAI,YAAcgT,GAC1BjT,QAAQC,IAARiT,EAAAnT,IAlBJ,eAAAmT,EAAApS,OAAA,SAqBS0M,GArBT,yBAAA0F,EAAAhT,SAAA6S,EAAA,mBAr8BO3W,MAAAlB,KAAAmB,WAAA,SA89BQ+K,GA99BR+L,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,OAAAC,GAAApX,MAAAlB,KAAAmB,WAAA,SAAAmX,KAAA,OAAAA,GAAAxY,OAAAsB,EAAA,EAAAtB,CAAAuB,IAAAC,KA89BP,SAAAiX,EAAyB/M,EAAehN,EAAa0P,EAAgBjF,EAAUuP,GAA/E,IAAApG,EAAAhI,EAAAqO,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA/N,EAAA,OAAApK,IAAAS,KAAA,SAAA2X,GAAA,cAAAA,EAAAzX,KAAAyX,EAAAxX,MAAA,cAAAwX,EAAAxX,KAAA,EACsBzD,EAAYmH,QAAQ6M,OAAOrS,OADjD,cACMiS,EADNqH,EAAAlX,KAAAkX,EAAAxX,KAAA,EAE6BzD,EAAYmH,QAAQ+E,UAAUzB,GAAU9I,OAFrE,OAEMiK,EAFNqP,EAAAlX,KAIMkW,EAAezU,SAASC,eAAeuH,GAe3C,IAgBE,IAdIlL,GAAO,KAAOA,EAAM,IACtBmY,EAAa1R,UAAY,iBAElBzG,GAAO,KAAOA,EAAM,IAC3BmY,EAAa1R,UAAY,iBAElBzG,GAAO,KAAQA,EAAM,KAC5BmY,EAAa1R,UAAY,iBAEnBzG,GAAO,OACbmY,EAAa1R,UAAY,kBAG3BhD,EAAa,cAfZyV,EAAA,SAgBQ/N,GACP3L,OAAAsB,EAAA,EAAAtB,CAAAuB,IAAAC,KAAC,SAAAoY,IAAA,IAAA5B,EAAAxF,EAAApI,EAAAyP,EAAAzG,EAAA0G,EAAA,OAAAvY,IAAAS,KAAA,SAAA+X,GAAA,cAAAA,EAAA7X,KAAA6X,EAAA5X,MAAA,cAAA4X,EAAA5X,KAAA,EACoBzD,EAAYmH,QAAQgF,oBAAoB1B,EAAUwC,GAAGtL,OADzE,cACO2X,EADP+B,EAAAtX,KAAAsX,EAAA5X,KAAA,EAE6BsV,GAAc/Y,EAAayK,EAAU6O,EAAM,aAFxE,cAEOxF,EAFPuH,EAAAtX,KAAAsX,EAAA5X,KAAA,EAGwBjD,EAAmB2G,QAAQsG,WAAWiC,GAAgB/N,OAH9E,cAGO+J,EAHP2P,EAAAtX,KAAAsX,EAAA5X,KAAA,GAK2BjD,EAAmB2G,QAAQiF,SAASV,EAAU4N,GAAM3X,OAL/E,WAKKwZ,EALLE,EAAAtX,MAMKiW,EANL,CAAAqB,EAAA5X,KAAA,YAOO0X,EAAc9O,OAAStM,EAP9B,CAAAsb,EAAA5X,KAAA,gBAAA4X,EAAAjU,OAAA,kBAgDC,IApCA8S,EAAU1U,SAAS8C,cAAc,QACzBqN,GAAK,MAAQjK,EAAW,IAAM4N,EACtCY,EAAQ3R,UAAY,WAEpB4R,EAAW3U,SAAS8C,cAAc,UACzB+F,aAAa,KAAM,MAAQ3C,EAAW4N,GAC/CY,EAAQ1R,YAAY2R,IAEpBC,EAAW5U,SAAS8C,cAAc,OACzBC,UAAY,WACrB4R,EAAS3R,YAAY4R,IAErBC,EAAQ7U,SAAS8C,cAAc,OACzBC,UAAY,QAClB6R,EAAS5R,YAAY6R,IAErBC,EAAS9U,SAAS8C,cAAc,OACzBqN,GAAK,MAAQjK,EAAW4N,EAC/BgB,EAAO/R,UAAY,SACnB+R,EAAO1U,UAAY,GACnByU,EAAM7R,YAAY8R,IAGlBC,EAAS/U,SAAS8C,cAAc,UACzB+F,aAAa,OAAQ,YAC5BkM,EAAO5E,GAAKjG,EAAiB,IAAM4J,EACnCiB,EAAOhS,UAAY,SACnB8R,EAAM7R,YAAY+R,IAGlBC,EAAShV,SAAS8C,cAAc,UACzBC,UAAY,SACnBiS,EAAOc,QAAUf,EAAO5E,GACxB0E,EAAM7R,YAAYgS,GAGd1G,EAAa,MAAUzC,SAAS,OAClCoJ,EAASjV,SAAS8C,cAAc,SAC1BoM,EAAalP,SAAS8C,cAAc,UACtCwL,EAAa,MAAUI,WAAW,WACpCQ,EAAWrG,aAAa,MAAxB,wBAAAgB,OAAuDyE,EAAa,MAAUtC,MAAM,WAAW,KAG/FkD,EAAWrG,aAAa,MAAOyF,EAAa,OAE9CY,EAAWrG,aAAa,OAAQ,aAChCoM,EAAOjS,YAAYkM,QAGnB,IACE+F,EAASjV,SAAS8C,cAAc,OAC5B8S,EAAUtH,EAAa,MAC3BxN,QAAQC,IAAI6U,GACRA,EAAQlH,WAAW,WACrBkH,EAAO,wBAAA/L,OAA2B+L,EAAQxQ,QAAQ,UAAW,KAEtDwQ,EAAQlH,WAAW,yCAC1BkH,EAAUA,EAAQxQ,QAAR,uEACVtE,QAAQC,IAAI,qBAAsB6U,IAEpCX,EAAOpM,aAAa,MAAO+M,GAE7B,MAAMG,GACJjV,QAAQC,IAAIgV,GACZd,EAAOpM,aAAa,MAAO,cAG/BoM,EAAOpM,aAAa,MAAO,uBAC3BoM,EAAOlS,UAAU,SACjBiS,EAAOhS,YAAYiS,IAEnBC,EAASlV,SAAS8C,cAAc,OACzBC,UAAY,SACnB4R,EAAS3R,YAAYkS,IAErBC,EAAWnV,SAAS8C,cAAc,OACzBC,UAAY,WACrBmS,EAAOlS,YAAYmS,IAGnBC,EAAUpV,SAAS8C,cAAc,OACzBqN,GAAK,MAAQjK,EAAW4N,EAChCsB,EAAQrS,UAAY,UACpBqS,EAAQhV,WAAagO,EAAQtG,OAAS,GAAKsG,EAAQxF,UAAU,EAAG,IAAMwF,GAAlD,MAAqE0F,EAAKhM,OAAS,EAAIgM,EAAKlL,UAAU,EAAG,GAAKkL,GAClIqB,EAASnS,YAAYoS,IAGrBC,EAAUrV,SAAS8C,cAAc,OACzBqN,GAAK,MAAQjK,EAAW4N,EAChCuB,EAAQtS,UAAY,UACpBsS,EAAQjV,UAAY,GACpB+U,EAASnS,YAAYqS,IAGrBC,EAAStV,SAAS8C,cAAc,WACzBiF,KAAO,SACduN,EAAOvS,UAAY,SACnBuS,EAAOpV,MAAQ,qCACfoV,EAAOlV,UAAY,IAGjBkV,EAAOhF,QADLkE,EACe,WACfwB,GAAW9P,EAAW,IAAM4N,EAAM,SAAU7P,OAK7B,WACfgS,GAAmB/P,EAAW,IAAM4N,EAAO,IAAM5J,EAAgB,SAAUjG,OAK/EkR,EAASnS,YAAYsS,IAOrBC,EAAUvV,SAAS8C,cAAc,OACzBqN,GAAK,OAASjK,EAAW4N,EACjCyB,EAAQxS,UAAY,UACpBwS,EAAQnV,UAAY,GACpB+U,EAASnS,YAAYuS,GAGrBd,EAAazR,YAAY0R,GA3I1B,yBAAAmB,EAAA7U,SAAA0U,KAAD5Z,IADO2L,EAAI,EAAGA,EAAIrB,EAAgBqB,IAAI+N,EAA/B/N,GAgJT1H,EAAa,IAKf,MAAM4I,GACJmJ,GAAatX,EAAc,iCAC3BsG,QAAQC,IAAI,YAAY4H,GA1L5B,wBAAA8M,EAAAzU,SAAAuT,OA99BOrX,MAAAlB,KAAAmB,WAAA,SA01CQ+Y,KA11CR,OAAAC,GAAAjZ,MAAAlB,KAAAmB,WAAA,SAAAgZ,KAAA,OAAAA,GAAAra,OAAAsB,EAAA,EAAAtB,CAAAuB,IAAAC,KA01CP,SAAA8Y,IAAA,OAAA/Y,IAAAS,KAAA,SAAAuY,GAAA,cAAAA,EAAArY,KAAAqY,EAAApY,MAAA,OACEqY,IAAU,GADZ,wBAAAD,EAAArV,SAAAoV,OA11COlZ,MAAAlB,KAAAmB,WAAA,SA81CQoZ,KA91CR,OAAAC,GAAAtZ,MAAAlB,KAAAmB,WAAA,SAAAqZ,KAAA,OAAAA,GAAA1a,OAAAsB,EAAA,EAAAtB,CAAAuB,IAAAC,KA81CP,SAAAmZ,IAAA,OAAApZ,IAAAS,KAAA,SAAA4Y,GAAA,cAAAA,EAAA1Y,KAAA0Y,EAAAzY,MAAA,OACEqY,IAAU,GADZ,wBAAAI,EAAA1V,SAAAyV,OA91COvZ,MAAAlB,KAAAmB,WAAA,SAk2CQwZ,KAl2CR,OAAAC,GAAA1Z,MAAAlB,KAAAmB,WAAA,SAAAyZ,KAAA,OAAAA,GAAA9a,OAAAsB,EAAA,EAAAtB,CAAAuB,IAAAC,KAk2CP,SAAAuZ,IAAA,OAAAxZ,IAAAS,KAAA,SAAAgZ,GAAA,cAAAA,EAAA9Y,KAAA8Y,EAAA7Y,MAAA,OACEsC,GAAY,wBADd,wBAAAuW,EAAA9V,SAAA6V,OAl2CO3Z,MAAAlB,KAAAmB,WAAA,SAs2CQmZ,GAt2CRS,GAAA,OAAAC,GAAA9Z,MAAAlB,KAAAmB,WAAA,SAAA6Z,KAAA,OAAAA,GAAAlb,OAAAsB,EAAA,EAAAtB,CAAAuB,IAAAC,KAs2CP,SAAA2Z,EAAyB7N,GAAzB,IAAA8N,EAAAC,EAAAC,EAAAC,EAAA5P,EAAA6P,EAAApR,EAAAG,EAAAkR,EAAA,OAAAla,IAAAS,KAAA,SAAA0Z,GAAA,cAAAA,EAAAxZ,KAAAwZ,EAAAvZ,MAAA,UAAAuZ,EAAAxZ,KAAA,EAEiB,MAATzD,EAFR,CAAAid,EAAAvZ,KAAA,eAAAuZ,EAAA5V,OAAA,wBAAA4V,EAAAvZ,KAAA,EAKUrB,IALV,cAAA4a,EAAAvZ,KAAA,EAMU8B,EAAa,cANvB,OAWI,IAHMiO,EAAehO,SAASC,eAAe,wBACzCkX,EAAWnJ,EAAayJ,qBAAqB,KAC7CL,EAAW,GACN3P,EAAI,EAAGA,EAAI0P,EAASrP,OAAQL,IAEjB,aADlB4P,EAAQF,EAAS1P,IACPM,MAAuC,GAAjBsP,EAAMK,SACpCN,EAAStQ,KAAKuQ,GAIdC,EAAQ,GAIHjR,EAAI,EAtBjB,aAsBoBA,EAAI+Q,EAAStP,QAtBjC,CAAA0P,EAAAvZ,KAAA,gBAuBUsZ,EAAM,GACVA,EAAMH,EAAS/Q,GAAG8J,GAAGnE,MAAM,KAxBjCwL,EAAAvZ,KAAA,GAyBuBjD,EAAmB2G,QAAQsG,WAAWsP,EAAI,IAAIpb,OAzBrE,QAyBM+J,EAzBNsR,EAAAjZ,KA2BM+Y,EAAMxQ,KAAKyQ,EAAI,IA3BrB,QAsByClR,IAtBzCmR,EAAAvZ,KAAA,qBA8BQmL,EA9BR,CAAAoO,EAAAvZ,KAAA,gBAAAuZ,EAAAvZ,KAAA,GA+BYjD,EAAmB2G,QAAQyH,QAAQlD,EAAUoR,GAAO5Y,KAAK,CAAEsI,KAAMzM,IA/B7E,QAAAid,EAAAvZ,KAAA,wBAAAuZ,EAAAvZ,KAAA,GAkCYjD,EAAmB2G,QAAQoF,MAAMb,EAAUoR,GAAO5Y,KAAK,CAAEsI,KAAMzM,IAlC3E,QAoCIoc,KApCJa,EAAAvZ,KAAA,iBAAAuZ,EAAAxZ,KAAA,GAAAwZ,EAAA3W,GAAA2W,EAAA,SAwCI1W,QAAQC,IAAI,eAAAyW,EAAA3W,IAxChB,eAAA2W,EAAAvZ,KAAA,GA0CQ8B,EAAa,IA1CrB,yBAAAyX,EAAAxW,SAAAiW,EAAA,mBAt2CO/Z,MAAAlB,KAAAmB,WAAA,SAm6CQwa,KAn6CR,OAAAC,GAAA1a,MAAAlB,KAAAmB,WAAA,SAAAya,KAAA,OAAAA,GAAA9b,OAAAsB,EAAA,EAAAtB,CAAAuB,IAAAC,KAm6CP,SAAAua,IAAA,IAAA7J,EAAAmJ,EAAAC,EAAAC,EAAA5P,EAAAqQ,EAAAC,EAAAT,EAAAC,EAAArR,EAAA,OAAA7I,IAAAS,KAAA,SAAAka,GAAA,cAAAA,EAAAha,KAAAga,EAAA/Z,MAAA,UACe,MAAT1D,EADN,CAAAyd,EAAA/Z,KAAA,eAAA+Z,EAAApW,OAAA,iBASE,IAJMoM,EAAehO,SAASC,eAAe,0BACzCkX,EAAWnJ,EAAayJ,qBAAqB,KAC7CL,EAAW,GAEN3P,EAAI,EAAGA,EAAI0P,EAASrP,OAAQL,IAEjB,aADlB4P,EAAQF,EAAS1P,IACPM,MACRqP,EAAStQ,KAAKuQ,GAZpB,GAgByB,GAAnBD,EAAStP,OAhBf,CAAAkQ,EAAA/Z,KAAA,eAAA+Z,EAAApW,OAAA,iBAoBMkW,GAAa,EAEbR,EAAQ,IAEE,EAEL7P,EAAI,EA1Bf,aA0BkBA,EAAI2P,EAAStP,QA1B/B,CAAAkQ,EAAA/Z,KAAA,YA2BQsZ,EAAM,GACVA,EAAMH,EAAS3P,GAAG0I,GAAG/K,QAAQ,MAAO,IAAI4G,MAAM,KAE5B,GAAd8L,EA9BR,CAAAE,EAAA/Z,KAAA,gBA+BM8Z,EAAUR,EAAI,GA/BpBS,EAAA/Z,KAAA,GAgCY8B,EAAa,eAhCzB,eAAAiY,EAAA/Z,KAAA,GAiCyBga,GAAcF,GAjCvC,WAmCwB,IAFlBD,EAjCNE,EAAAzZ,MAAA,CAAAyZ,EAAA/Z,KAAA,gBAoCkB,EApClB+Z,EAAA/Z,KAAA,GAqCc8B,EAAa,IArC3B,eAAAiY,EAAApW,OAAA,yBAAAoW,EAAA/Z,KAAA,GAwCY8B,EAAa,cAxCzB,QA2CIuX,EAAMxQ,KAAKyQ,EAAI,IA3CnB,QA0BuC9P,IA1BvCuQ,EAAA/Z,KAAA,wBAAA+Z,EAAA/Z,KAAA,GA8CYia,GAAYH,GA9CxB,YAAAC,EAAAzZ,KAAA,CAAAyZ,EAAA/Z,KAAA,gBAAA+Z,EAAA/Z,KAAA,GA+CyBjD,EAAmB2G,QAAQsG,WAAW8P,GAAS5b,OA/CxE,eA+CQ+J,EA/CR8R,EAAAzZ,KAAAyZ,EAAA/Z,KAAA,GAgDUjD,EAAmB2G,QAAQwW,MAAMjS,EAAUoR,GAAO5Y,KAAK,CAAEsI,KAAMzM,IAhDzE,QAAAyd,EAAA/Z,KAAA,wBAAA+Z,EAAA/Z,KAAA,GAmDUjD,EAAmB2G,QAAQyW,SAASL,EAAST,GAAO,GAAM5Y,KAAK,CAAEsI,KAAMzM,IAnDjF,eAAAyd,EAAA/Z,KAAA,GAqDQgJ,KArDR,eAAA+Q,EAAA/Z,KAAA,GAsDQ8B,EAAa,IAtDrB,yBAAAiY,EAAAhX,SAAA6W,OAn6CO3a,MAAAlB,KAAAmB,WAAA,SA89CQkb,KA99CR,OAAAC,GAAApb,MAAAlB,KAAAmB,WAAA,SAAAmb,KAAA,OAAAA,GAAAxc,OAAAsB,EAAA,EAAAtB,CAAAuB,IAAAC,KA89CP,SAAAib,IAAA,IAAAC,EAAArB,EAAAC,EAAAC,EAAA5P,EAAAqQ,EAAAC,EAAAT,EAAAC,EAAArR,EAAA,OAAA7I,IAAAS,KAAA,SAAA2a,GAAA,cAAAA,EAAAza,KAAAya,EAAAxa,MAAA,UAAAwa,EAAAza,KAAA,EAEiB,MAATzD,EAFR,CAAAke,EAAAxa,KAAA,eAAAwa,EAAA7W,OAAA,wBAAA6W,EAAAxa,KAAA,EAKU8B,EAAa,cALvB,OAUI,IAHMiO,EAAehO,SAASC,eAAe,0BACzCkX,EAAWnJ,EAAayJ,qBAAqB,KAC7CL,EAAW,GACN3P,EAAI,EAAGA,EAAI0P,EAASrP,OAAQL,IAEjB,aADlB4P,EAAQF,EAAS1P,IACPM,MAAuC,GAAjBsP,EAAMK,SACpCN,EAAStQ,KAAKuQ,GAIdS,GAAa,EAEbR,EAAQ,IAEE,EAEL7P,EAAI,EAvBjB,aAuBoBA,EAAI2P,EAAStP,QAvBjC,CAAA2Q,EAAAxa,KAAA,YAwBUsZ,EAAM,GACVA,EAAMH,EAAS3P,GAAG0I,GAAG/K,QAAQ,MAAO,IAAI4G,MAAM,KAE5B,GAAd8L,EA3BV,CAAAW,EAAAxa,KAAA,gBA4BQ8Z,EAAUR,EAAI,GA5BtBkB,EAAAxa,KAAA,GA6BgB8B,EAAa,IA7B7B,eAAA0Y,EAAAxa,KAAA,GA8BgB8B,EAAa,eA9B7B,eAAA0Y,EAAAxa,KAAA,GA+B2Bga,GAAcF,GA/BzC,WAiC0B,IAFlBD,EA/BRW,EAAAla,MAAA,CAAAka,EAAAxa,KAAA,gBAkCoB,EAlCpBwa,EAAAxa,KAAA,GAmCgB8B,EAAa,IAnC7B,eAAA0Y,EAAA7W,OAAA,yBAAA6W,EAAAxa,KAAA,GAsCc8B,EAAa,cAtC3B,QAwCMuX,EAAMxQ,KAAKyQ,EAAI,IAxCrB,QAuByC9P,IAvBzCgR,EAAAxa,KAAA,wBAAAwa,EAAAxa,KAAA,GA2Ccia,GAAYH,GA3C1B,YAAAU,EAAAla,KAAA,CAAAka,EAAAxa,KAAA,gBAAAwa,EAAAxa,KAAA,GA4C2BjD,EAAmB2G,QAAQsG,WAAW8P,GAAS5b,OA5C1E,eA4CU+J,EA5CVuS,EAAAla,KAAAka,EAAAxa,KAAA,GA6CYjD,EAAmB2G,QAAQwW,MAAMjS,EAAUoR,GAAO5Y,KAAK,CAAEsI,KAAMzM,IA7C3E,QAAAke,EAAAxa,KAAA,wBAAAwa,EAAAxa,KAAA,GAgDYjD,EAAmB2G,QAAQyW,SAASL,EAAST,GAAO,GAAM5Y,KAAK,CAAEsI,KAAMzM,IAhDnF,eAAAke,EAAAxa,KAAA,GAkDUgJ,KAlDV,eAAAwR,EAAAxa,KAAA,GAmDU8B,EAAa,IAnDvB,QAAA0Y,EAAAxa,KAAA,iBAAAwa,EAAAza,KAAA,GAAAya,EAAA5X,GAAA4X,EAAA,SAsDI3X,QAAQC,IAAI,eAAA0X,EAAA5X,IAtDhB,eAAA4X,EAAAxa,KAAA,GAwDQ8B,EAAa,IAxDrB,yBAAA0Y,EAAAzX,SAAAuX,EAAA,mBA99COrb,MAAAlB,KAAAmB,WAAA,SA0hDQ8J,KA1hDR,OAAAyR,GAAAxb,MAAAlB,KAAAmB,WAAA,SAAAub,KAAA,OAAAA,GAAA5c,OAAAsB,EAAA,EAAAtB,CAAAuB,IAAAC,KA0hDP,SAAAqb,IAAA,OAAAtb,IAAAS,KAAA,SAAA8a,GAAA,cAAAA,EAAA5a,KAAA4a,EAAA3a,MAAA,cAAA2a,EAAA3a,KAAA,EACQ2F,IADR,cAAAgV,EAAA3a,KAAA,EAEQqC,GAAcxF,GAFtB,cAAA8d,EAAA3a,KAAA,EAGQsC,GAAY,wBAHpB,cAAAqY,EAAA3a,KAAA,EAIQ8B,EAAa,IAJrB,wBAAA6Y,EAAA5X,SAAA2X,OA1hDOzb,MAAAlB,KAAAmB,WAAA,SAiiDQ8a,GAjiDRY,GAAA,OAAAC,GAAA5b,MAAAlB,KAAAmB,WAAA,SAAA2b,KAAA,OAAAA,GAAAhd,OAAAsB,EAAA,EAAAtB,CAAAuB,IAAAC,KAiiDP,SAAAyb,EAA6BhB,GAA7B,IAAAiB,EAAA,OAAA3b,IAAAS,KAAA,SAAAmb,GAAA,cAAAA,EAAAjb,KAAAib,EAAAhb,MAAA,cAAAgb,EAAAjb,KAAA,EAAAib,EAAAhb,KAAA,EAE6BsB,GAASjE,EAAMhB,EAAIkM,OAAOlM,IAAKyd,GAF5D,cAEQiB,EAFRC,EAAA1a,KAAA0a,EAAAhb,KAAA,EAGwB+a,EAAarX,QAAQuX,iBAAiB3e,EAASa,GAAoBe,OAH3F,UAImB,GAJnB8c,EAAA1a,KAAA,CAAA0a,EAAAhb,KAAA,gBAAAgb,EAAAhb,KAAA,GAKY+a,EAAarX,QAAQwX,kBAAkB/d,GAAoB,GAAMsD,KAAK,CAAEsI,KAAMzM,IAL1F,eAAA0e,EAAArX,OAAA,UAOW,GAPX,eAAAqX,EAAAjb,KAAA,GAAAib,EAAApY,GAAAoY,EAAA,SAUInY,QAAQC,IAAIgX,GACZjX,QAAQC,IAAI,mBAAAkY,EAAApY,IAXhBoY,EAAArX,OAAA,UAYW,GAZX,yBAAAqX,EAAAjY,SAAA+X,EAAA,mBAjiDO7b,MAAAlB,KAAAmB,WAAA,SAkjDQ+a,GAljDRkB,GAAA,OAAAC,GAAAnc,MAAAlB,KAAAmB,WAAA,SAAAkc,KAAA,OAAAA,GAAAvd,OAAAsB,EAAA,EAAAtB,CAAAuB,IAAAC,KAkjDP,SAAAgc,EAA2BvB,GAA3B,IAAAwB,EAAAtI,EAAA,OAAA5T,IAAAS,KAAA,SAAA0b,GAAA,cAAAA,EAAAxb,KAAAwb,EAAAvb,MAAA,OACMsb,GAAO,EADbC,EAAAxb,KAAA,EAAAwb,EAAA3Y,GAAAxD,IAAAgU,KAGoBtW,EAAgBuW,KAHpC,WAAAkI,EAAA9M,GAAA8M,EAAA3Y,MAAA0Q,KAAA,CAAAiI,EAAAvb,KAAA,YAGagT,EAHbuI,EAAA9M,GAAAzI,MAIUlJ,EAAgBuW,IAAIL,GAAKO,SAAWuG,EAJ9C,CAAAyB,EAAAvb,KAAA,eAKQsb,GAAO,EALfC,EAAA5X,OAAA,mBAAA4X,EAAAvb,KAAA,gBAAAub,EAAAvb,KAAA,iBAAAub,EAAAxb,KAAA,GAAAwb,EAAA7M,GAAA6M,EAAA,SAWI1Y,QAAQC,IAAI,iBAAAyY,EAAA7M,IAXhB,eAAA6M,EAAA5X,OAAA,SAaS2X,GAbT,yBAAAC,EAAAxY,SAAAsY,EAAA,mBAljDOpc,MAAAlB,KAAAmB,WAAA,SAkkDQ2U,GAlkDR2H,GAAA,OAAAC,GAAAxc,MAAAlB,KAAAmB,WAAA,SAAAuc,KAAA,OAAAA,GAAA5d,OAAAsB,EAAA,EAAAtB,CAAAuB,IAAAC,KAkkDP,SAAAqc,EAA4BC,GAA5B,IAAA5L,EAAA6L,EAAAC,EAAAC,EAAAC,EAAA,OAAA3c,IAAAS,KAAA,SAAAmc,GAAA,cAAAA,EAAAjc,KAAAic,EAAAhc,MAAA,OACQ+P,EAAehO,SAASC,eAAe,2BAEvC4Z,EAAS7Z,SAAS8C,cAAc,QAC/BC,UAAY,gBAEb+W,EAAM9Z,SAAS8C,cAAc,UAC/B+F,aAAa,OAAQ,YACzBiR,EAAI3J,GAAK,MACT2J,EAAI/W,UAAY,YAEVgX,EAAM/Z,SAAS8C,cAAc,UAC/BgT,QAAUgE,EAAI3J,IAEZ6J,EAASha,SAAS8C,cAAc,OAC/B1C,UAAYwZ,EACnBI,EAAOjX,UAAY,eAEnB8W,EAAO7W,YAAY8W,GACnBD,EAAO7W,YAAY+W,GAEnBF,EAAO7W,YAAYgX,GACnBhM,EAAahL,YAAY6W,GAtB3B,yBAAAI,EAAAjZ,SAAA2Y,OAlkDOzc,MAAAlB,KAAAmB,WAAA,SA2lDQ2L,KA3lDR,OAAAoR,GAAAhd,MAAAlB,KAAAmB,WAAA,SAAA+c,KAAA,OAAAA,GAAApe,OAAAsB,EAAA,EAAAtB,CAAAuB,IAAAC,KA2lDP,SAAA6c,IAAA,IAAAC,EAAA,OAAA/c,IAAAS,KAAA,SAAAuc,GAAA,cAAAA,EAAArc,KAAAqc,EAAApc,MAAA,QACMmc,EAAWpa,SAAS8C,cAAc,QAC7BqN,GAAK,YAOdnQ,SAASsa,KAAKpa,MAAMqa,UAAY,SAChCva,SAASsa,KAAKE,OAAOJ,GAVvB,wBAAAC,EAAArZ,SAAAmZ,OA3lDOjd,MAAAlB,KAAAmB,WAAA,SAwmDQsd,GAxmDRC,EAAAC,EAAAC,GAAA,OAAAC,GAAA3d,MAAAlB,KAAAmB,WAAA,SAAA0d,KAAA,OAAAA,GAAA/e,OAAAsB,EAAA,EAAAtB,CAAAuB,IAAAC,KAwmDP,SAAAwd,EAAuBC,EAAQC,EAAUlH,GAAzC,OAAAzW,IAAAS,KAAA,SAAAmd,GAAA,cAAAA,EAAAjd,KAAAid,EAAAhd,MAAA,cAAAgd,EAAAjd,KAAA,EAAAid,EAAAhd,KAAA,EAEU8B,EAAa,kBAFvB,cAAAkb,EAAAhd,KAAA,EAIwBsB,GAASjE,EAAMhB,EAAIkM,OAAOlM,IAAKygB,GAJvD,cAIIvgB,EAJJygB,EAAA1c,KAAA0c,EAAAhd,KAAA,EAOczD,EAAYmH,QAAQuX,iBAAiB3e,EAASa,GAAoBe,OAPhF,UAAA8e,EAAApa,GAAAoa,EAAA1c,KAOwF,GAPxF0c,EAAApa,GAAA,CAAAoa,EAAAhd,KAAA,gBAAAgd,EAAAhd,KAAA,GAQYzD,EAAYmH,QAAQwX,kBAAkB/d,GAAoB,GAAMsD,KAAK,CAAEsI,KAAMzM,IARzF,eAAA0gB,EAAAhd,KAAA,GAWUzD,EAAYmH,QAAQuZ,iBAAiB3gB,EAASygB,EAAUlH,GAAMpV,KAAK,CAAEsI,KAAMzM,IAXrF,eAAA0gB,EAAAhd,KAAA,GAYUgJ,KAZV,eAAAgU,EAAAhd,KAAA,GAcU8B,EAAa,IAdvB,QAAAkb,EAAAhd,KAAA,wBAAAgd,EAAAjd,KAAA,GAAAid,EAAAvO,GAAAuO,EAAA,SAiBIna,QAAQC,IAARka,EAAAvO,IAjBJuO,EAAAhd,KAAA,GAkBU8B,EAAa,IAlBvB,yBAAAkb,EAAAja,SAAA8Z,EAAA,mBAxmDO5d,MAAAlB,KAAAmB,WAAA,SA8nDQge,KA9nDR,OAAAC,GAAAle,MAAAlB,KAAAmB,WAAA,SAAAie,KAAA,OAAAA,GAAAtf,OAAAsB,EAAA,EAAAtB,CAAAuB,IAAAC,KA8nDP,SAAA+d,IAAA,IAAAC,EAAAnE,EAAAE,EAAA5P,EAAA8P,EAAArR,EAAAI,EAAAiV,EAAA,OAAAle,IAAAS,KAAA,SAAA0d,GAAA,cAAAA,EAAAxd,KAAAwd,EAAAvd,MAAA,cAAAud,EAAAvd,KAAA,EACQ8B,EAAa,cADrB,UAAAyb,EAAAxd,KAAA,EAGQgQ,EAAehO,SAASC,eAAe,kBACvCtD,IACFqR,EAAehO,SAASC,eAAe,6BAErCkX,EAAWnJ,EAAayJ,qBAAqB,MAGpC3P,OAAS,GAV1B,CAAA0T,EAAAvd,KAAA,gBAAAud,EAAAvd,KAAA,EAY0B/C,EAAcyG,QAAQuX,iBAAiB3e,EAASa,GAAoBe,OAZ9F,UAaqB,GAbrBqf,EAAAjd,KAAA,CAAAid,EAAAvd,KAAA,gBAAAud,EAAAvd,KAAA,GAcc/C,EAAcyG,QAAQwX,kBAAkB/d,GAAoB,GAC/DsD,KAAK,CACJsI,KAAMzM,EACNkhB,SAAU1P,OAAOrR,KAjB7B,QAqBe+M,EAAI,EArBnB,aAqBsBA,EAAI0P,EAASrP,QArBnC,CAAA0T,EAAAvd,KAAA,YAuB0B,UADlBoZ,EAAQF,EAAS1P,IACPM,MAAoC,GAAjBsP,EAAMK,QAvB3C,CAAA8D,EAAAvd,KAAA,eAwBoB,GACVsZ,EAAMF,EAAMlH,GAAGnE,MAAM,KAEjB9F,EAAWqR,EAAI,GACfjR,EAAQiR,EAAI,GACZgE,EAAWhE,EAAI,GA7B7BiE,EAAAvd,KAAA,GAiCgBjD,EAAmB2G,QAAQ+Z,WAAWxV,EAAUI,EAAOiV,GAC1D7c,KAAK,CACJsI,KAAMzM,IAnCpB,eAAAihB,EAAA5Z,OAAA,oBAqB2C6F,IArB3C+T,EAAAvd,KAAA,iBAAAud,EAAAvd,KAAA,iBAAAud,EAAAxd,KAAA,GAAAwd,EAAA3a,GAAA2a,EAAA,SA2CI1a,QAAQC,IAARya,EAAA3a,IA3CJ,eAAA2a,EAAAvd,KAAA,GA6CQ8B,EAAa,IA7CrB,yBAAAyb,EAAAxa,SAAAqa,EAAA,mBA9nDOne,MAAAlB,KAAAmB,WAAA,SA8qDQuL,KA9qDR,OAAAiT,GAAAze,MAAAlB,KAAAmB,WAAA,SAAAwe,KAAA,OAAAA,GAAA7f,OAAAsB,EAAA,EAAAtB,CAAAuB,IAAAC,KA8qDP,SAAAse,IAAA,OAAAve,IAAAS,KAAA,SAAA+d,GAAA,cAAAA,EAAA7d,KAAA6d,EAAA5d,MAAA,OACE,IACE+B,SAASC,eAAe,aAAa2N,SACrC5N,SAASsa,KAAKpa,MAAMqa,UAAY,GAElC,MAAO5R,IALT,wBAAAkT,EAAA7a,SAAA4a,OA9qDO1e,MAAAlB,KAAAmB,WAAA,SAurDQ8Y,GAvrDR6F,EAAAC,GAAA,OAAAC,GAAA9e,MAAAlB,KAAAmB,WAAA,SAAA6e,KAAA,OAAAA,GAAAlgB,OAAAsB,EAAA,EAAAtB,CAAAuB,IAAAC,KAurDP,SAAA2e,EAAkCC,EAAMC,GAAxC,IAAAC,EAAAlW,EAAA5D,EAAAqN,EAAA0M,EAAAC,EAAAhU,EAAAiU,EAAAC,EAAAC,EAAAC,EAAA7C,EAuEW8C,EAvEX,OAAAtf,IAAAS,KAAA,SAAA8e,GAAA,cAAAA,EAAA5e,KAAA4e,EAAA3e,MAAA,UAuEW0e,EAvEX,SAuEoB1Y,GACH,UAATA,GACFwW,GAAQ+B,EAAOE,EAAEzY,MAAOmY,EAAK,IAE/B1T,KACA4T,EAAUpc,MAAMsN,QAAU,OAC1BxN,SAAS6c,UAAY,KACrBV,EAASlY,IA7EX6E,KAEIsT,EAAO,GACXA,EAAOF,EAAKlQ,MAAM,KACd9F,EAAWkW,EAAK,GAGpBpc,SAASC,eAAe,MAAQmc,EAAK,GAAK,IAAMA,EAAK,IAAIrZ,UAAU,uBAGlD,GAAbmD,EAXN,CAAA0W,EAAA3e,KAAA,gBAAA2e,EAAA3e,KAAA,EAYwBsB,GAASjE,EAAMhB,EAAIkM,OAAOlM,IAAK8hB,EAAK,IAZ5D,OAYI5hB,EAZJoiB,EAAAre,KAAAqe,EAAA3e,KAAA,wBAAA2e,EAAA3e,KAAA,GAemBjD,EAAmB2G,QAAQuB,MAAMgD,GAAU/J,OAf9D,eAeImG,EAfJsa,EAAAre,KAAAqe,EAAA3e,KAAA,GAgBwBsB,GAASjE,EAAMhB,EAAIkM,OAAOlM,IAAKgI,EAAOmE,YAhB9D,QAgBIjM,EAhBJoiB,EAAAre,KAAA,eAAAqe,EAAA3e,KAAA,GAmBuBzD,EAAYmH,QAAQ6M,OAAOrS,OAnBlD,QAmBMwT,EAnBNiN,EAAAre,KAsBM8d,EAAOrc,SAASC,eAAe,eAC/BtD,IACF0f,EAAOrc,SAASC,eAAe,uBAG7Bqc,EAAYtc,SAASC,eAAe,yBACpCqI,EAAMtI,SAASC,eAAe,kBAC9BtD,IACF2L,EAAMtI,SAASC,eAAe,2BAG5Bsc,EAAYvc,SAAS8C,cAAc,OAC7BC,UAAY,UACtBsZ,EAAKtZ,UAAY,kBAGA,GAAbmD,GACFqW,EAAUnc,UAAYuP,EAAW,KAAOyM,EAAK,GAAK,OAASA,EAAK,GAAK,OACrEI,EAAQJ,EAAK,KAGbG,EAAUnc,UAAYuP,EAAW,KAAOyM,EAAK,GAAK,OAAS9Z,EAAOmE,WAAa,OAC/E+V,EAAQla,EAAOmE,aAGbgW,EAAYzc,SAAS8C,cAAc,OAC7BC,UAAY,UACtB0Z,EAAUrc,UAAY,0CAElBsc,EAAI1c,SAAS8C,cAAc,UAC7BqN,GAAK+L,EACPQ,EAAEI,YAAc,6CAChBJ,EAAE7T,aAAa,OAAQ,SAEnBgR,EAAS7Z,SAAS8C,cAAc,QAC7BC,UAAY,eACnBuF,EAAIvF,UAAY,GAChBuF,EAAIlI,UAAY,GAEAJ,SAASC,eAAe,aAC9BgE,MAAQ,OAElB4V,EAAO7W,YAAYuZ,GACnB1C,EAAO7W,YAAYyZ,GACnB5C,EAAO7W,YAAY0Z,GAEnBpU,EAAItF,YAAY6W,GAahBwC,EAAKU,SAAW,WAId,OAFA/c,SAASC,eAAe,MAAQmc,EAAK,GAAK,IAAMA,EAAK,IAAIrZ,UAAU,UACnE4Z,EAFY,WAGL,GAGTN,EAAKW,OAAO1M,QAAU,WACpBtQ,SAASC,eAAe,MAAQmc,EAAK,GAAK,IAAMA,EAAK,IAAIrZ,UAAU,UACnE4Z,EAAS,OAGX3c,SAAS6c,UAAY,SAAUI,GAChB,UAATA,EAAEhM,MACJjR,SAASC,eAAe,MAAQmc,EAAK,GAAK,IAAMA,EAAK,IAAIrZ,UAAU,UACnE4Z,EAAS,QAGbL,EAAUpc,MAAMsN,QAAU,QAnG5B,yBAAAoP,EAAA5b,SAAAib,OAvrDO/e,MAAAlB,KAAAmB,WAAA,SAyzDQ6Y,GAzzDRkH,EAAAC,GAAA,OAAAC,GAAAlgB,MAAAlB,KAAAmB,WAAA,SAAAigB,KAAA,OAAAA,GAAAthB,OAAAsB,EAAA,EAAAtB,CAAAuB,IAAAC,KAyzDP,SAAA+f,EAA0BnB,EAAMC,GAAhC,IAAAG,EAAAD,EAAArO,EAAA9D,EAAA9D,EAAAgW,EAAAkB,EAAAC,EAAA9V,EAoHWkV,EApHX,OAAAtf,IAAAS,KAAA,SAAA0f,GAAA,cAAAA,EAAAxf,KAAAwf,EAAAvf,MAAA,cAoHW0e,EApHX,SAoHoB1Y,GACH,UAATA,GACFkX,KAEFnb,SAASC,eAAe,MAAQmc,EAAK,GAAK,IAAMA,EAAK,IAAIrZ,UAAUua,EACnE5U,KACA4T,EAAUpc,MAAMsN,QAAU,OAC1BxN,SAAS6c,UAAY,KACrBV,EAASlY,IA3HPqY,EAAYtc,SAASC,eAAe,yBAGrCtD,GACD0f,EAAOrc,SAASC,eAAe,sBAC/B+N,EAAehO,SAASC,eAAe,2BAGvCoc,EAAOrc,SAASC,eAAe,eAC/B+N,EAAehO,SAASC,eAAe,mBAV3Cud,EAAAvf,KAAA,EAe6B/C,EAAcyG,QAAQ+E,UAAUnM,GAAS4B,OAftE,cAeMiK,EAfNoX,EAAAjf,KAiBEuK,KAEIsT,EAAO,GACXA,EAAOF,EAAKlQ,MAAM,KAEdsR,EAAYtd,SAASC,eAAe,MAAQmc,EAAK,GAAK,IAAMA,EAAK,IAAIrZ,UACzE/C,SAASC,eAAe,MAAQmc,EAAK,GAAK,IAAMA,EAAK,IAAIrZ,UAAU,sBAC1D/C,SAAS8C,cAAc,OAxBlC0a,EAAAvf,KAAA,GAyByB/C,EAAcyG,QAAQ0B,SAASlH,OAzBxD,QA6BE,IAJA+N,EAzBFsT,EAAAjf,KA2BEyP,EAAa5N,UAAY,GA3B3Bmd,EAAA,SA6BW9V,GACP3L,OAAAsB,EAAA,EAAAtB,CAAAuB,IAAAC,KAAC,SAAAmgB,IAAA,IAAA3J,EAAA4J,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA1P,EAAAC,EAAAW,EAAA+O,EAAAC,EAAAC,EAAAC,EAAA,OAAA9gB,IAAAS,KAAA,SAAAsgB,GAAA,cAAAA,EAAApgB,KAAAogB,EAAAngB,MAAA,cAAAmgB,EAAApgB,KAAA,EAAAogB,EAAAngB,KAAA,EAEoB/C,EAAcyG,QAAQgF,oBAAoBpM,EAASkN,GAAGtL,OAF1E,cAEO2X,EAFPsK,EAAA7f,MAIOmf,EAAU1d,SAAS8C,cAAc,QAC7BqN,GAAK,MAAQ2D,EAEnB4J,EAAQ3a,UADPpG,EACmB,iBAGA,UAGlBghB,EAAW3d,SAAS8C,cAAc,UACtC6a,EAAW3d,SAAS8C,cAAc,UACzB+F,aAAa,KAAM,MAAQiL,GACpC4J,EAAQ1a,YAAY2a,IAEhBC,EAAQ5d,SAAS8C,cAAc,OAC7BC,UAAY,QAClB4a,EAAS3a,YAAY4a,IAEjBC,EAAS7d,SAAS8C,cAAc,OAC7BC,UAAY,SACnB6a,EAAM5a,YAAY6a,IAEdC,EAAS9d,SAAS8C,cAAc,UAC7B+F,aAAa,OAAQ,SAC5BiV,EAAO3N,GAAK+L,EAAO,IAAMpI,EACzBgK,EAAO/a,UAAY,SACnB+a,EAAOtP,KAAO,QACdqP,EAAO7a,YAAY8a,IAEfC,EAAS/d,SAAS8C,cAAc,UAC7BgT,QAAUgI,EAAO3N,GACxB0N,EAAO7a,YAAY+a,GAnCtBK,EAAAngB,KAAA,GAsCgC/C,EAAcyG,QAAQ8M,SAASqF,GAAM3X,OAtCrE,eAsCOkS,EAtCP+P,EAAA7f,MAuCwBmQ,WAAW,WAC9BL,EAAgB,wBAAAxE,OAA2BwE,EAAiBrC,MAAM,WAAW,IAEtEqC,EAAiBK,WAAW,wCACnCL,EAAmBA,EAAiBjJ,QAAjB,yCACnBiJ,EAAgB,wBAAAxE,OAA2BwE,EAAmB,IA5CnE+P,EAAAngB,KAAA,GA8C6BE,MAAMkQ,GAAkBM,KAAK,SAACC,GAAD,OAAcA,EAASpQ,SA9CjF,QA8CO8P,EA9CP8P,EAAA7f,MAgDO0Q,EAASjP,SAAS8C,cAAc,QAC7B+F,aAAa,MAAOyF,EAAa,OACxCW,EAAOpG,aAAa,MAAOqB,GAC3B+E,EAAOpG,aAAa,QAAS,UAAYiL,GACzC7E,EAAO/O,MAAM5D,MAAQ,QACrByhB,EAAO/a,YAAYiM,IAIf+O,EAAShe,SAAS8C,cAAc,OAC7BC,UAAY,SACnB6a,EAAM5a,YAAYgb,IAEdC,EAAUje,SAAS8C,cAAc,OAC7BC,UAAY,SACpBkb,EAAQ7d,UAAYkO,EAAa,WAAe,GAA5B,WAA+C,UAAYA,EAAa,WAAe,GAA5B,MAA0C,OACzH0P,EAAOhb,YAAYib,IAEfC,EAAUle,SAAS8C,cAAc,OAC7BC,UAAY,SACpBmb,EAAQ9d,UAAYkO,EAAa,WAAe,GAA5B,WAA+C,KAAOA,EAAa,WAAe,GAA5B,MAC1E0P,EAAOhb,YAAYkb,IAEfC,EAAUne,SAAS8C,cAAc,OAC7BC,UAAY,SACpBob,EAAQ/d,UAAYkO,EAAa,WAAe,GAA5B,WAA+C,KAAOA,EAAa,WAAe,GAA5B,MAC1E0P,EAAOhb,YAAYmb,GAEnBnQ,EAAahL,YAAY0a,GA5E5BU,EAAAngB,KAAA,iBAAAmgB,EAAApgB,KAAA,GAAAogB,EAAAvd,GAAAud,EAAA,SAgFGtd,QAAQC,IAARqd,EAAAvd,IAhFH,yBAAAud,EAAApd,SAAAyc,EAAA,iBAAD3hB,IADO2L,EAAI,EAAGA,EAAIrB,EAAgBqB,IAAK8V,EAAhC9V,GAkGT4U,EAAKU,SAAW,WAId,OAFA/c,SAASC,eAAe,MAAQmc,EAAK,GAAK,IAAMA,EAAK,IAAIrZ,UAAUua,EACnEX,EAFY,WAGL,GAGTN,EAAKW,OAAO1M,QAAU,WACpBtQ,SAASC,eAAe,MAAQmc,EAAK,GAAK,IAAMA,EAAK,IAAIrZ,UAAUua,EACnEX,EAAS,OAGX3c,SAAS6c,UAAY,SAAUI,GAChB,UAATA,EAAEhM,MACJjR,SAASC,eAAe,MAAQmc,EAAK,GAAK,IAAMA,EAAK,IAAIrZ,UAAUua,EACnEX,EAAS,QAGbL,EAAUpc,MAAMsN,QAAU,QAjJ5B,yBAAAgQ,EAAAxc,SAAAqc,OAzzDOngB,MAAAlB,KAAAmB,WAAA,SA68DQkhB,GA78DRC,GAAA,OAAAC,GAAArhB,MAAAlB,KAAAmB,WAAA,SAAAohB,KAAA,OAAAA,GAAAziB,OAAAsB,EAAA,EAAAtB,CAAAuB,IAAAC,KA68DP,SAAAkhB,EAAyBC,GAAzB,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAA3hB,IAAAS,KAAA,SAAAmhB,GAAA,cAAAA,EAAAjhB,KAAAihB,EAAAhhB,MAAA,UAAAghB,EAAAjhB,KAAA,EAEiB,MAATzD,EAFR,CAAA0kB,EAAAhhB,KAAA,eAAAghB,EAAArd,OAAA,wBAAAqd,EAAAhhB,KAAA,EAKU8B,EAAa,cALvB,YAOQpE,EAAW,GAPnB,CAAAsjB,EAAAhhB,KAAA,gBAAAghB,EAAAhhB,KAAA,EAS4B/C,EAAcyG,QAAQud,cAAcT,GAAKtiB,OATrE,cASUuiB,EATVO,EAAA1gB,KAUMmgB,EAAYjgB,IAAKgF,MAAMC,QAAQgb,GAAa/iB,EACxCgjB,EAAelgB,IAAKgF,MAAM0b,MAAMpT,OAAO2S,IAXjDO,EAAAhhB,KAAA,GAayB/C,EAAcyG,QAAQyd,eAAeX,GAAKtiB,OAbnE,eAaUyiB,EAbVK,EAAA1gB,KAAA0gB,EAAAhhB,KAAA,GAciCsB,GAASjE,EAAMhB,EAAIkF,YAAYlF,IAAKskB,GAdrE,eAcUC,EAdVI,EAAA1gB,KAAA0gB,EAAApe,GAgBmBwe,SAhBnBJ,EAAAhhB,KAAA,GAgBmC4gB,EAAeld,QAAQ2d,UAAU/kB,EAASc,GAAoBc,OAhBjG,WAAA8iB,EAAAvS,GAAAuS,EAAA1gB,KAgBUugB,GAhBV,EAAAG,EAAApe,IAAAoe,EAAAvS,IAkBUqS,GAAc,IAGdD,EAASH,GArBnB,CAAAM,EAAAhhB,KAAA,gBAAAghB,EAAAhhB,KAAA,GAsBc8B,EAAa,eAtB3B,eAuBYif,EAAUvgB,IAAKgF,MAAM0b,MAAMpT,OAAO2S,EAAU9Y,OAAO2Z,mBAvB/DN,EAAAhhB,KAAA,GAwBc4gB,EAAeld,QAAQ6d,QAAQnkB,EAAoB0Q,OAAOiT,IAC7DtgB,KAAK,CAAEsI,KAAMzM,IACbklB,GAAG,QAAS,SAASC,EAAOC,GAC3BZ,GAAY,IAEba,MAAM,WACL7f,EAAa,MA9BzB,eAAAkf,EAAAhhB,KAAA,GAmCc8B,EAAa,cAnC3B,WAsCuB,GAAbgf,EAtCV,CAAAE,EAAAhhB,KAAA,gBAAAghB,EAAAhhB,KAAA,GAwCc/C,EAAcyG,QACjBke,KAAKlkB,EAAU8iB,GACf/f,KAAK,CACJ+c,SAAU1P,OAAOrR,EAAgBiB,GACjCmkB,GAAIzkB,EACJ2L,KAAMzM,IAEPklB,GAAG,eAAgB,SAACM,EAAoBJ,GACvC5f,EAAa,MAhDzB,QAAAkf,EAAAhhB,KAAA,iBAAAghB,EAAAjhB,KAAA,GAAAihB,EAAAtS,GAAAsS,EAAA,SAwDIne,QAAQC,IAARke,EAAAtS,IAxDJ,eAAAsS,EAAAhhB,KAAA,GA0DQ8B,EAAa,IA1DrB,yBAAAkf,EAAAje,SAAAwd,EAAA,mBA78DOthB,MAAAlB,KAAAmB,WAAA,SA0gEQ6iB,GA1gERC,GAAA,OAAAC,GAAAhjB,MAAAlB,KAAAmB,WAAA,SAAA+iB,KAAA,OAAAA,GAAApkB,OAAAsB,EAAA,EAAAtB,CAAAuB,IAAAC,KA0gEP,SAAA6iB,EAA2BC,GAA3B,OAAA/iB,IAAAS,KAAA,SAAAuiB,GAAA,cAAAA,EAAAriB,KAAAqiB,EAAApiB,MAAA,OACEtC,EAAWykB,EADb,wBAAAC,EAAArf,SAAAmf,OA1gEOjjB,MAAAlB,KAAAmB,WA8gEP,OAAIR,EAEA2jB,EAAAC,EAAAzd,cAAA,OAAKC,UAAU,cACbud,EAAAC,EAAAzd,cAAA,OAAKS,MAAM,+DACT+c,EAAAC,EAAAzd,cAAA,OAAKS,MAAM,kBAAkBrD,MAAO,CAAEsgB,WAAY,mBAChDF,EAAAC,EAAAzd,cAAA,KAAGS,MAAM,eAAerD,MAAO,CAAEugB,WAAY,MAAOC,SAAU,QAAUC,KAAK,KAC3EL,EAAAC,EAAAzd,cAAA,OAAK8d,IAAI,WAAWtkB,MAAM,QAE5BgkB,EAAAC,EAAAzd,cAAA,UAAQS,MAAM,iBAAiBwE,KAAK,SAAS8Y,iBAAe,WAAWC,iBAAe,kBAAkBC,gBAAc,iBAAiBC,gBAAc,QAAQC,aAAW,qBACtKX,EAAAC,EAAAzd,cAAA,QAAMS,MAAM,yBAEd+c,EAAAC,EAAAzd,cAAA,OAAKS,MAAM,2BAA2B4M,GAAG,kBACvCmQ,EAAAC,EAAAzd,cAAA,MAAIS,MAAM,uCAAuCrD,MAAO,CAAEwgB,SAAU,SAClEJ,EAAAC,EAAAzd,cAAA,MAAIS,MAAM,YACR+c,EAAAC,EAAAzd,cAAA,KAAGS,MAAM,kBAAkB2d,eAAa,OAAOP,KAAK,KAApD,cAEFL,EAAAC,EAAAzd,cAAA,MAAIS,MAAM,YACR+c,EAAAC,EAAAzd,cAAA,KAAGS,MAAM,WAAWod,KAAK,KAAzB,iBAEFL,EAAAC,EAAAzd,cAAA,MAAIS,MAAM,YACR+c,EAAAC,EAAAzd,cAAA,KAAGS,MAAM,YAAT,oBAOV+c,EAAAC,EAAAzd,cAAA,OAAKC,UAAU,yCACbud,EAAAC,EAAAzd,cAAA,OAAKC,UAAU,OACbud,EAAAC,EAAAzd,cAAA,QAAMC,UAAU,oBACdud,EAAAC,EAAAzd,cAAA,YACEwd,EAAAC,EAAAzd,cAAA,OAAKC,UAAU,WACbud,EAAAC,EAAAzd,cAAA,MAAIC,UAAU,WAAd,wBAEFud,EAAAC,EAAAzd,cAAA,OAAK8d,IAAI,oBAAoBtkB,MAAM,UACnCgkB,EAAAC,EAAAzd,cAAA,MAAIC,UAAU,WAAd,yBAEAud,EAAAC,EAAAzd,cAACqe,EAAA,EAAD,CAAaC,KAAK,KAChBH,aAAW,cACXzS,KAAK,SACLtO,MAAO,CAAEmhB,UAAW,uBACpB9d,MAAM,aAEN+c,EAAAC,EAAAzd,cAACwe,EAAA,EAAD,CAAQrd,MAAM,IAAIsd,QAAS,WAAcvB,GAAY,KAArD,KACAM,EAAAC,EAAAzd,cAACwe,EAAA,EAAD,CAAQrd,MAAM,IAAIsd,QAAS,WAAcvB,GAAY,KAArD,KACAM,EAAAC,EAAAzd,cAACwe,EAAA,EAAD,CAAQrd,MAAM,IAAIsd,QAAS,WAAcvB,GAAY,KAArD,KACAM,EAAAC,EAAAzd,cAACwe,EAAA,EAAD,CAAQrd,MAAM,IAAIsd,QAAS,WAAcvB,GAAY,KAArD,KACAM,EAAAC,EAAAzd,cAACwe,EAAA,EAAD,CAAQrd,MAAM,IAAIsd,QAAS,WAAcvB,GAAY,KAArD,MAGFM,EAAAC,EAAAzd,cAAA,MAAIC,UAAU,gBAAd,kCACAud,EAAAC,EAAAzd,cAAA,OAAKC,UAAU,YAAYye,KAAK,QAAQrR,GAAG,cAAc8Q,aAAW,iBACpEX,EAAAC,EAAAzd,cAAA,OAAK8d,IAAK,iBAAkBtkB,MAAM,KAAKmlB,IAAI,WAAWle,MAAM,kBAAkBR,UAAU,kBAAkBoN,GAAG,cAAcoR,QAAS,WAAclD,GAAU,MAC1JiC,EAAAC,EAAAzd,cAAA,OAAK8d,IAAK,iBAAkBtkB,MAAM,KAAKmlB,IAAI,UAAUle,MAAM,kBAAkBR,UAAU,kBAAkBoN,GAAG,aAAaoR,QAAS,WAAclD,GAAU,MAC1JiC,EAAAC,EAAAzd,cAAA,OAAK8d,IAAK,iBAAkBtkB,MAAM,KAAKmlB,IAAI,MAAMle,MAAM,kBAAkBR,UAAU,kBAAkBoN,GAAG,SAASoR,QAAS,WAAclD,GAAU,MAClJiC,EAAAC,EAAAzd,cAAA,OAAK8d,IAAK,iBAAkBtkB,MAAM,KAAKmlB,IAAI,MAAMle,MAAM,kBAAkBR,UAAU,kBAAkBoN,GAAG,SAASoR,QAAS,WAAclD,GAAU,MAClJiC,EAAAC,EAAAzd,cAAA,OAAK8d,IAAK,iBAAkBtkB,MAAM,KAAKmlB,IAAI,QAAQle,MAAM,kBAAkBR,UAAU,kBAAkBoN,GAAG,WAAWoR,QAAS,WAAclD,GAAU,UAK9JiC,EAAAC,EAAAzd,cAAA,OAAKC,UAAU,OACbud,EAAAC,EAAAzd,cAAA,QAAMC,UAAU,aACdud,EAAAC,EAAAzd,cAAA,QAAM5C,MAAO,CAAEsgB,WAAY,mBACzBF,EAAAC,EAAAzd,cAAC4e,EAAA,EAAD,CAAMC,iBAAiB,SAAS5e,UAAU,sBACxCud,EAAAC,EAAAzd,cAAC8e,EAAA,EAAD,CAAKC,SAAS,QAAQC,MAAM,gBAC1BxB,EAAAC,EAAAzd,cAAA,OAAKC,UAAU,aACbud,EAAAC,EAAAzd,cAAA,OAAKS,MAAM,sCAAsCie,KAAK,UAAUP,aAAW,8BACzEX,EAAAC,EAAAzd,cAAA,OAAKS,MAAM,2BAA2Bie,KAAK,QAAQP,aAAW,iBAC5DX,EAAAC,EAAAzd,cAAA,UAAQiF,KAAK,SAAS7H,MAAO,CAAEwgB,SAAU,OAASnd,MAAM,oBAAoB4M,GAAG,mBAAmBoR,QAASlJ,IAA3G,kBACAiI,EAAAC,EAAAzd,cAAA,UAAQiF,KAAK,SAAS7H,MAAO,CAAEwgB,SAAU,OAASnd,MAAM,oBAAoB4M,GAAG,cAAcoR,QAAS5J,IAAtG,aACA2I,EAAAC,EAAAzd,cAAA,UAAQqN,GAAG,YAAYjQ,MAAO,CAAEwgB,SAAU,OAAS3d,UAAU,0BAA0Bgf,SAAUne,GAC/F0c,EAAAC,EAAAzd,cAAA,UAAQkf,UAAQ,EAACze,MAAM,YAAvB,kBACA+c,EAAAC,EAAAzd,cAAA,mCAKRwd,EAAAC,EAAAzd,cAAA,OAAKC,UAAU,OACbud,EAAAC,EAAAzd,cAAA,OAAKC,UAAU,aACbud,EAAAC,EAAAzd,cAAA,OAAKqN,GAAG,yBAAyBpN,UAAU,4BAIjDud,EAAAC,EAAAzd,cAAC8e,EAAA,EAAD,CAAKC,SAAS,SAASC,MAAM,cAC3BxB,EAAAC,EAAAzd,cAAA,OAAKC,UAAU,aACbud,EAAAC,EAAAzd,cAAA,OAAKS,MAAM,sCAAsCie,KAAK,UAAUP,aAAW,8BACzEX,EAAAC,EAAAzd,cAAA,OAAKS,MAAM,2BAA2B4M,GAAG,iBAAiBqR,KAAK,QAAQP,aAAW,kBAChFX,EAAAC,EAAAzd,cAAA,UAAQiF,KAAK,SAAS7H,MAAO,CAAEwgB,SAAU,OAASnd,MAAM,oBAAoB4M,GAAG,UAAUoR,QAAS5K,IAAlG,QACA2J,EAAAC,EAAAzd,cAAA,UAAQiF,KAAK,SAAS7H,MAAO,CAAEwgB,SAAU,OAASnd,MAAM,oBAAoB4M,GAAG,mBAAmBoR,QAAShL,IAA3G,kBACA+J,EAAAC,EAAAzd,cAAA,UAAQiF,KAAK,SAAS7H,MAAO,CAAEwgB,SAAU,OAASnd,MAAM,oBAAoB4M,GAAG,qBAAqBoR,QAASrL,IAA7G,uBAINoK,EAAAC,EAAAzd,cAAA,OAAKC,UAAU,aACbud,EAAAC,EAAAzd,cAAA,OAAKqN,GAAG,uBAAuBpN,UAAU,mCASvDud,EAAAC,EAAAzd,cAAA,OAAKC,UAAU,iBACbud,EAAAC,EAAAzd,cAAA,OAAKC,UAAU,SAAS7C,MAAO,CAAEwgB,SAAU,SACzCJ,EAAAC,EAAAzd,cAAA,OAAK5C,MAAO,CAAEwgB,SAAU,OAAQuB,aAAc,OAAQ7R,MAAO,UAAWqQ,WAAY,QAApF,yBACAH,EAAAC,EAAAzd,cAAA,SAAOqN,GAAG,eAAepN,UAAU,4CAIvCud,EAAAC,EAAAzd,cAAA,OAAKS,MAAM,6BACT+c,EAAAC,EAAAzd,cAAA,OAAKS,MAAM,gBACT+c,EAAAC,EAAAzd,cAAA,OAAKS,MAAM,8BAA8BrD,MAAO,CAACgiB,WAAY,SAC3D5B,EAAAC,EAAAzd,cAAA,OAAKqN,GAAG,UAAUpN,UAAU,kBAC5Bud,EAAAC,EAAAzd,cAAA,OAAKqN,GAAG,aAAaoR,QAASvkB,EAAe+F,UAAU,qBAAqBgF,KAAK,SAAS7H,MAAO,CAAEsgB,WAAY,mBAA/G,0BAQNF,EAAAC,EAAAzd,cAAA,OAAKqN,GAAG,yBACNmQ,EAAAC,EAAAzd,cAAA,QAAMqN,GAAG,sBACPmQ,EAAAC,EAAAzd,cAAA,OAAKC,UAAU,eACbud,EAAAC,EAAAzd,cAAA,OAAKqN,GAAG,0BACRmQ,EAAAC,EAAAzd,cAAA,SAAO0L,KAAK,YAAY2B,GAAG,YAAYpI,KAAK,SAAS9D,MAAM,UAC3Dqc,EAAAC,EAAAzd,cAAA,SAAO0L,KAAK,SAAS2B,GAAG,SAASpI,KAAK,SAAS9D,MAAM,eAU7Dqc,EAAAC,EAAAzd,cAAA,OAAKC,UAAU,cACbud,EAAAC,EAAAzd,cAAA,OAAKS,MAAM,+DACT+c,EAAAC,EAAAzd,cAAA,OAAKS,MAAM,kBAAkBrD,MAAO,CAAEsgB,WAAY,mBAChDF,EAAAC,EAAAzd,cAAA,KAAGS,MAAM,oBAAoBrD,MAAO,CAAEugB,WAAY,MAAOC,SAAU,QAAUC,KAAK,MAAQL,EAAAC,EAAAzd,cAAA,OAAK8d,IAAI,WAAWtkB,MAAM,OACpHgkB,EAAAC,EAAAzd,cAAA,UAAQS,MAAM,iBAAiBwE,KAAK,SAAS8Y,iBAAe,WAAWC,iBAAe,kBAAkBC,gBAAc,iBAAiBC,gBAAc,QAAQC,aAAW,qBACtKX,EAAAC,EAAAzd,cAAA,QAAMS,MAAM,yBAEd+c,EAAAC,EAAAzd,cAAA,OAAKS,MAAM,2BAA2B4M,GAAG,kBACvCmQ,EAAAC,EAAAzd,cAAA,MAAIS,MAAM,uCAAuCrD,MAAO,CAAEwgB,SAAU,SAClEJ,EAAAC,EAAAzd,cAAA,MAAIS,MAAM,YACR+c,EAAAC,EAAAzd,cAAA,KAAGS,MAAM,kBAAkB2d,eAAa,OAAOP,KAAK,KAApD,cAEFL,EAAAC,EAAAzd,cAAA,MAAIS,MAAM,YACR+c,EAAAC,EAAAzd,cAAA,KAAGS,MAAM,WAAWod,KAAK,KAAzB,iBAEFL,EAAAC,EAAAzd,cAAA,MAAIS,MAAM,YACR+c,EAAAC,EAAAzd,cAAA,KAAGS,MAAM,YAAT,mBAKR+c,EAAAC,EAAAzd,cAAA,OAAKC,UAAU,QACbud,EAAAC,EAAAzd,cAAA,OAAKS,MAAM,+BACT+c,EAAAC,EAAAzd,cAAA,OAAKqN,GAAG,UAAUpN,UAAU,kBAC5Bud,EAAAC,EAAAzd,cAAA,OAAKqN,GAAG,aAAaoR,QAASvkB,EAAe+F,UAAU,qBAAqBgF,KAAK,SAAS7H,MAAO,CAAEsgB,WAAY,mBAA/G,0BAONF,EAAAC,EAAAzd,cAAA,OAAKC,UAAU,6BACbud,EAAAC,EAAAzd,cAAA,OAAKC,UAAU,OACbud,EAAAC,EAAAzd,cAAA,QAAMC,UAAU,aACdud,EAAAC,EAAAzd,cAAA,YACEwd,EAAAC,EAAAzd,cAAA,OAAKC,UAAU,WACbud,EAAAC,EAAAzd,cAAA,MAAIC,UAAU,WAAd,wBAEFud,EAAAC,EAAAzd,cAAA,OAAK8d,IAAI,oBAAoBtkB,MAAM,UACnCgkB,EAAAC,EAAAzd,cAAA,MAAIC,UAAU,WAAd,yBAEAud,EAAAC,EAAAzd,cAACqe,EAAA,EAAD,CAAaC,KAAK,KAChBH,aAAW,cACXzS,KAAK,SACLtO,MAAO,CAAEmhB,UAAW,uBACpB9d,MAAM,aAEN+c,EAAAC,EAAAzd,cAACwe,EAAA,EAAD,CAAQrd,MAAM,IAAIsd,QAAS,WAAcvB,GAAY,KAArD,KACAM,EAAAC,EAAAzd,cAACwe,EAAA,EAAD,CAAQrd,MAAM,IAAIsd,QAAS,WAAcvB,GAAY,KAArD,KACAM,EAAAC,EAAAzd,cAACwe,EAAA,EAAD,CAAQrd,MAAM,IAAIsd,QAAS,WAAcvB,GAAY,KAArD,KACAM,EAAAC,EAAAzd,cAACwe,EAAA,EAAD,CAAQrd,MAAM,IAAIsd,QAAS,WAAcvB,GAAY,KAArD,KACAM,EAAAC,EAAAzd,cAACwe,EAAA,EAAD,CAAQrd,MAAM,IAAIsd,QAAS,WAAcvB,GAAY,KAArD,MAGFM,EAAAC,EAAAzd,cAAA,MAAIC,UAAU,gBAAd,kCACAud,EAAAC,EAAAzd,cAAA,OAAKS,MAAM,YAAYie,KAAK,QAAQrR,GAAG,cAAc8Q,aAAW,iBAC9DX,EAAAC,EAAAzd,cAAA,OAAK8d,IAAK,iBAAkBtkB,MAAM,KAAKmlB,IAAI,WAAWle,MAAM,kBAAkBR,UAAU,kBAAkBoN,GAAG,cAAcoR,QAAS,WAAclD,GAAU,MAC5JiC,EAAAC,EAAAzd,cAAA,OAAK8d,IAAK,iBAAkBtkB,MAAM,KAAKmlB,IAAI,UAAUle,MAAM,kBAAkBR,UAAU,kBAAkBoN,GAAG,aAAaoR,QAAS,WAAclD,GAAU,MAC1JiC,EAAAC,EAAAzd,cAAA,OAAK8d,IAAK,iBAAkBtkB,MAAM,KAAKmlB,IAAI,MAAMle,MAAM,kBAAkBR,UAAU,kBAAkBoN,GAAG,SAASoR,QAAS,WAAclD,GAAU,MAClJiC,EAAAC,EAAAzd,cAAA,OAAK8d,IAAK,iBAAkBtkB,MAAM,KAAKmlB,IAAI,MAAMle,MAAM,kBAAkBR,UAAU,kBAAkBoN,GAAG,SAASoR,QAAS,WAAclD,GAAU,MAClJiC,EAAAC,EAAAzd,cAAA,OAAK8d,IAAK,iBAAkBtkB,MAAM,KAAKmlB,IAAI,QAAQle,MAAM,kBAAkBR,UAAU,kBAAkBoN,GAAG,WAAWoR,QAAS,WAAclD,GAAU,OAGxJiC,EAAAC,EAAAzd,cAAA,WACAwd,EAAAC,EAAAzd,cAAA,OAAKC,UAAU,YACbud,EAAAC,EAAAzd,cAAA,OAAKC,UAAU,SAAS7C,MAAO,CAAEwgB,SAAU,SACzCJ,EAAAC,EAAAzd,cAAA,OAAK5C,MAAO,CAAEwgB,SAAU,OAAQuB,aAAc,OAAQ7R,MAAO,UAAWqQ,WAAY,QAApF,mBACAH,EAAAC,EAAAzd,cAAA,SAAOqN,GAAG,eAAepN,UAAU,mCACjCud,EAAAC,EAAAzd,cAAA,SAAOC,UAAU,eACfud,EAAAC,EAAAzd,cAAA,UACEwd,EAAAC,EAAAzd,cAAA,MAAIG,MAAM,OAAV,QACAqd,EAAAC,EAAAzd,cAAA,MAAIG,MAAM,OAAV,SACAqd,EAAAC,EAAAzd,cAAA,MAAIG,MAAM,OAAV,iBAGJqd,EAAAC,EAAAzd,cAAA,aACEwd,EAAAC,EAAAzd,cAAA,UACEwd,EAAAC,EAAAzd,cAAA,yBACAwd,EAAAC,EAAAzd,cAAA,qBACAwd,EAAAC,EAAAzd,cAAA,mBAEFwd,EAAAC,EAAAzd,cAAA,UACEwd,EAAAC,EAAAzd,cAAA,0BACAwd,EAAAC,EAAAzd,cAAA,wCACAwd,EAAAC,EAAAzd,cAAA,mBAEFwd,EAAAC,EAAAzd,cAAA,UACEwd,EAAAC,EAAAzd,cAAA,uBACAwd,EAAAC,EAAAzd,cAAA,0BACAwd,EAAAC,EAAAzd,cAAA,mBAEFwd,EAAAC,EAAAzd,cAAA,UACEwd,EAAAC,EAAAzd,cAAA,uBACAwd,EAAAC,EAAAzd,cAAA,6BACAwd,EAAAC,EAAAzd,cAAA,mBAEFwd,EAAAC,EAAAzd,cAAA,UACEwd,EAAAC,EAAAzd,cAAA,yBACAwd,EAAAC,EAAAzd,cAAA,2BACAwd,EAAAC,EAAAzd,cAAA,sBAMRwd,EAAAC,EAAAzd,cAAA,OAAKC,UAAU,SAAS7C,MAAO,CAAEwgB,SAAU,SACzCJ,EAAAC,EAAAzd,cAAA,OAAK5C,MAAO,CAAEwgB,SAAU,OAAQuB,aAAc,OAAQ7R,MAAO,UAAWqQ,WAAY,QAApF,yBACAH,EAAAC,EAAAzd,cAAA,SAAOqN,GAAG,eAAepN,UAAU,8CAQ7Cud,EAAAC,EAAAzd,cAAA,OAAKC,UAAU,OACbud,EAAAC,EAAAzd,cAAA,SAAOC,UAAU,aACfud,EAAAC,EAAAzd,cAAA,UACEwd,EAAAC,EAAAzd,cAAA,QAAMC,UAAU,aACdud,EAAAC,EAAAzd,cAAA,QAAM5C,MAAO,CAAEsgB,WAAY,mBACzBF,EAAAC,EAAAzd,cAAC4e,EAAA,EAAD,CAAMC,iBAAiB,SAAS5e,UAAU,sBACxCud,EAAAC,EAAAzd,cAAC8e,EAAA,EAAD,CAAKC,SAAS,QAAQC,MAAM,gBAC1BxB,EAAAC,EAAAzd,cAAA,OAAKC,UAAU,aACbud,EAAAC,EAAAzd,cAAA,OAAKS,MAAM,sCAAsCie,KAAK,UAAUP,aAAW,8BACzEX,EAAAC,EAAAzd,cAAA,OAAKS,MAAM,2BAA2Bie,KAAK,QAAQP,aAAW,iBAC5DX,EAAAC,EAAAzd,cAAA,UAAQiF,KAAK,SAASxE,MAAM,oBAAoB4M,GAAG,mBAAmBoR,QAASlJ,IAA/E,kBACAiI,EAAAC,EAAAzd,cAAA,UAAQiF,KAAK,SAASxE,MAAM,oBAAoB4M,GAAG,cAAcoR,QAAS5J,IAA1E,aACA2I,EAAAC,EAAAzd,cAAA,UAAQqN,GAAG,YAAYpN,UAAU,0BAA0Bgf,SAAUne,GACnE0c,EAAAC,EAAAzd,cAAA,UAAQkf,UAAQ,EAACze,MAAM,YAAvB,kBACA+c,EAAAC,EAAAzd,cAAA,mCAKRwd,EAAAC,EAAAzd,cAAA,OAAKC,UAAU,OACbud,EAAAC,EAAAzd,cAAA,OAAKC,UAAU,aACbud,EAAAC,EAAAzd,cAAA,OAAKqN,GAAG,yBAAyBpN,UAAU,qBAIjDud,EAAAC,EAAAzd,cAAC8e,EAAA,EAAD,CAAKC,SAAS,SAASC,MAAM,cAC3BxB,EAAAC,EAAAzd,cAAA,OAAKC,UAAU,aACbud,EAAAC,EAAAzd,cAAA,OAAKS,MAAM,sCAAsCie,KAAK,UAAUP,aAAW,8BACzEX,EAAAC,EAAAzd,cAAA,OAAKS,MAAM,2BAA2B4M,GAAG,iBAAiBqR,KAAK,QAAQP,aAAW,kBAChFX,EAAAC,EAAAzd,cAAA,UAAQiF,KAAK,SAASxE,MAAM,oBAAoB4M,GAAG,UAAUoR,QAAS5K,IAAtE,QACA2J,EAAAC,EAAAzd,cAAA,UAAQiF,KAAK,SAASxE,MAAM,oBAAoB4M,GAAG,mBAAmBoR,QAAShL,IAA/E,kBACA+J,EAAAC,EAAAzd,cAAA,UAAQiF,KAAK,SAASxE,MAAM,oBAAoB4M,GAAG,qBAAqBoR,QAASrL,IAAjF,uBAINoK,EAAAC,EAAAzd,cAAA,OAAKC,UAAU,aACbud,EAAAC,EAAAzd,cAAA,OAAKqN,GAAG,uBAAuBpN,UAAU,qCAY3Dud,EAAAC,EAAAzd,cAAA,OAAKqN,GAAG,yBACNmQ,EAAAC,EAAAzd,cAAA,QAAMqN,GAAG,eACPmQ,EAAAC,EAAAzd,cAAA,OAAKC,UAAU,eACbud,EAAAC,EAAAzd,cAAA,OAAKqN,GAAG,iBAAiBpN,UAAU,WACnCud,EAAAC,EAAAzd,cAAA,SAAO0L,KAAK,YAAY2B,GAAG,YAAYpI,KAAK,SAAS9D,MAAM,UAC3Dqc,EAAAC,EAAAzd,cAAA,SAAO0L,KAAK,SAAS2B,GAAG,SAASpI,KAAK,SAAS9D,MAAM,cAK3Dqc,EAAAC,EAAAzd,cAAA,cACEwd,EAAAC,EAAAzd,cAAA,OAAKS,MAAM,aACT+c,EAAAC,EAAAzd,cAAA,OAAKS,MAAM,mBAEb+c,EAAAC,EAAAzd,cAAA,OAAKS,MAAM,iBACT+c,EAAAC,EAAAzd,cAAA,kFA52EIqf,aC1DHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAtF,EAAA,GAAAtO,KAAA4T,EAAAC,KAAA,WAAqB7T,KAAK,SAAA8T,GAAiD,IAA9CC,EAA8CD,EAA9CC,OAAQC,EAAsCF,EAAtCE,OAAQC,EAA8BH,EAA9BG,OAAQC,EAAsBJ,EAAtBI,OAAQC,EAAcL,EAAdK,QAC3DJ,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAQT,MCDDU,IAASC,WAAWhjB,SAASC,eAAe,SACpDgjB,OACH3C,EAAAC,EAAAzd,cAACwd,EAAAC,EAAM2C,WAAP,KACE5C,EAAAC,EAAAzd,cAACqgB,EAAD,QAOJf","file":"static/js/main.4aa9107e.chunk.js","sourcesContent":["import './App.css';\nimport { Button, ButtonGroup, Modal } from 'react-bootstrap';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { Component, createElement } from 'react';\n\nimport 'sf-font';\n\nimport Web3Modal from \"web3modal\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport Web3 from 'web3';\n\nimport { useEffect } from \"react\"\nimport { accessListify } from 'ethers/lib/utils';\nimport { First } from 'react-bootstrap/esm/PageItem';\n\nimport NFTStakeABI from './RushNFTStaking.json';\nimport NitroBoostABI from './NitroBoost.json';\n\nimport { useWeb3React } from \"@web3-react/core\"  \n\nconst $ = window.$;\n\nvar tx_pending = false;\n\nvar CONFIG = null;\nvar ABI = null;\nvar account = null;\nvar nftcontract = null;\n\nvar defSymbol = null;\nvar totalGasLimit = null;\n\nvar walletBalanceAPI = null;\nvar scannerAPI = null;\nvar balanceAPI = null;\nvar resultAPICall = null;\nvar CONFIGWhitelist = null;\n\nvar nftName = null;\n\nvar stakingnftcontract = null;\nvar rewardcontract = null;\nvar nitrocontract = null;\nvar nftlevelcontract = null;\n\nvar stakingnft_address = null;\nvar nitroboost_address = null;\n\nvar acc = localStorage.getItem(\"account\");\nvar short_acct;\n\nvar web3 = null;\nvar contract = null;\n\nvar rewardInDetail = false;\nvar vaultSelected = null;\n\nvar amtNitro = 0;\n \n\n/* var refresh_screen;\n$(function () {\n  refresh_screen = function (_text) {\n    $(\".loader\").fadeOut(1000);\n    $(\".content\").fadeIn(1000);\n  }\n}); */\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      width: window.innerWidth,\n    };\n\n  }\n\n  componentWillMount() {\n    window.addEventListener('resize', this.handleWindowSizeChange);\n  }\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n  handleWindowSizeChange = () => {\n    this.setState({ width: window.innerWidth });\n  };\n\n  componentDidUpdate(){\n    /* const connectWalletOnPageLoad = async () => {\n      if (localStorage.getItem('isWalletConnected') === 'true') {\n        try {\n          await activate(injected)\n          localStorage.setItem('isWalletConnected', true)\n        } catch (ex) {\n          console.log(ex)\n        }\n      }\n    }\n    connectWalletOnPageLoad() */\n  }\n  \n \n  render() {\n    const { width } = this.state;\n    const isMobile = width <= 900;\n\n    let nftcost = '';\n  \n    const sleep = (milliseconds) => {\n      return new Promise(resolve => setTimeout(resolve, milliseconds))\n    }\n  \n    function delay() { \n      return new Promise(resolve => setTimeout(resolve, 300));\n    }\n\n    \n    async function connectwallet() {\n      try {\n        if (window.ethereum) {\n\n          const configResponse = await fetch(\"/config/config.json\", {\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Accept: \"application/json\",\n            },\n          });\n          CONFIG = await configResponse.json();\n\n          web3 = new Web3(window.ethereum);\n\n\n          await window.ethereum.send('eth_requestAccounts');\n          var accounts = await web3.eth.getAccounts();\n          account = accounts[0];\n\n          const networkId = await window.ethereum.request({\n            method: \"net_version\",\n          });\n\n          if ((networkId == CONFIG.MAINNET.ID) || (networkId == CONFIG.TESTNET.ID)) {\n\n            const abiResponse = await fetch(\"/config/abi.json\", {\n              headers: {\n                \"Content-Type\": \"application/json\",\n                Accept: \"application/json\",\n              },\n            });\n            ABI = await abiResponse.json();\n\n            var abiWhitelist = null;\n\n            if (networkId == CONFIG.MAINNET.ID) {\n              defSymbol = CONFIG.MAINNET.SYMBOL;\n              totalGasLimit = CONFIG.MAINNET.GAS_LIMIT;\n              scannerAPI = CONFIG.MAINNET.API;\n              balanceAPI = CONFIG.MAINNET.BALANCE;\n              walletBalanceAPI = CONFIG.MAINNET.WALLET;\n              rewardcontract = await ABIFetch(web3, ABI.TOKENREWARD.ABI, CONFIG.MAINDAPP.TOKENREWARD);\n              stakingnftcontract = await ABIFetch(web3, ABI.STAKING.ABI, CONFIG.MAINDAPP.STAKING);\n              nitrocontract = await ABIFetch(web3, ABI.NITROBOOST.ABI, CONFIG.MAINDAPP.NITROBOOST);\n              nftlevelcontract = await ABIFetch(web3, ABI.RUSHLEVEL.ABI, CONFIG.MAINDAPP.LEVELING);\n\n              stakingnft_address = CONFIG.MAINDAPP.STAKING;\n              nitroboost_address = CONFIG.MAINDAPP.NITROBOOST.toUpperCase();\n\n              abiWhitelist = await fetch(\"/config/whitelisted.json\", {\n                headers: {\n                  \"Content-Type\": \"application/json\",\n                  Accept: \"application/json\",\n                },\n              });\n              CONFIGWhitelist = await abiWhitelist.json();\n\n            }\n            /* else if (networkId == CONFIG.TESTNET.ID) {\n              //console.log(\"API CALL\");\n\n              defSymbol = CONFIG.TESTNET.SYMBOL;\n              totalGasLimit = CONFIG.TESTNET.GAS_LIMIT;\n              scannerAPI = CONFIG.TESTNET.API;\n              balanceAPI = CONFIG.TESTNET.BALANCE;\n              walletBalanceAPI = CONFIG.TESTNET.WALLET;\n              rewardcontract = await ABIFetch(web3, ABI.TOKENREWARD.ABI, CONFIG.TESTDAPP.TOKENREWARD);\n              stakingnftcontract = await ABIFetch(web3, ABI.STAKING.ABI, CONFIG.TESTDAPP.STAKING);\n              nitrocontract = await ABIFetch(web3, ABI.NITROBOOST.ABI, CONFIG.TESTDAPP.NITROBOOST);\n              nftlevelcontract = await ABIFetch(web3, ABI.RUSHLEVEL.ABI, CONFIG.TESTDAPP.LEVELING);\n\n\n              stakingnft_address = CONFIG.TESTDAPP.STAKING;\n              nitroboost_address = CONFIG.TESTDAPP.NITROBOOST;\n\n              abiWhitelist = await fetch(\"/config/testwhitelisted.json\", {\n                headers: {\n                  \"Content-Type\": \"application/json\",\n                  Accept: \"application/json\",\n                },\n              });\n              CONFIGWhitelist = await abiWhitelist.json();\n\n            } */\n\n            onGoingNotif(\"\");\n\n            var sWallBal = document.getElementById(\"wallBal\");\n            sWallBal.style.width = \"100px\";\n            sWallBal.innerHTML = await WalletBalance(account);\n\n            resultAPICall = await APICall(account, scannerAPI);\n            await listNFTFilter(resultAPICall);\n            //  await listNFT(account, 'unstaked-nft-container', resultAPICall, \"All\");\n            //document.getElementById(\"unstaked-nft-container\").innerHTML = \"\";\n\n            document.getElementById('unstaked-nft-container').innerHTML=\"\";\n            const DivContainer = document.getElementById('staked-nft-container');\n            DivContainer.innerHTML = \"\";\n            await stakeVaults('staked-nft-container');\n\n            await LoadVaultInfo();\n\n            var timer = setInterval(function () {\n              if (tx_pending==false){\n                RewardInquiry();\n              }\n            }, 5000);\n\n            localStorage.setItem('isWalletConnected', true)\n\n          }\n\n          else {\n            var z = window.confirm(\"Wrong network!\");\n          }\n\n        }\n      }\n      catch (ex) {\n        console.log('connectwallet - SeeError - ' + ex);\n      }\n    }\n\n    async function VaultRewardToken(delegate){\n      var vaultrewarder = await ABIFetch(web3, ABI.REWARDER.ABI, delegate); \n      var rewardToken = await vaultrewarder.methods.rewardToken().call(); \n      var _rewardcontract = await ABIFetch(web3, ABI.TOKENREWARD.ABI, rewardToken);\n      return _rewardcontract;\n    }\n\n    async function LoadVaultInfo(){\n      try{\n        var tbl = document.getElementById('tblvaultInfo');\n        tbl.innerHTML=\"\";\n\n        var thd = document.createElement('thead');\n        thd.className = \"thead-light\";\n        tbl.appendChild(thd);\n\n        var _tr = document.createElement('tr');\n        var _th1 = document.createElement('th');\n        _th1.scope = 'col';\n        _th1.innerHTML = 'Collection';\n        _tr.appendChild(_th1)\n\n        var _th2 = document.createElement('th');\n        _th2.scope = 'col';\n        _th2.innerHTML = 'Rewards Per Day';\n        _tr.appendChild(_th2)\n\n        thd.appendChild(_tr);\n\n        var counter_vault = 0;\n\n        var _tbody = document.createElement('tbody');\n        var _vault = await stakingnftcontract.methods.Vault(counter_vault).call();\n        while (_vault.active) { \n          var _rewardcontract;\n          if (_vault.delegate != stakingnft_address){\n            _rewardcontract = await VaultRewardToken(_vault.delegate); \n          }\n          else{\n            _rewardcontract = await ABIFetch(web3, ABI.TOKENREWARD.ABI, _vault.tokenReward);\n          }\n          var _rewardSymbol = await _rewardcontract.methods.symbol().call(); \n\n          var _tbody_tr = document.createElement('tr');\n\n          var _tbody_td1 = document.createElement('td');\n          _tbody_td1.innerHTML = _vault.vaultName;\n          _tbody_tr.appendChild(_tbody_td1);\n\n          var _tbody_td2 = document.createElement('td');\n          _tbody_td2.class='amount'; \n\n          \n          if (_vault.reqBooster == false){\n            //_tbody_tr.className=\"stakegoldeffect\";\n            _tbody_td1.className=\"textGlow\";  \n            _tbody_td2.className=\"textGlow\";  \n          }\n\n          var _span1 = document.createElement('span');\n          _span1.class = \"amount\";\n          _span1.innerHTML=Web3.utils.fromWei(_vault.rewardRate) + \" \";\n\n          var _span2 = document.createElement('span');\n          _span2.class = \"currency\";\n          _span2.innerHTML = _rewardSymbol;\n\n          _tbody_td2.appendChild(_span1);\n          _tbody_td2.appendChild(_span2);\n\n          _tbody_tr.appendChild(_tbody_td2);\n\n          _tbody.appendChild(_tbody_tr);\n\n          counter_vault += 1;\n          var _vault = await stakingnftcontract.methods.Vault(counter_vault).call();\n\n        }    \n        tbl.appendChild(_tbody);\n      }\n      catch(ex){\n        console.log(ex);\n      }\n\n\n    }\n \n\n    async function RefreshCollection() {      \n      if (account==null){\n        return;\n      }\n      var nftCol = document.getElementById(\"nftFilter\").value;\n\n      //console.log(\"RefreshCollection >> nftCol: \", nftCol);\n\n      resultAPICall = await APICall(account, scannerAPI);\n      await listNFT(account, 'unstaked-nft-container', resultAPICall, nftCol);\n    }\n\n    async function APICall(account, API) {\n      var theURL = API + \"=\" + account;\n      var apiResponse = await fetch(theURL);\n      var jsonParsedContents = await apiResponse.json();\n\n      return jsonParsedContents;\n    }\n\n    async function APIBalanceCall(_account, _CA, API) {\n      var theURL = API.replace('@CONTRACTADDRESS', _CA).replace('@ACCOUNT', _account);\n      var apiResponse = await fetch(theURL);\n      var jsonParsedContents = await apiResponse.json();\n\n      return jsonParsedContents;\n    }\n\n    async function WalletBalance(_account) {\n      var theURL = walletBalanceAPI.replace('@ACCOUNT', _account);\n      var apiResponse = await fetch(theURL);\n      var jsonParsedContents = await apiResponse.json();\n\n      var earnedrwd = Web3.utils.fromWei(jsonParsedContents.result);\n      var rewards = Number(earnedrwd).toFixed(3);\n\n      return '  ' + rewards + ' ' + defSymbol;\n    }\n\n    async function claimVault(_vaultId) {\n      try {\n        await onGoingNotif(\"Pending...\");\n\n        /* console.log(\"_vaultId: \", _vaultId); */\n        var _vault = await stakingnftcontract.methods.Vault(_vaultId).call();\n\n        var _tkIDs = [];\n\n        var nftcontract = await ABIFetch(web3, ABI.ERC721.ABI, _vault.nftAddress);        \n        var balanceOfOwner = await nftcontract.methods.balanceOf(stakingnft_address).call();\n        /* console.log('balanceOfOwner: ' + balanceOfOwner); */\n\n        for (let j = 0; j < balanceOfOwner; j++) {\n          var _tkID = await nftcontract.methods.tokenOfOwnerByIndex(stakingnft_address, j).call();\n          var _nftStakeInfo = await stakingnftcontract.methods.nftStake(_vaultId, _tkID).call();\n          if (_nftStakeInfo.owner == account) {\n            /* console.log(_tkID); */\n            _tkIDs.push(_tkID);\n          }\n        }\n\n        \n        /* resultAPICall = await APIBalanceCall(stakingnft_address, _vault.nftAddress, balanceAPI);\n        //console.log(resultAPICall);\n        for (let i = 0; i < resultAPICall.result; i++) {\n\n          var balanceOfOwner = await nftcontract.methods.balanceOf(stakingnft_address).call();\n          console.log('balanceOfOwner: ' + balanceOfOwner);\n\n          for (let j = 0; j < balanceOfOwner; j++) {\n            var _tkID = await nftcontract.methods.tokenOfOwnerByIndex(stakingnft_address, j).call();\n            var _nftStakeInfo = await stakingnftcontract.methods.nftStake(_vaultId, _tkID).call();\n            if (_nftStakeInfo.owner == account) {\n              console.log(_tkID);\n              _tkIDs.push(_tkID);\n            }\n          }\n        } */\n        /* console.log(_tkIDs); */\n\n        await stakingnftcontract.methods.claim(_vaultId, _tkIDs).send({ from: account });\n        await refreshDAppView();\n\n      }\n      catch (ex) {\n        console.log('claimVault');\n        console.log(ex);\n      }\n      await onGoingNotif(\"\");\n\n    }\n\n    async function backToStake() {\n      await stakeVaults('staked-nft-container');\n    }\n\n    async function modifyVault(_vaultId, _vaultContract) {\n      try {\n        await UnstakeMenuControl(true, true, true);\n\n        var tab_container = \"staked-nft-container\";\n        document.getElementById('staked-nft-container').innerHTML = \"\";\n\n        var _account = stakingnft_address;\n        resultAPICall = await APICall(_account, scannerAPI);\n\n        rewardInDetail = true;\n\n        for (let i = 0; i < resultAPICall.result.length; i++) {\n          if (resultAPICall.result[i].type == \"ERC-721\") {\n            var _contractAddress = resultAPICall.result[i].contractAddress;\n            vaultSelected = _contractAddress;\n            var _vId = await stakingnftcontract.methods.getVaultId(_contractAddress).call();\n            if ((_vaultId == _vId) && (_vaultContract == _contractAddress)) {\n              nftcontract = await ABIFetch(web3, ABI.ERC721.ABI, _contractAddress);\n              //await ShowNFTCard(tab_container, nftcontract, _contractAddress, _account, true);\n              await renderNFT(tab_container, nftcontract, _contractAddress, _account, true);\n              \n              break;\n            }\n          }\n        }\n      }\n      catch (ex) {\n        console.log(ex);\n      }\n    }\n\n\n    async function onGoingNotif(msg) {\n      var btnConnect = document.getElementById('btnConnect');\n      if (msg == \"\") {\n        try {\n          hideCover();\n          tx_pending=false;\n        }\n        catch (ex) {\n        }\n\n        short_acct = account.substring(0, 6) + \"....\" + account.substring(account.length - 4, account.length);\n        var img = document.createElement('img');\n        img.className = \"ml-3\";\n        img.setAttribute(\"src\", 'chef.svg');\n        //btnConnect.className = \"ml-3\";\n        btnConnect.innerHTML = short_acct;\n        btnConnect.appendChild(img);\n      }\n      else {\n        showCover();\n        btnConnect.innerHTML = \"\";\n        btnConnect.innerHTML = msg;\n        /* showLoading(); */\n      }\n    }\n\n    async function unstakeVault(_vaultId) {\n      try {\n        await onGoingNotif(\"Pending...\");\n\n        var _vault = await stakingnftcontract.methods.Vault(_vaultId).call();\n\n        var _tkIDs = [];\n        resultAPICall = await APIBalanceCall(stakingnft_address, _vault.nftAddress, balanceAPI);\n        nftcontract = await ABIFetch(web3, ABI.ERC721.ABI, _vault.nftAddress);\n\n        for (let i = 0; i < resultAPICall.result; i++) {\n          var _tkID = await nftcontract.methods.tokenOfOwnerByIndex(stakingnft_address, i).call();\n          var _nftStakeInfo = await stakingnftcontract.methods.nftStake(_vaultId, _tkID).call();\n          if (_nftStakeInfo.owner == account) {\n            _tkIDs.push(_tkID);\n          }\n        }\n        await stakingnftcontract.methods.unstake(_vaultId, _tkIDs).send({ from: account });\n        await refreshDAppView();\n      }\n      catch (ex) {\n        console.log('unstakeVault');\n        console.log(ex);\n      }\n      await onGoingNotif(\"\");\n    }\n\n    async function GetNFTLevel(_vaultId, _tkID){   \n      try{\n        var nftLevel = await nftlevelcontract.methods.getNFTLevel(_vaultId, _tkID).call(); \n        if (nftLevel != \"undefined\") {\n          return `Lv ${nftLevel}`;\n        }         \n      } \n      catch(ex){\n        return \"\";\n      }     \n    }\n\n    async function RewardInquiry() {\n      var _vaultId;\n      try {\n        var btnConnect = document.getElementById('btnConnect');\n        if (!btnConnect.innerHTML.includes(short_acct)) {\n          return;\n        }\n\n        var sWallBal = document.getElementById(\"wallBal\");\n        sWallBal.innerHTML = await WalletBalance(account);\n\n        //var _stakeCount = 0;\n        var _account = stakingnft_address;\n        resultAPICall = await APICall(_account, scannerAPI);\n\n        var balanceOfVault = 0;\n        var _symbol = await rewardcontract.methods.symbol().call();\n        if (rewardInDetail == false) {\n\n          for (let i = 0; i < resultAPICall.result.length; i++) {\n            if (resultAPICall.result[i].type == \"ERC-721\" && nitroboost_address.toUpperCase() != resultAPICall.result[i].contractAddress.toUpperCase()) {\n              var contractAdress = resultAPICall.result[i].contractAddress;\n              _vaultId = await stakingnftcontract.methods.getVaultId(contractAdress).call();\n\n              var divPend = document.getElementById(\"Pending\" + resultAPICall.result[i].contractAddress);\n\n              var _pendingRewards = 0;\n\n              if (divPend != null) {\n                nftcontract = await ABIFetch(web3, ABI.ERC721.ABI, resultAPICall.result[i].contractAddress);\n                balanceOfVault = await nftcontract.methods.balanceOf(_account).call();\n\n                var result = await stakingnftcontract.methods.pendingRewardByAccount(_vaultId, account).call();\n                const { 0: _pend, 1: _stakeCount} = result;\n\n                var earned = String(_pend).split(\",\")[0];\n                var earnedrwd = Web3.utils.fromWei(earned);\n                _pendingRewards = Number(earnedrwd).toFixed(2);\n\n                //Custom Reward Token\n                var _vault = await stakingnftcontract.methods.Vault(_vaultId).call();\n                if (_vault.delegate != stakingnft_address){\n                  var _rewardcontract = await VaultRewardToken(_vault.delegate);\n                  _symbol = await _rewardcontract.methods.symbol().call();  \n                }\n\n                divPend.innerHTML = `Total: ${_stakeCount} | <h6 class='pendingRewards'> Earn: ${_pendingRewards} ${_symbol} </h6>`;\n              }\n            }\n          }\n        }\n        else if (rewardInDetail == true) {\n          try {\n            nftcontract = await ABIFetch(web3, ABI.ERC721.ABI, vaultSelected);\n            _vaultId = await stakingnftcontract.methods.getVaultId(vaultSelected).call();\n            balanceOfVault = await nftcontract.methods.balanceOf(_account).call();\n            _pendingRewards = 0;\n            var _stakeCount = 0; \n\n              //Custom Reward Token\n              var _vault = await stakingnftcontract.methods.Vault(_vaultId).call();\n              if (_vault.delegate != stakingnft_address){\n                var _rewardcontract = await VaultRewardToken(_vault.delegate);\n                _symbol = await _rewardcontract.methods.symbol().call();  \n              }\n  \n            for (var j = 0; j < balanceOfVault; j++) {\n              var _tkID = await nftcontract.methods.tokenOfOwnerByIndex(_account, j).call();\n              var _nftStakeInfo = await stakingnftcontract.methods.nftStake(_vaultId, _tkID).call();\n              \n              if (_nftStakeInfo.owner == account) {\n                _stakeCount++;\n\n                var _pend = await stakingnftcontract.methods.pendingReward(_vaultId, _tkID).call();\n                var earned = String(_pend).split(\",\")[0];\n                var earnedrwd = Web3.utils.fromWei(earned);\n                var rewards = Number(earnedrwd).toFixed(4);\n                _pendingRewards = Number(rewards).toFixed(4);\n\n                const objNFTPend = document.getElementById(\"att\" + _vaultId + _tkID); \n                objNFTPend.innerHTML = \"\";\n                objNFTPend.innerHTML = \"Earn: \" + _pendingRewards + \" \" + _symbol;\n\n\n                var nftLevel = await GetNFTLevel(_vaultId, _tkID); \n                const objNFTLvl = document.getElementById(\"lvl\" + _vaultId + _tkID);\n                objNFTLvl.innerHTML = \"\";\n                objNFTLvl.innerHTML = nftLevel;\n  \n                var _nitroStakeRemaining;\n                try {\n                  const result = await stakingnftcontract.methods.nitroStakeRemaining(_vaultId, _tkID).call(); \n\n                  const { 0: nitroID, 1: limit, 2: remain } = result;\n                  _nitroStakeRemaining = remain;\n\n                  var _nitroEquipped;\n                  var _multipower; \n                  var _powerFloat;\n                  var nftLvlBonus;\n                  var _lvlFloat;\n\n                  _nitroEquipped = await stakingnftcontract.methods.getEquippedNitro(_vaultId, _tkID).call();\n                  if (_nitroEquipped > 0){\n                    _multipower = await stakingnftcontract.methods.getNitroPower(_vaultId, _nitroEquipped).call();\n                    _powerFloat = parseFloat(_multipower + '.00') / 100;\n                    nftLvlBonus = await nftlevelcontract.methods.getLevelBonus(_vaultId, _tkID).call();\n                    _lvlFloat = parseFloat(nftLvlBonus + '.00') / 100;\n                    _powerFloat = _powerFloat * _lvlFloat;\n\n\n                    if (_nitroStakeRemaining > 0) {\n                      var _glowNum = await nitrocontract.methods.getRareType(nitroID).call();\n\n                      var inSec = (_nitroStakeRemaining / 86400) * 24 * 60 * 60;\n\n                      var seconds = Number(inSec);\n                      var d = Math.floor(seconds / (3600 * 24));\n                      var h = Math.floor(seconds % (3600 * 24) / 3600);\n                      var m = Math.floor(seconds % 3600 / 60);\n                      var s = Math.floor(seconds % 60);\n\n                      var dDisplay = d > 0 ? d + (d == 1 ? \" day, \" : \" days, \") : \"\";\n                      var hDisplay = h > 0 ? h + (h == 1 ? \":\" : \":\") : \"\";\n                      var mDisplay = m > 0 ? m + (m == 1 ? \":\" : \":\") : \"\";\n                      var sDisplay = s > 0 ? s + (s == 1 ? \"\" : \"\") : \"\";\n                      var remainingBurn = dDisplay + hDisplay + mDisplay + sDisplay;\n\n\n                      document.getElementById(\"att2\" + _vaultId + _tkID).innerHTML = \"<span class='font-awesome-icons rocket'></span> \" + remainingBurn + ' left'\n                        + '</br> x' + _powerFloat.toFixed(2);\n                      document.getElementById(\"nft\" + _vaultId + \"|\" + _tkID).className = \"nftCard Equipped\" + _glowNum;\n\n                    }\n                    else {\n                      document.getElementById(\"att2\" + _vaultId + _tkID).innerHTML = 'x' + _powerFloat.toFixed(2);\n                    }\n\n                  }\n                  /* else{\n                    break;\n                  } */\n                  /* console.log(_powerFloat); */\n\n                  \n                }\n                catch (nitro_ex) {\n                  console.log(\"no nitro equip\", _vaultId, _tkID, _nitroStakeRemaining, nitro_ex);\n                }\n\n              }\n\n\n            }\n          }\n          catch (ex1) {\n            console.log(\"Error in RewardInquiry - Detailed: \", ex1);\n          }\n        }\n      }\n      catch (ex) {\n        console.log(\"Error on RewardInquiry: \", _vaultId);\n        console.log(ex); \n      }\n      return _stakeCount;\n    } \n\n    async function UnstakeMenuControl(btnBack, btnClaim, btnUnstake) {\n      var _btnBack = document.getElementById(\"btnBack\");\n      var _btnClaim = document.getElementById(\"btnClaimSelected\");\n      var _btnUnstake = document.getElementById(\"btnUnstakeSelected\");\n\n      if ((btnBack == false) && (btnClaim == false) && (btnUnstake == false)) {\n        document.getElementById(\"btnUnstakeMenu\").style.display = \"none\";\n      }\n      else {\n        document.getElementById(\"btnUnstakeMenu\").style.display = \"\";\n      }\n\n      if (btnBack == false) {\n        _btnBack.setAttribute(\"disabled\", \"disabled\");\n        _btnBack.classList.add(\"disabled\");\n      }\n      else {\n        _btnBack.removeAttribute('disabled');\n        _btnBack.classList.remove(\"disabled\");\n      }\n\n      if (btnClaim == false) {\n        _btnClaim.setAttribute(\"disabled\", \"disabled\");\n        _btnClaim.classList.add(\"disabled\");\n      }\n      else {\n        _btnClaim.removeAttribute('disabled');\n        _btnClaim.classList.remove(\"disabled\");\n      }\n\n      if (btnUnstake == false) {\n        _btnUnstake.setAttribute(\"disabled\", \"disabled\");\n        _btnUnstake.classList.add(\"disabled\");\n      }\n      else {\n        _btnUnstake.removeAttribute('disabled');\n        _btnUnstake.classList.remove(\"disabled\");\n      }\n    }\n\n    async function stakeVaults(tab_container) {      \n      if (account==null){\n        return;\n      }\n      await delay();\n\n      var _account = stakingnft_address;\n      resultAPICall = await APICall(_account, scannerAPI);\n\n      await UnstakeMenuControl(false, false, false);\n\n      const DivContainer = document.getElementById(tab_container);\n      DivContainer.innerHTML = \"\";\n\n      /* console.log(width); */\n      if (width<830){\n        DivContainer.className = \"nft_card_view1\";\n      }\n      else if (width>=830 && width<1000){\n        DivContainer.className = \"nft_card_view2\";\n      }\n      else if (width>=1000 && width<1300){\n        DivContainer.className = \"nft_card_view3\";\n      }\n      else if(width>=1300){\n        DivContainer.className = \"nft_card_view4\";\n      }\n\n      rewardInDetail = false;\n      var usrVaultCount = 0;\n      var usrCurrVault = null;\n      var _vaultContract = null;\n\n      //Check Number of Vault Stake of user\n      for (let i = 0; i < resultAPICall.result.length; i++) {\n        if (resultAPICall.result[i].type == \"ERC-721\" && nitroboost_address.toUpperCase() != resultAPICall.result[i].contractAddress.toUpperCase()) {\n          var contractAdress = resultAPICall.result[i].contractAddress;\n          var _vaultId = await stakingnftcontract.methods.getVaultId(contractAdress).call();\n\n          nftcontract = await ABIFetch(web3, ABI.ERC721.ABI, contractAdress);\n          var balanceOfVault = await nftcontract.methods.balanceOf(_account).call();\n\n          for (var j = 0; j < balanceOfVault; j++) {\n            var _tkID = await nftcontract.methods.tokenOfOwnerByIndex(_account, j).call();\n            var _nftStakeInfo = await stakingnftcontract.methods.nftStake(_vaultId, _tkID).call();\n            if (_nftStakeInfo.owner == account) {\n              usrVaultCount++;\n              usrCurrVault = _vaultId;\n              _vaultContract = contractAdress;\n              break;\n            }\n          }\n        }\n      }\n\n      if (usrVaultCount == 1) {\n        rewardInDetail = true;\n        await modifyVault(usrCurrVault, _vaultContract);\n      }\n      else {\n\n        for (let i = 0; i < resultAPICall.result.length; i++) {\n          if (resultAPICall.result[i].type == \"ERC-721\" && nitroboost_address.toUpperCase() != resultAPICall.result[i].contractAddress.toUpperCase()) {\n\n            var contractAdress = resultAPICall.result[i].contractAddress;\n            var _vaultId = await stakingnftcontract.methods.getVaultId(contractAdress).call();\n            var _vaultInfo = await stakingnftcontract.methods.Vault(_vaultId).call();\n\n            if (_vaultInfo.active) {\n              nftcontract = await ABIFetch(web3, ABI.ERC721.ABI, contractAdress);\n              var nftName = await nftcontract.methods.name().call();\n              var balanceOfVault = await nftcontract.methods.balanceOf(_account).call();\n              var symbol = await rewardcontract.methods.symbol().call();\n\n              var _tkID = 0;\n              var _stakeCount = 0;\n              for (var j = 0; j < balanceOfVault; j++) {\n                _tkID = await nftcontract.methods.tokenOfOwnerByIndex(_account, j).call();\n\n                var _nftStakeInfo = await stakingnftcontract.methods.nftStake(_vaultId, _tkID).call();\n\n                if (_nftStakeInfo.owner == account) {\n                  _stakeCount++;\n\n                  if (_stakeCount > 0) {\n                    let tokenMetadataURI = await nftcontract.methods.tokenURI(_tkID).call();\n                    if (tokenMetadataURI.startsWith(\"ipfs://\")) {\n                      tokenMetadataURI = `https://ipfs.io/ipfs/${tokenMetadataURI.split(\"ipfs://\")[1]}`;\n                    }\n                    else if (tokenMetadataURI.startsWith(\"https://gateway.pinata.cloud/ipfs/\")) {\n                      tokenMetadataURI = tokenMetadataURI.replace(`https://gateway.pinata.cloud/ipfs/`, ``);\n                      tokenMetadataURI = `https://ipfs.io/ipfs/${tokenMetadataURI}${1}`;\n                    }\n                    var tokenMetadata = await fetch(tokenMetadataURI).then((response) => response.json());\n\n                    (async function () {\n                      const cardVault = document.createElement('div');\n                      cardVault.className = \"vault_container\";\n                      cardVault.id = contractAdress;\n                      cardVault.value = _vaultId;\n\n                      const cardVaultCard = document.createElement('div');\n                      cardVaultCard.className = \"vault_card\";\n                      if (isMobile) {\n                        cardVaultCard.className = \"vault_card-mobile\";\n                      }\n\n                      const cardVaultFront = document.createElement('div');\n                      cardVaultFront.className = \"vault_front parent\";\n                      if (isMobile){\n                        cardVaultFront.className = \"vault_front-mobile parent\";\n                      }\n\n                      var imgNFT\n                      if (tokenMetadata[\"image\"].includes(\"mp4\")) {\n                        imgNFT = document.createElement('video');\n\n                        const vid_source = document.createElement(\"source\");\n\n                        if (tokenMetadata[\"image\"].startsWith(\"ipfs://\")) {\n                          vid_source.setAttribute(\"src\", `https://ipfs.io/ipfs/${tokenMetadata[\"image\"].split(\"ipfs://\")[1]}`);\n                        }\n                        else {\n                          vid_source.setAttribute(\"src\", tokenMetadata[\"image\"]);\n                        }\n                        vid_source.setAttribute(\"type\", \"video/mp4\");\n                        imgNFT.appendChild(vid_source);\n                      }\n                      else {\n                        imgNFT = document.createElement('img');\n                        imgNFT.setAttribute(\"src\", '.\\loading.gif');\n\n                        var img_src = tokenMetadata[\"image\"];\n                        imgNFT.setAttribute(\"src\", img_src);\n                      }\n                      imgNFT.setAttribute(\"alt\", contractAdress);\n\n                      const cardVaultDetails = document.createElement('div');\n                      cardVaultDetails.className = \"vault_details\";\n\n                      const cardH4 = document.createElement('h5');\n                      cardH4.style.color = \"white\";\n                      cardH4.className = \"VaultName\";\n                      cardH4.innerHTML = (nftName.length > 15 ? nftName.substring(0, 10) + \"...\" : nftName) + \" Vault\";\n\n                      const cardSpan = document.createElement('span');\n                      cardSpan.className = \"spanX\"\n                      cardSpan.id = \"Pending\" + contractAdress;\n                      cardSpan.style.color = \"white\";\n                      cardSpan.innerHTML = \"\";\n\n                      cardVaultDetails.appendChild(cardH4);\n                      cardVaultDetails.appendChild(cardSpan);\n\n                      cardVaultFront.appendChild(imgNFT);\n                      cardVaultFront.appendChild(cardVaultDetails);\n\n                      const cardVaultBack = document.createElement('div');\n                      cardVaultBack.className = \"vault_back\";\n\n                      var _tbl = document.createElement('table');\n                      var _tr = document.createElement('tr');\n                      _tbl.appendChild(_tr);\n\n                      var _attrdiv = document.createElement('div');\n                      var nft_dtl = document.createElement('h6');\n                      var _nftName = await nftcontract.methods.name().call();\n                      var _symbl = await nftcontract.methods.symbol().call();\n                      var _supply = await nftcontract.methods.totalSupply().call();\n                      nft_dtl.innerHTML = \"Name: \" + _nftName + '</br>Symbol: ' + _symbl + '</br>Total Supply: ' + _supply;\n                      _attrdiv.appendChild(nft_dtl);\n                      _tbl.appendChild(_attrdiv);   \n\n                      var _tr2 = document.createElement('tr');\n                      _tr2.className=\"vault_back_att\";\n\n                      const cardButtonClaim = document.createElement('a');\n                      cardButtonClaim.style.color = \"white\";\n                      cardButtonClaim.innerHTML = \"Claim All \";\n                      cardButtonClaim.className = \"back_attr\";\n                      cardButtonClaim.onclick = function () { claimVault(cardVault.value); }\n\n                      const cardButtonUnstake = document.createElement('a');\n                      cardButtonUnstake.style.color = \"white\";\n                      cardButtonUnstake.innerHTML = \"Unstake All \";\n                      cardButtonUnstake.className = \"back_attr\";\n                      cardButtonUnstake.onclick = function () { unstakeVault(cardVault.value); }\n\n                      const cardButtonModify = document.createElement('a');\n                      cardButtonModify.style.color = \"white\";\n                      cardButtonModify.innerHTML = \"Modify\";\n                      cardButtonModify.className = \"back_attr\";\n                      cardButtonModify.onclick = function () { modifyVault(cardVault.value, cardVault.id); }\n\n                      _tr2.appendChild(cardButtonClaim);\n                      _tr2.appendChild(cardButtonUnstake);\n                      _tr2.appendChild(cardButtonModify);\n\n                      _tbl.appendChild(_tr2);  \n                      cardVaultBack.appendChild(_tbl);  \n\n\n                      /* cardVaultBack.appendChild(cardButtonClaim);\n                      cardVaultBack.appendChild(cardButtonUnstake);\n                      cardVaultBack.appendChild(cardButtonModify); */\n\n                      cardVaultCard.appendChild(cardVaultFront);\n                      cardVaultCard.appendChild(cardVaultBack);\n\n                      cardVault.appendChild(cardVaultCard);\n\n                      DivContainer.appendChild(cardVault);\n                    })();\n                  }\n                  break;\n                }\n              }\n            }\n          }\n        }\n      }\n\n    }\n\n    async function listNFT(_account, tab_container, jsonParsedContents, filterList) {\n      try {\n        var userNFTHold = 0;\n        var btnStakeAll = document.getElementById(\"btnStakeAll\");\n        var btnStakeSelected = document.getElementById(\"btnStakeSelected\");\n\n        document.getElementById(tab_container).innerHTML = \"\";\n\n        //console.log(\"filterList: \", filterList);\n\n        if (filterList == \"All\" || filterList == \"All Owned NFT\") {\n          btnStakeAll.setAttribute('disabled', 'disabled');\n          btnStakeSelected.setAttribute('disabled', 'disabled');\n\n          //Populate List NFT \n          if (jsonParsedContents != null) {\n            for (var key in CONFIGWhitelist.NFT) {\n              for (let i = 0; i < jsonParsedContents.result.length; i++) {\n                if (jsonParsedContents.result[i].type == \"ERC-721\") {\n                  if (CONFIGWhitelist.NFT[key].ADDRESS == jsonParsedContents.result[i].contractAddress) {\n                    nftcontract = await ABIFetch(web3, ABI.ERC721.ABI, jsonParsedContents.result[i].contractAddress);\n                    //serNFTHold = userNFTHold + (await ShowNFTCard(tab_container, nftcontract, jsonParsedContents.result[i].contractAddress, _account));  //myHoldNFT\n                    userNFTHold = userNFTHold + (await renderNFT(tab_container, nftcontract, jsonParsedContents.result[i].contractAddress, _account));  //myHoldNFT\n                    break;\n                  }\n                }\n              }\n            }\n\n            //All other ERC-721\n            var ctr;\n            for (let i = 0; i < jsonParsedContents.result.length; i++) {\n              if (jsonParsedContents.result[i].type == \"ERC-721\" && nitroboost_address.toUpperCase() != jsonParsedContents.result[i].contractAddress.toUpperCase()) {\n                ctr = 0;\n                for (var key in CONFIGWhitelist.NFT) {\n                  if (CONFIGWhitelist.NFT[key].ADDRESS != jsonParsedContents.result[i].contractAddress) {\n                    ctr++;\n                  }\n                }\n                if (ctr >= CONFIGWhitelist.NFT.length) {\n                  nftcontract = await ABIFetch(web3, ABI.ERC721.ABI, jsonParsedContents.result[i].contractAddress);\n                  //userNFTHold = userNFTHold + (await ShowNFTCard(tab_container, nftcontract, jsonParsedContents.result[i].contractAddress, _account));  //myHoldNFT\n                  userNFTHold = userNFTHold + (await renderNFT(tab_container, nftcontract, jsonParsedContents.result[i].contractAddress, _account));  //myHoldNFT\n                  \n                }\n              }\n            }\n          }\n        }\n        else {\n          nftcontract = await ABIFetch(web3, ABI.ERC721.ABI, filterList);\n\n          //console.log(await nftcontract.methods.name().call());\n\n          //userNFTHold = userNFTHold + (await ShowNFTCard(tab_container, nftcontract, filterList, _account));  //myHoldNFT\n          userNFTHold = userNFTHold + (await renderNFT(tab_container, nftcontract, filterList, _account));  //myHoldNFT\n          btnStakeAll.removeAttribute('disabled');\n          btnStakeSelected.removeAttribute('disabled');\n        }\n\n        if (userNFTHold == 0) {\n          ShowNFTError(\"NO NFT SCANNED.\");\n        }\n      }\n\n      catch (ex) {\n        console.log('listNFT - SeeError - ' + ex);\n        ShowNFTError(ex);\n      }\n    }\n\n    async function ABIFetch(web3, _abi, _address) {\n      var _contract;\n      var ABIResponse;\n\n      ABIResponse = await fetch(_abi, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n        },\n      });\n      const ABIJSON = await ABIResponse.json();\n      _contract = new web3.eth.Contract(ABIJSON, _address);\n      return _contract;\n    }\n\n    async function listNFTFilter(jsonParsedContents) {\n      var lstNFT = document.getElementById(\"nftFilter\");\n      lstNFT.innerHTML = \"\";\n\n      for (let i = 0; i < jsonParsedContents.result.length; i++) {\n        if (i == 0) {\n          var z_1 = document.createElement(\"option\");\n          z_1.setAttribute(\"value\", \"All\");\n          var t_1 = document.createTextNode(\"All Owned NFT\");\n\n          z_1.appendChild(t_1);\n          lstNFT.appendChild(z_1);\n        }\n\n        if (jsonParsedContents.result[i].type == \"ERC-721\" && jsonParsedContents.result[i].balance > 0 && nitroboost_address.toUpperCase() != jsonParsedContents.result[i].contractAddress.toUpperCase()) {\n          var z = document.createElement(\"option\");\n          z.setAttribute(\"value\", jsonParsedContents.result[i].contractAddress);\n\n          var t = document.createTextNode(jsonParsedContents.result[i].name + \": \" + jsonParsedContents.result[i].balance);\n          z.appendChild(t);\n\n          lstNFT.appendChild(z);\n        }\n\n      }\n    }\n\n    async function fetchNFTImage(nftcontract, _account, tkID, _caller) {\n      var tokenMetadata = null;\n      try {\n        let tokenMetadataURI = await nftcontract.methods.tokenURI(tkID).call(); \n        if (tokenMetadataURI.startsWith(\"ipfs://\")) {\n          tokenMetadataURI = `https://ipfs.io/ipfs/${tokenMetadataURI.split(\"ipfs://\")[1]}`;\n        }\n        else if (tokenMetadataURI.startsWith(\"https://gateway.pinata.cloud/ipfs/\")) {\n          tokenMetadataURI = tokenMetadataURI.replace(`https://gateway.pinata.cloud/ipfs/`, ``);\n          tokenMetadataURI = `https://ipfs.io/ipfs/${tokenMetadataURI}${tkID}`;\n        }\n        tokenMetadata = await fetch(tokenMetadataURI).then((response) => response.json());\n        console.log(tokenMetadata);\n      }\n      catch (ex) {\n        tokenMetadata = \"https://raw.githubusercontent.com/cryptobugnft/nitro/main/tank/InvalidURI.json\";\n        console.log(tokenMetadata);\n        console.log('Caller - ' + _caller);\n        console.log(ex);\n      }\n\n      return tokenMetadata;\n\n    }\n\n    async function renderNFT(tab_container, nftcontract, contractAdress, _account, isStaked){\n      var nftName = await nftcontract.methods.name().call();\n      var balanceOfOwner = await nftcontract.methods.balanceOf(_account).call();  \n\n      var nftContainer = document.getElementById(tab_container); \n      var nftCard;\n        var nftTable;\n      var nftMedia;\n        var nftTD;\n          var nftLvl;\n          var nftChk;\n          var nftLbl;\n          var nftImg;\n      var nftAtt;\n        var nftAttTD;\n          var nftTxt1;\n          var nftTxt2;\n          var nftBtn;\n          var nftTxt3;\n      try{\n\n        if (width>=400 && width<850){\n          nftContainer.className = \"nft_card_view2\";\n        }\n        else if (width>=850 && width<1000){\n          nftContainer.className = \"nft_card_view3\";\n        }\n        else if (width>=1000 && width<1300){\n          nftContainer.className = \"nft_card_view4\";\n        }\n        else if(width>=1300){\n          nftContainer.className = \"nft_card_view5\";\n        }\n\n        onGoingNotif(\"Loading...\");\n        for (let i = 0; i < balanceOfOwner; i++){\n          (async function (){\n            const tkID = await nftcontract.methods.tokenOfOwnerByIndex(_account, i).call();\n            const tokenMetadata = await fetchNFTImage(nftcontract, _account, tkID, 'renderNFT');\n            const _vaultId = await stakingnftcontract.methods.getVaultId(contractAdress).call();\n            \n            var _nftStakeInfo = await stakingnftcontract.methods.nftStake(_vaultId, tkID).call();\n            if (isStaked) {\n              if (_nftStakeInfo.owner != account) {\n                return;\n              }\n            }\n\n            nftCard = document.createElement(\"div\");\n            nftCard.id = \"nft\" + _vaultId + \"|\" + tkID;\n            nftCard.className = \"nftCard\";\n\n            nftTable = document.createElement(\"TABLE\");\n            nftTable.setAttribute(\"id\", \"tbl\" + _vaultId + tkID);\n            nftCard.appendChild(nftTable);\n\n            nftMedia = document.createElement(\"TR\");\n            nftMedia.className = \"nftMedia\";\n            nftTable.appendChild(nftMedia);\n\n            nftTD = document.createElement(\"TD\");\n            nftTD.className = \"nftTD\";\n            nftMedia.appendChild(nftTD);\n\n            nftLvl = document.createElement('h6');\n            nftLvl.id = \"lvl\" + _vaultId + tkID;\n            nftLvl.className = \"nftLvl\";\n            nftLvl.innerHTML = \"\"\n            nftTD.appendChild(nftLvl);\n            /* nftMedia.appendChild(nftLvl); */\n\n            nftChk = document.createElement(\"INPUT\");\n            nftChk.setAttribute(\"type\", \"checkbox\");\n            nftChk.id = contractAdress + \"_\" + tkID;\n            nftChk.className = \"nftChk\";\n            nftTD.appendChild(nftChk);\n            /* nftMedia.appendChild(nftChk); */\n \n            nftLbl = document.createElement(\"LABEL\");\n            nftLbl.className = \"parent\";\n            nftLbl.htmlFor = nftChk.id;\n            nftTD.appendChild(nftLbl);\n            /* nftMedia.appendChild(nftLbl); */\n\n            if (tokenMetadata[\"image\"].includes(\"mp4\")) {\n              nftImg = document.createElement('video');\n              const vid_source = document.createElement(\"source\");\n              if (tokenMetadata[\"image\"].startsWith(\"ipfs://\")) {\n                vid_source.setAttribute(\"src\", `https://ipfs.io/ipfs/${tokenMetadata[\"image\"].split(\"ipfs://\")[1]}`);\n              }\n              else {\n                vid_source.setAttribute(\"src\", tokenMetadata[\"image\"]);\n              }\n              vid_source.setAttribute(\"type\", \"video/mp4\");\n              nftImg.appendChild(vid_source);\n            }\n            else {\n              try{\n                nftImg = document.createElement('img');\n                var _imgFix = tokenMetadata[\"image\"];\n                console.log(_imgFix);\n                if (_imgFix.startsWith(\"ipfs://\")) {\n                  _imgFix = `https://ipfs.io/ipfs/${_imgFix.replace(\"ipfs://\", '')}`\n                }\n                else if (_imgFix.startsWith(\"https://cattos.mypinata.cloud/ipfs/\")) {\n                  _imgFix = _imgFix.replace(`https://cattos.mypinata.cloud/ipfs/`, `https://gateway.ipfs.io/ipfs/`);\n                  console.log(\"supposed to be fix\", _imgFix);\n                }\n                nftImg.setAttribute(\"src\", _imgFix);\n              }\n              catch(img_er){\n                console.log(img_er);\n                nftImg.setAttribute(\"src\", \"hidden.jpg\");\n              }\n            }\n            nftImg.setAttribute(\"alt\", \"Error loading image\");\n            nftImg.className=\"nftImg\";\n            nftLbl.appendChild(nftImg);\n             \n            nftAtt = document.createElement(\"TR\");\n            nftAtt.className = \"nftAtt\";\n            nftTable.appendChild(nftAtt);\n\n            nftAttTD = document.createElement(\"TD\");\n            nftAttTD.className = \"nftAttTD\";\n            nftAtt.appendChild(nftAttTD);\n\n \n            nftTxt1 = document.createElement('h6');\n            nftTxt1.id = \"stk\" + _vaultId + tkID;\n            nftTxt1.className = \"nftTxt1\";\n            nftTxt1.innerHTML = (nftName.length > 20 ? nftName.substring(0, 20) : nftName) + ` #` + (tkID.length > 5 ? tkID.substring(1, 5) : tkID);\n            nftAttTD.appendChild(nftTxt1);\n            /* nftAtt.appendChild(nftTxt1); */\n\n            nftTxt2 = document.createElement('h6');\n            nftTxt2.id = \"att\" + _vaultId + tkID;\n            nftTxt2.className = \"nftTxt2\";\n            nftTxt2.innerHTML = \"\";\n            nftAttTD.appendChild(nftTxt2);\n            /* nftAtt.appendChild(nftTxt2); */\n\n            nftBtn = document.createElement('button');\n            nftBtn.type = \"button\";\n            nftBtn.className = \"nftBtn\";\n            nftBtn.style = \"{{ fontFamily: 'SF Pro Display' }}\";\n            nftBtn.innerHTML = \"+\";\n\n            if (isStaked){              \n              nftBtn.onclick = function () {\n                showPrompt(_vaultId + \"|\" + tkID, function (value) {\n                });\n              };\n            }\n            else{              \n              nftBtn.onclick = function () {\n                showPromptTransfer(_vaultId + \"|\" + tkID + \"|\" + contractAdress, function (value) {\n                });\n              };\n            }\n\n            nftAttTD.appendChild(nftBtn);\n            /* nftAtt.appendChild(nftBtn); */\n\n           /*  var _i = document.createElement(\"i\");\n            _i.className=\"fa-regular fa-rocket-launch\";\n            nftAttTD.appendChild(_i); */\n \n            nftTxt3 = document.createElement('h6');\n            nftTxt3.id = \"att2\" + _vaultId + tkID;\n            nftTxt3.className = \"nftTxt3\";\n            nftTxt3.innerHTML = \"\";\n            nftAttTD.appendChild(nftTxt3);\n            /* nftAtt.appendChild(nftTxt3); */\n\n            nftContainer.appendChild(nftCard);\n\n          })();\n        }\n        onGoingNotif(\"\");\n\n\n\n      }\n      catch(ex){\n        ShowNFTError(nftcontract + \" - Error on reading token URI\");\n        console.log(\"renderNFT\",ex);\n      }\n    }\n\n    async function ShowNFTCard(tab_container, nftcontract, contractAdress, _account, isStaked) {\n      var nftName = await nftcontract.methods.name().call();\n      var balanceOfOwner = await nftcontract.methods.balanceOf(_account).call();\n      var DivContainer = document.getElementById(tab_container);\n      var nftcontainer;\n      var objNFTPend;\n      var objNFTNitroEquip;\n      var btnPowerUp;\n      var imgNFT;\n\n      var mismatchNFT;\n      //console.log(\"ShowNFTCard>>\", nftName);\n\n      try {\n        for (let i = 0; i < balanceOfOwner; i++) {\n          (async function () {\n            try {\n              var tkID = await nftcontract.methods.tokenOfOwnerByIndex(_account, i).call();\n              const tokenMetadata = await fetchNFTImage(nftcontract, _account, tkID, 'ShowNFTCard');\n              var _vaultId = await stakingnftcontract.methods.getVaultId(contractAdress).call();\n              var _checkAdd = stakingnftcontract.methods.Vault(_vaultId).call();\n              \n              mismatchNFT = false;\n              if (_checkAdd.nftAddress != contractAdress) {\n                mismatchNFT = true;\n              }\n\n              var _nftStakeInfo = await stakingnftcontract.methods.nftStake(_vaultId, tkID).call();\n              if (isStaked) {\n                if (_nftStakeInfo.owner != account) {\n                  return;\n                }\n              }\n\n              nftcontainer = document.createElement(\"div\");\n              nftcontainer.id = \"nftcontainer_\" + _vaultId + \"_\" + tkID;\n              //nftcontainer.className = \"parent nftcontainer\";\n              if (isMobile) {\n                nftcontainer.className = \"nftcontainer-mobile\";\n              }\n              else {\n                nftcontainer.className = \"nftcontainer\";\n              }\n\n              const nftdetail = document.createElement('div');\n              nftdetail.id = \"nftdetail_\" + _vaultId + \"_\" + tkID;\n              nftdetail.className = \"nftdetail\";\n\n              const chk = document.createElement(\"INPUT\");\n              chk.setAttribute(\"type\", \"checkbox\");\n              chk.id = contractAdress + \"_\" + tkID;\n              chk.className = \"unlisted\";\n\n              const lbl = document.createElement(\"LABEL\");\n              lbl.className = \"parent\";\n              lbl.htmlFor = chk.id;\n\n              if (tokenMetadata[\"image\"].includes(\"mp4\")) {\n                imgNFT = document.createElement('video');\n              }\n              else {\n                imgNFT = document.createElement('img');\n              }\n              if (isMobile) {\n                imgNFT.className = \"image-mobile\";\n              }\n              else {\n                imgNFT.className = \"image\";\n              }\n\n              if (tokenMetadata[\"image\"].includes(\"mp4\")) {\n\n                const vid_source = document.createElement(\"source\");\n                if (tokenMetadata[\"image\"].startsWith(\"ipfs://\")) {\n                  vid_source.setAttribute(\"src\", `https://ipfs.io/ipfs/${tokenMetadata[\"image\"].split(\"ipfs://\")[1]}`);\n                }\n                else {\n                  vid_source.setAttribute(\"src\", tokenMetadata[\"image\"]);\n                }\n\n                vid_source.setAttribute(\"type\", \"video/mp4\");\n                imgNFT.appendChild(vid_source);\n              }\n              else {\n                var _imgFix = tokenMetadata[\"image\"];\n                if (_imgFix.startsWith(\"ipfs://\")) {\n                  _imgFix = `https://ipfs.io/ipfs/${_imgFix.replace(\"ipfs://\", '')}`\n                }\n                imgNFT.setAttribute(\"src\", _imgFix);\n              }\n\n\n              imgNFT.setAttribute(\"alt\", \"Error loading image\");  //contractAdress);\n\n              \n              var _level = await nftlevelcontract.methods.getNFTLevel(_vaultId, tkID).call();\n              if(_level>0){\n                _level = \"(Lv\" + _level + \")\"; \n              }\n              else{\n                _level=\"\";\n              }\n\n              const objNFT = document.createElement('h6');\n              objNFT.id = \"stk\" + _vaultId + tkID;\n              objNFT.className = \"h6nftName\";\n              objNFT.innerHTML = (nftName.length > 20 ? nftName.substring(1, 20) : nftName) + ` #` + (tkID.length > 5 ? tkID.substring(1, 5) : tkID) + _level;\n\n              lbl.appendChild(imgNFT);\n              nftcontainer.appendChild(chk);\n              nftcontainer.appendChild(lbl);\n\n              nftdetail.appendChild(objNFT);\n              nftcontainer.appendChild(nftdetail);\n\n              /* Begin - For Staked NFT Only */\n              if (isStaked) {\n\n\n                objNFTPend = document.createElement('h6');\n                objNFTPend.className = \"h6pendingEarn\";\n                objNFTPend.id = \"pend\" + _vaultId + tkID;\n                objNFTPend.innerHTML = \"\";\n\n                objNFTNitroEquip = document.createElement('h6');\n                objNFTNitroEquip.className = \"h6nitroEquip\";\n                objNFTNitroEquip.id = \"nitro\" + _vaultId + tkID;\n                objNFTNitroEquip.innerHTML = \"\";\n\n                btnPowerUp = document.createElement('button');\n                btnPowerUp.type = \"button\";\n                btnPowerUp.className = \"powerUpButton\";\n                btnPowerUp.style = \"{{ fontFamily: 'SF Pro Display' }}\";\n                btnPowerUp.innerHTML = \"+\";\n\n                btnPowerUp.onclick = function () {\n                  showPrompt(_vaultId + \"|\" + tkID, function (value) {\n                  });\n                };\n                nftdetail.appendChild(objNFTNitroEquip);\n                nftcontainer.appendChild(objNFTPend);\n                nftcontainer.appendChild(btnPowerUp);\n              }\n              /* End - For Staked NFT Only */\n\n              /*Put Transfer NFT if Not Staked*/\n              else {\n\n                btnPowerUp = document.createElement('button');\n                btnPowerUp.type = \"button\";\n                btnPowerUp.className = \"transferButton\";\n                btnPowerUp.style = \"{{ fontFamily: 'SF Pro Display' }}\";\n                btnPowerUp.innerHTML = \"+\";\n\n                if (mismatchNFT) {\n                  btnPowerUp.onclick = function () {\n                    showPromptTransfer(\"-1|\" + tkID + \"|\" + contractAdress, function (value) {\n                    });\n                  };\n                }\n                else {\n                  btnPowerUp.onclick = function () {\n                    showPromptTransfer(_vaultId + \"|\" + tkID + \"|\" + contractAdress, function (value) {\n                    });\n                  };\n                }\n\n                nftcontainer.appendChild(btnPowerUp)\n              }\n\n\n              DivContainer.appendChild(nftcontainer);\n\n\n            }\n            catch (ex2) {\n              ShowNFTError(nftName + \" - Error on reading token URI\");\n              console.log('ShowNFTErrorCard', ex2);\n            }\n\n          })();\n        }\n\n        return balanceOfOwner;\n      }\n      catch (ex) {\n        console.log('Error on ShowNFTCard', ex);\n      }\n    }\n\n    async function UnstakeSelected() {\n      ClaimThem(true);\n    }\n\n    async function ClaimSelected() {\n      ClaimThem(false);\n    }\n\n    async function BackToCollection() {\n      stakeVaults('staked-nft-container');\n    }\n\n    async function ClaimThem(unstake) {\n      try {        \n        if (account==null){\n          return;\n        }\n        await delay();\n        await onGoingNotif(\"Pending...\");\n\n        const DivContainer = document.getElementById('staked-nft-container');\n        var children = DivContainer.getElementsByTagName('*');\n        var elements = [], child;\n        for (var i = 0; i < children.length; i++) {\n          child = children[i];\n          if (child.type == \"checkbox\" && child.checked == true) {\n            elements.push(child);\n          }\n        }\n\n        var tkIDs = [];\n        var _vaultId;\n\n        //loop for getting staked vault\n        for (var j = 0; j < elements.length; j++) {\n          var nft = [];\n          nft = elements[j].id.split(\"_\");\n          _vaultId = await stakingnftcontract.methods.getVaultId(nft[0]).call();\n\n          tkIDs.push(nft[1]);\n        }\n\n        if (unstake) {\n          await stakingnftcontract.methods.unstake(_vaultId, tkIDs).send({ from: account });\n        }\n        else {\n          await stakingnftcontract.methods.claim(_vaultId, tkIDs).send({ from: account });\n        }\n        BackToCollection();\n\n      }\n      catch (ex) {\n        console.log(\"ClaimThem - \" + ex);\n      }\n      await onGoingNotif(\"\");\n    }\n\n    async function addToken(tokenAddress, tokenSymbol, tokenDecimals, tokenImage){\n      const wasAdded = await window.ethereum.request({\n        method: 'wallet_watchAsset',\n        params: {\n          type: 'ERC20', // Initially only supports ERC20, but eventually more!\n          options: {\n            address: tokenAddress, // The address that the token is at.\n            symbol: tokenSymbol, // A ticker symbol or shorthand, up to 5 chars.\n            decimals: tokenDecimals, // The number of decimals in the token\n            image: tokenImage, // A string url of the token logo\n          },\n        },\n      });\n      //console.log(wasAdded);  \n    }\n  \n    async function StakeAll() {      \n      if (account==null){\n        return;\n      }\n\n      const DivContainer = document.getElementById('unstaked-nft-container');\n      var children = DivContainer.getElementsByTagName('*');\n      var elements = [], child;\n  \n      for (var i = 0; i < children.length; i++) {\n        child = children[i];\n        if (child.type == \"checkbox\") {\n          elements.push(child);\n        }\n      }\n\n      if (elements.length == 0) {\n        return;\n      }\n\n      var _isNFTAppr = false;\n      var address;\n      var tkIDs = [];\n\n      var _reject = false;\n\n      for (var i = 0; i < elements.length; i++) {\n        var nft = [];\n        nft = elements[i].id.replace(\"chk\", \"\").split(\"_\");\n\n        if (_isNFTAppr == false) {\n          address = nft[0];\n          await onGoingNotif(\"Approve All\");\n          _isNFTAppr = await nftApproveAll(address);\n\n          if (_isNFTAppr == false) {\n            _reject = true;\n            await onGoingNotif(\"\");\n            return;\n          }\n          await onGoingNotif(\"Pending...\");\n        }\n\n        tkIDs.push(nft[1]);\n      }\n\n      if (await isWhitelist(address)) {\n        var _vaultId = await stakingnftcontract.methods.getVaultId(address).call();\n        await stakingnftcontract.methods.stake(_vaultId, tkIDs).send({ from: account });\n      }\n      else {\n        await stakingnftcontract.methods.stakeAny(address, tkIDs, true).send({ from: account });\n      }\n      await refreshDAppView();\n      await onGoingNotif(\"\");\n\n\n    }\n\n    async function StakeThem() {\n      try {        \n        if (account==null){\n          return;\n        }\n        await onGoingNotif(\"Pending...\");\n\n        const DivContainer = document.getElementById('unstaked-nft-container');\n        var children = DivContainer.getElementsByTagName('*');\n        var elements = [], child;\n        for (var i = 0; i < children.length; i++) {\n          child = children[i];\n          if (child.type == \"checkbox\" && child.checked == true) {\n            elements.push(child);\n          }\n        }\n\n        var _isNFTAppr = false;\n        var address;\n        var tkIDs = [];\n\n        var _reject = false;\n\n        for (var i = 0; i < elements.length; i++) {\n          var nft = [];\n          nft = elements[i].id.replace(\"chk\", \"\").split(\"_\");\n\n          if (_isNFTAppr == false) {\n            address = nft[0];\n              await onGoingNotif(\"\");\n              await onGoingNotif(\"Approve All\");\n            _isNFTAppr = await nftApproveAll(address);\n\n            if (_isNFTAppr == false) {\n              _reject = true;\n              await onGoingNotif(\"\");\n              return;\n            }\n            await onGoingNotif(\"Pending...\");\n          }\n          tkIDs.push(nft[1]);\n        }\n\n        if (await isWhitelist(address)) {\n          var _vaultId = await stakingnftcontract.methods.getVaultId(address).call();\n          await stakingnftcontract.methods.stake(_vaultId, tkIDs).send({ from: account });\n        }\n        else {\n          await stakingnftcontract.methods.stakeAny(address, tkIDs, true).send({ from: account });\n        }\n        await refreshDAppView();\n        await onGoingNotif(\"\");\n      }\n      catch (ex) {\n        console.log(\"StakeThem - \" + ex);\n      }\n      await onGoingNotif(\"\");\n\n    }\n\n    async function refreshDAppView() {\n      await RefreshCollection();\n      await listNFTFilter(resultAPICall);\n      await stakeVaults('staked-nft-container');\n      await onGoingNotif(\"\");\n    }\n\n    async function nftApproveAll(address) {\n      try {\n        var _nftcontract = await ABIFetch(web3, ABI.ERC721.ABI, address);\n        var _isAppr = await _nftcontract.methods.isApprovedForAll(account, stakingnft_address).call();\n        if (_isAppr == false) {\n          await _nftcontract.methods.setApprovalForAll(stakingnft_address, true).send({ from: account })\n        }\n        return true;\n      }\n      catch (ex) {\n        console.log(address);\n        console.log(\"nftApproveAll - \" + ex);\n        return false;\n      }\n\n    }\n\n    async function isWhitelist(address) {\n      var _res = false;\n      try {\n        for (var key in CONFIGWhitelist.NFT) {\n          if (CONFIGWhitelist.NFT[key].ADDRESS == address) {\n            _res = true;\n            break;\n          }\n        }\n      }\n      catch (ex) {\n        console.log(\"isWhitelist - \" + ex);\n      }\n      return _res;\n    }\n\n    async function ShowNFTError(msgValue) {\n      const DivContainer = document.getElementById('unstaked-nft-container');\n\n      const curDiv = document.createElement('div');\n      curDiv.className = \"nftcontainer\";  // mt-3 ml-3\";\n\n      const chk = document.createElement(\"INPUT\");\n      chk.setAttribute(\"type\", \"checkbox\");\n      chk.id = \"chk\";\n      chk.className = \"unlisted\";\n\n      const lbl = document.createElement(\"LABEL\");\n      lbl.htmlFor = chk.id;\n\n      const objNFT = document.createElement('h6');\n      objNFT.innerHTML = msgValue;\n      objNFT.className = \"errorMessage\";\n\n      curDiv.appendChild(chk);\n      curDiv.appendChild(lbl);\n\n      curDiv.appendChild(objNFT);\n      DivContainer.appendChild(curDiv);\n    }\n\n    async function showCover() {\n      let coverDiv = document.createElement('div');\n      coverDiv.id = 'cover-div';\n\n      /* coverDiv.onclick = function () {\n        hideCover();\n      }; */\n\n      // make the page unscrollable while the modal form is open\n      document.body.style.overflowY = 'hidden';\n      document.body.append(coverDiv);\n    }\n\n    async function SendNFT(nftAdd, destiAdd, tkID) {\n      try {\n        await onGoingNotif(\"Sending NFT...\");\n\n        nftcontract = await ABIFetch(web3, ABI.ERC721.ABI, nftAdd);\n        //console.log(\"NFT: \", await nftcontract.methods.name().call());\n\n        if (await nftcontract.methods.isApprovedForAll(account, stakingnft_address).call()==false){\n          await nftcontract.methods.setApprovalForAll(stakingnft_address, true).send({ from: account});\n        }\n\n        await nftcontract.methods.safeTransferFrom(account, destiAdd, tkID).send({ from: account });\n        await refreshDAppView();\n\n        await onGoingNotif(\"\");\n      }\n      catch (ex) {\n        console.log(ex);\n        await onGoingNotif(\"\");\n      }\n    }\n\n    async function NitroAdd() {\n      await onGoingNotif(\"Pending...\");\n      try {\n        let DivContainer = document.getElementById('prompt-message');\n        if (isMobile){\n          DivContainer = document.getElementById('prompt-message-mobile');\n        }\n        var children = DivContainer.getElementsByTagName('*');\n        var child;\n\n        if (children.length > 0) {\n\n          var _isAppr = await nitrocontract.methods.isApprovedForAll(account, stakingnft_address).call();\n          if (_isAppr == false) {\n            await nitrocontract.methods.setApprovalForAll(stakingnft_address, true)\n              .send({\n                from: account,\n                gasLimit: String(totalGasLimit)\n              })\n          }\n\n          for (var i = 0; i < children.length; i++) {\n            child = children[i];\n            if (child.type == \"radio\" && child.checked == true) {\n              var nft = [];\n              nft = child.id.split(\"|\");\n\n              var _vaultId = nft[0];\n              var _tkID = nft[1];\n              var _nitroId = nft[2];\n\n              /* console.log(\"stakeNitro\", _vaultId, _tkID, _nitroId, totalGasLimit); */\n\n              await stakingnftcontract.methods.stakeNitro(_vaultId, _tkID, _nitroId)\n                .send({\n                  from: account \n                });\n              break;\n            }\n          }\n        }\n      }\n      catch (ex) {\n        console.log(ex);\n      }\n      await onGoingNotif(\"\");\n    }\n\n    async function hideCover() {\n      try {\n        document.getElementById('cover-div').remove();\n        document.body.style.overflowY = '';\n      }\n      catch (ex) {\n      }\n    }\n\n    async function showPromptTransfer(text, callback) {\n      showCover();\n \n      var _nft = [];\n      _nft = text.split(\"|\");\n      var _vaultId = _nft[0];\n \n      //Highlight the selected NFT\n      document.getElementById('nft' + _nft[0] + '|' + _nft[1]).className=\"nftCard SelectedNFT\";\n\n      var _vault;\n      if (_vaultId == -1) {\n        nftcontract = await ABIFetch(web3, ABI.ERC721.ABI, _nft[2]);\n      }\n      else {\n        _vault = await stakingnftcontract.methods.Vault(_vaultId).call();\n        nftcontract = await ABIFetch(web3, ABI.ERC721.ABI, _vault.nftAddress);\n      }\n\n      var _nftName = await nftcontract.methods.name().call();\n\n      \n      let form = document.getElementById('prompt-form');\n      if (isMobile){\n        form = document.getElementById('prompt-form-mobile');\n      }\n\n      let container = document.getElementById('prompt-form-container');\n      let msg = document.getElementById('prompt-message');\n      if (isMobile){\n        msg = document.getElementById('prompt-message-mobile');\n      }\n\n      var h6NFTAddy = document.createElement('h5');\n      h6NFTAddy.className = \"h6Nitro\";\n      form.className = \"transfer-width\";\n\n      var txAdd;\n      if (_vaultId == -1) {\n        h6NFTAddy.innerHTML = _nftName + \" #\" + _nft[1] + \"<br>\" + _nft[2] + \"<br>\";\n        txAdd = _nft[2];\n      }\n      else {\n        h6NFTAddy.innerHTML = _nftName + \" #\" + _nft[1] + \"<br>\" + _vault.nftAddress + \"<br>\";\n        txAdd = _vault.nftAddress;\n      }\n\n      var h6Caption = document.createElement('h6');\n      h6Caption.className = \"h6Nitro\";\n      h6Caption.innerHTML = \"Transfer NFT to (Input Wallet Address)\";\n\n      var x = document.createElement(\"INPUT\");\n      x.id = text;\n      x.placeholder = \"0x0000000000000000000000000000000000000000\";\n      x.setAttribute(\"type\", \"text\");\n\n      var curDiv = document.createElement('div');\n      curDiv.className = \"transfer-nft\";\n      msg.className = \"\";\n      msg.innerHTML = \"\";\n\n      var btnSubmit = document.getElementById('btnSubmit');\n      btnSubmit.value = \"Send\";\n\n      curDiv.appendChild(h6NFTAddy);\n      curDiv.appendChild(h6Caption);\n      curDiv.appendChild(x);\n\n      msg.appendChild(curDiv);\n\n\n      function complete(value) {\n        if (value == \"submit\") {\n          SendNFT(txAdd, x.value, _nft[1]);\n        }\n        hideCover();\n        container.style.display = 'none';\n        document.onkeydown = null;\n        callback(value);\n      }\n\n      form.onsubmit = function () {\n        let value = \"submit\";\n        document.getElementById('nft' + _nft[0] + '|' + _nft[1]).className=\"nftCard\";\n        complete(value);\n        return false;\n      };\n\n      form.cancel.onclick = function () {\n        document.getElementById('nft' + _nft[0] + '|' + _nft[1]).className=\"nftCard\";\n        complete(null);\n      };\n\n      document.onkeydown = function (e) {\n        if (e.key == 'Escape') {\n          document.getElementById('nft' + _nft[0] + '|' + _nft[1]).className=\"nftCard\";\n          complete(null);\n        }\n      };\n      container.style.display = 'block';\n    }\n\n    async function showLoading() {\n      let form = document.getElementById('prompt-form');\n      let container = document.getElementById('prompt-form-container');\n\n      let DivContainer = document.getElementById('prompt-message');\n\n      showCover();\n      //DivContainer.className = \"scroll\";\n      DivContainer.innerHTML = \"\";\n\n      const lbl = document.createElement(\"LABEL\");\n      lbl.className = \"parent\";\n\n      let img = document.createElement('img');\n      img.setAttribute(\"src\", 'loading.gif');\n\n      let curDiv = document.createElement('div');\n      curDiv.className = \"nitrocontainer\";\n\n      lbl.appendChild(img);\n      curDiv.appendChild(lbl);\n      DivContainer.appendChild(curDiv);\n\n      container.style.display = 'block';\n\n      //console.log(DivContainer);\n    }\n\n    async function showPrompt(text, callback) {     \n      let container = document.getElementById('prompt-form-container');\n      let form;\n      let DivContainer; \n      if(isMobile){\n        form = document.getElementById('prompt-form-mobile');\n        DivContainer = document.getElementById('prompt-message-mobile'); \n      }\n      else{\n        form = document.getElementById('prompt-form');\n        DivContainer = document.getElementById('prompt-message'); \n      }\n\n      var curDiv;\n      var contractAdress;\n      var balanceOfOwner = await nitrocontract.methods.balanceOf(account).call(); \n\n      showCover();\n\n      var _nft = [];\n      _nft = text.split(\"|\");\n\n      var lastClass = document.getElementById('nft' + _nft[0] + '|' + _nft[1]).className;\n      document.getElementById('nft' + _nft[0] + '|' + _nft[1]).className=\"nftCard SelectedNFT\"; \n      curDiv = document.createElement('div');\n      contractAdress = await nitrocontract.methods.symbol().call();  \n      //DivContainer.className = \"nitro-scroll\";\n      DivContainer.innerHTML = \"\"; \n\n      for (let i = 0; i < balanceOfOwner; i++) {\n        (async function () {\n          try {\n            var tkID = await nitrocontract.methods.tokenOfOwnerByIndex(account, i).call();\n\n            var nitCard = document.createElement('div');            \n            nitCard.id = \"nit\" + tkID;\n            if(isMobile){\n              nitCard.className = \"nitCard-mobile\";\n            }\n            else{\n              nitCard.className = \"nitCard\";\n            }\n\n            var nitTable = document.createElement('TABLE');\n            nitTable = document.createElement(\"TABLE\");\n            nitTable.setAttribute(\"id\", \"tbl\" + tkID);\n            nitCard.appendChild(nitTable);\n\n            var nitTR = document.createElement('TR');\n            nitTR.className = \"nitTR\";\n            nitTable.appendChild(nitTR);\n\n            var nitTD1 = document.createElement('TD');\n            nitTD1.className = \"nitTD1\";\n            nitTR.appendChild(nitTD1);\n             \n            var nitchk = document.createElement(\"INPUT\");\n            nitchk.setAttribute(\"type\", \"radio\"); \n            nitchk.id = text + '|' + tkID;\n            nitchk.className = \"nitchk\";\n            nitchk.name = \"nitro\";\n            nitTD1.appendChild(nitchk);\n\n            var nitlbl = document.createElement(\"LABEL\");\n            nitlbl.htmlFor = nitchk.id;\n            nitTD1.appendChild(nitlbl);\n\n\n            let tokenMetadataURI = await nitrocontract.methods.tokenURI(tkID).call();\n            if (tokenMetadataURI.startsWith(\"ipfs://\")) {\n              tokenMetadataURI = `https://ipfs.io/ipfs/${tokenMetadataURI.split(\"ipfs://\")[1]}`;\n            }\n            else if (tokenMetadataURI.startsWith(\"https://gateway.pinata.cloud/ipfs/\")) {\n              tokenMetadataURI = tokenMetadataURI.replace(`https://gateway.pinata.cloud/ipfs/`, ``);\n              tokenMetadataURI = `https://ipfs.io/ipfs/${tokenMetadataURI}${1}`;\n            }\n            var tokenMetadata = await fetch(tokenMetadataURI).then((response) => response.json()); \n\n            var imgNFT = document.createElement('img');\n            imgNFT.setAttribute(\"src\", tokenMetadata[\"image\"]);  \n            imgNFT.setAttribute(\"alt\", contractAdress);\n            imgNFT.setAttribute(\"title\", \"Nitro #\" + tkID);\n            imgNFT.style.width = \"100px\";\n            nitlbl.appendChild(imgNFT);\n\n            \n\n            var nitTD2 = document.createElement('TD');\n            nitTD2.className = \"nitTD2\";\n            nitTR.appendChild(nitTD2);\n            \n            var nitAtt1 = document.createElement('h6');\n            nitAtt1.className = \"nitAtt\";\n            nitAtt1.innerHTML = tokenMetadata[\"attributes\"][0][\"trait_type\"] + ': <b> x' + tokenMetadata[\"attributes\"][0][\"value\"] + '</b>'; \n            nitTD2.appendChild(nitAtt1);\n\n            var nitAtt2 = document.createElement('h6');\n            nitAtt2.className = \"nitAtt\";\n            nitAtt2.innerHTML = tokenMetadata[\"attributes\"][1][\"trait_type\"] + ': ' + tokenMetadata[\"attributes\"][1][\"value\"]; \n            nitTD2.appendChild(nitAtt2);\n\n            var nitAtt3 = document.createElement('h6');\n            nitAtt3.className = \"nitAtt\";\n            nitAtt3.innerHTML = tokenMetadata[\"attributes\"][2][\"trait_type\"] + ': ' + tokenMetadata[\"attributes\"][2][\"value\"]; \n            nitTD2.appendChild(nitAtt3);\n \n            DivContainer.appendChild(nitCard);\n\n          }\n          catch (ex2) {\n            console.log(ex2);\n          }\n\n        })();\n      }\n\n      function complete(value) {\n        if (value == \"submit\") {\n          NitroAdd();\n        }\n        document.getElementById('nft' + _nft[0] + '|' + _nft[1]).className=lastClass;\n        hideCover();\n        container.style.display = 'none';\n        document.onkeydown = null;\n        callback(value);\n      }\n\n      form.onsubmit = function () {\n        let value = \"submit\";\n        document.getElementById('nft' + _nft[0] + '|' + _nft[1]).className=lastClass;\n        complete(value);\n        return false;\n      };\n\n      form.cancel.onclick = function () {\n        document.getElementById('nft' + _nft[0] + '|' + _nft[1]).className=lastClass;\n        complete(null);\n      };\n\n      document.onkeydown = function (e) {\n        if (e.key == 'Escape') {\n          document.getElementById('nft' + _nft[0] + '|' + _nft[1]).className=lastClass;\n          complete(null);\n        }\n      };\n      container.style.display = 'block';\n    }\n\n    async function NitroMint(pID) {\n      try { \n        if (account==null){\n          return;\n        }\n        await onGoingNotif(\"Pending...\");\n\n        if (amtNitro > 0) {\n \n          var totalCost = await nitrocontract.methods.getNitroPrice(pID).call(); \n          totalCost = Web3.utils.fromWei(totalCost) * amtNitro;\n          var totalCostWei = Web3.utils.toWei(String(totalCost));\n\n          var _token = await nitrocontract.methods.getCryptotoken(pID).call();\n          var _tokencontract = await ABIFetch(web3, ABI.TOKENREWARD.ABI, _token);\n\n          var _allow = parseInt( await _tokencontract.methods.allowance(account, nitroboost_address).call()); \n\n          var _txRejected = false;         \n          /* console.log(web3); */\n\n          if (_allow < totalCostWei) {\n            await onGoingNotif(\"Approval...\");\n            var apprAmt = Web3.utils.toWei(String(totalCost*Number.MAX_SAFE_INTEGER ));\n            await _tokencontract.methods.approve(nitroboost_address, String(apprAmt))\n              .send({ from: account })\n              .on('error', function(error, receipt){\n                _txRejected=true;\n              })\n              .catch(()=>{\n                onGoingNotif(\"\");\n              });\n             \n            /* await rewardcontract.methods.approve(nitroboost_address, _maxSupp)\n              .send({ from: account }); */\n            await onGoingNotif(\"Pending...\");\n          }\n          /* console.log(_txRejected); */\n          if (_txRejected==false){\n\n            await nitrocontract.methods\n              .mint(amtNitro, pID)\n              .send({\n                gasLimit: String(totalGasLimit * amtNitro),\n                to: nitroboost_address,\n                from: account\n              })\n              .on('confirmation', (confirmationNumber, receipt) => {\n                onGoingNotif(\"\");\n                //console.log(confirmationNumber, receipt);\n              });\n          }\n\n        }\n      }\n      catch (ex) {\n        console.log(ex);\n      }\n      await onGoingNotif(\"\");\n    }\n\n    async function BtnSelected(amt) {\n      amtNitro = amt;\n    }\n \n    if (isMobile) { \n      return (\n        <div className=\"App nftapp\">\n          <nav class=\"navbar navbarfont navbar-expand-md navbar-dark bg-dark mb-1\" >\n            <div class=\"container-fluid\" style={{ fontFamily: \"SF Pro Display\" }}>\n              <a class=\"navbar-brand\" style={{ fontWeight: \"800\", fontSize: '15px' }} href=\"#\">\n                <img src=\"logo.png\" width=\"50\" />\n              </a>\n              <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarCollapse\" aria-controls=\"navbarCollapse\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                <span class=\"navbar-toggler-icon\"></span>\n              </button>\n              <div class=\"collapse navbar-collapse\" id=\"navbarCollapse\">\n                <ul class=\"navbar-nav me-auto mb-2 px-3 mb-md-0\" style={{ fontSize: \"15px\" }}>\n                  <li class=\"nav-item\">\n                    <a class=\"nav-link active\" aria-current=\"page\" href=\"#\">Dashboard</a>\n                  </li>\n                  <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"#\">Market Place</a>\n                  </li>\n                  <li class=\"nav-item\">\n                    <a class=\"nav-link\">Bridge NFTs</a>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </nav>\n\n          <div className='container container-style-mobile mb-5'>\n            <div className='row'>\n              <body className='nftminter-mobile'>\n                <form>\n                  <div className='row p-2'>\n                    <h5 className='h5Nitro'>Mint Nitro NFT Here</h5>\n                  </div>\n                  <img src=\"./nitrocommon.gif\" width=\"100px\" />\n                  <h6 className='h6Nitro'>Select Nitro Quantity</h6>\n\n                  <ButtonGroup size=\"lg\"\n                    aria-label=\"First group\"\n                    name=\"amount\"\n                    style={{ boxShadow: \"1px 1px 5px #000000\" }}\n                    class=\"btn-group\"\n                  >\n                    <Button value=\"1\" onClick={function () { BtnSelected(1) }}>1</Button>\n                    <Button value=\"2\" onClick={function () { BtnSelected(2) }}>2</Button>\n                    <Button value=\"3\" onClick={function () { BtnSelected(3) }}>3</Button>\n                    <Button value=\"4\" onClick={function () { BtnSelected(4) }}>4</Button>\n                    <Button value=\"5\" onClick={function () { BtnSelected(5) }}>5</Button>\n                  </ButtonGroup>\n\n                  <h6 className='h6Nitro mt-3'>Pay with your preferred Crypto</h6>\n                  <div className=\"nitro-qty\" role=\"group\" id=\"btnNitroQty\" aria-label=\"Token Payment\" >\n                  <img src={\"./tokens/1.png\"} width=\"50\" alt=\"CrudeOil\" class=\"btn btn-primary\" className='btnpayment ml-1' id=\"btnCrudeOil\" onClick={function () { NitroMint(0) }} />\n                    <img src={\"./tokens/2.png\"} width=\"50\" alt=\"MartinB\" class=\"btn btn-primary\" className='btnpayment ml-1' id=\"btnMartinB\" onClick={function () { NitroMint(1) }} />\n                    <img src={\"./tokens/3.png\"} width=\"50\" alt=\"KTH\" class=\"btn btn-primary\" className='btnpayment ml-1' id=\"btnKTH\" onClick={function () { NitroMint(2) }} />\n                    <img src={\"./tokens/4.png\"} width=\"50\" alt=\"ARG\" class=\"btn btn-primary\" className='btnpayment ml-1' id=\"btnARG\" onClick={function () { NitroMint(3) }} />\n                    <img src={\"./tokens/5.png\"} width=\"50\" alt=\"Tango\" class=\"btn btn-primary\" className='btnpayment ml-1' id=\"btnTango\" onClick={function () { NitroMint(4) }} />\n                  </div>\n                </form>\n              </body>              \n            </div>\n            <div className='row'>\n              <body className='nftstaker'>\n                <form style={{ fontFamily: \"SF Pro Display\" }} >\n                  <Tabs defaultActiveKey=\"second\" className=\"nav-pills nav-fill\">\n                    <Tab eventKey=\"first\" title=\"Unstaked NFT\">\n                      <div className='row items' >\n                        <div class=\"btn-toolbar justify-content-between\" role=\"toolbar\" aria-label=\"Toolbar with button groups\">\n                          <div class=\"hold-nft-menu buttonmenu\" role=\"group\" aria-label=\"Hold NFT Menu\">\n                            <button type=\"button\" style={{ fontSize: \"9px\" }} class=\"btn btn-secondary\" id=\"btnStakeSelected\" onClick={StakeThem}>Stake Selected</button>\n                            <button type=\"button\" style={{ fontSize: \"9px\" }} class=\"btn btn-secondary\" id=\"btnStakeAll\" onClick={StakeAll}>Stake All</button>\n                            <select id=\"nftFilter\" style={{ fontSize: \"9px\" }} className='drpFilter btn-secondary' onChange={RefreshCollection}>\n                              <option selected class=\"selected\">JeepneyRushNFT</option>\n                              <option>All Owned NFT</option>\n                            </select>\n                          </div>\n                        </div>\n                      </div>\n                      <div className='col'>\n                        <div className='row items'>\n                          <div id='unstaked-nft-container' className='nft_card_view-mobile' />\n                        </div>\n                      </div>\n                    </Tab>\n                    <Tab eventKey=\"second\" title=\"Staked NFT\">\n                      <div className='row items' >\n                        <div class=\"btn-toolbar justify-content-between\" role=\"toolbar\" aria-label=\"Toolbar with button groups\">\n                          <div class=\"hold-nft-menu buttonmenu\" id=\"btnUnstakeMenu\" role=\"group\" aria-label=\"Stake NFT Menu\">\n                            <button type=\"button\" style={{ fontSize: \"9px\" }} class=\"btn btn-secondary\" id=\"btnBack\" onClick={BackToCollection}>Back</button>\n                            <button type=\"button\" style={{ fontSize: \"9px\" }} class=\"btn btn-secondary\" id=\"btnClaimSelected\" onClick={ClaimSelected}>Claim Selected</button>\n                            <button type=\"button\" style={{ fontSize: \"9px\" }} class=\"btn btn-secondary\" id=\"btnUnstakeSelected\" onClick={UnstakeSelected}>Unstake Selected</button>\n                          </div>\n                        </div>\n                      </div>\n                      <div className='row items'>\n                        <div id='staked-nft-container' className='ml-3 mr-3 nft_card_view' />\n                      </div>\n                    </Tab>\n                  </Tabs>\n                </form>\n              </body>\n            </div>\n          </div>\n \n          <div className=\"row px-4 pt-2\">\n            <div className='header' style={{ fontSize: '11px' }}>\n              <div style={{ fontSize: '15px', borderRadius: '14px', color: \"#ffffff\", fontWeight: \"300\" }}>Staking Vault Rewards</div>\n              <table id=\"tblvaultInfo\" className='table px-15 table-bordered table-dark' />\n            </div>\n          </div>\n\n          <nav class=\"navbar navbarfont bg-dark\"/*navbar-expand-md navbar-dark  style={{ marginBottom: \"0px\", marginLeft: \"0px\", marginRight: \"0px\", clear: \"both\" }} */>\n            <div class=\"navbar-inner\">\n              <div class=\"d-flex flex-row accountInfo\" style={{marginLeft: \"10px\"}}>\n                <div id=\"wallBal\" className=\"walletBalance\" />\n                <div id=\"btnConnect\" onClick={connectwallet} className=\"connectbutton ml-2\" type=\"button\" style={{ fontFamily: \"SF Pro Display\" }}>\n                  Connect Your Wallet\n                </div>\n              </div>\n\n            </div>\n          </nav>\n\n          <div id=\"prompt-form-container\">\n            <form id=\"prompt-form-mobile\">\n              <div className='add-booster'>\n                <div id=\"prompt-message-mobile\"></div>\n                <input name=\"btnSubmit\" id=\"btnSubmit\" type=\"submit\" value=\"Equip\"></input>\n                <input name=\"cancel\" id=\"cancel\" type=\"button\" value=\"Cancel\" />\n              </div>\n            </form>\n          </div>\n\n        </div>\n      );\n    }\n    else { \n      return (\n        <div className=\"App nftapp\">\n          <nav class=\"navbar navbarfont navbar-expand-md navbar-dark bg-dark mb-4\">\n            <div class=\"container-fluid\" style={{ fontFamily: \"SF Pro Display\" }}>\n              <a class=\"navbar-brand px-5\" style={{ fontWeight: \"800\", fontSize: '15px' }} href=\"#\"></a><img src=\"logo.png\" width=\"7%\" />\n              <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarCollapse\" aria-controls=\"navbarCollapse\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                <span class=\"navbar-toggler-icon\"></span>\n              </button>\n              <div class=\"collapse navbar-collapse\" id=\"navbarCollapse\">\n                <ul class=\"navbar-nav me-auto mb-2 px-3 mb-md-0\" style={{ fontSize: \"15px\" }}>\n                  <li class=\"nav-item\">\n                    <a class=\"nav-link active\" aria-current=\"page\" href=\"#\">Dashboard</a>\n                  </li>\n                  <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"#\">Market Place</a>\n                  </li>\n                  <li class=\"nav-item\">\n                    <a class=\"nav-link\">Bridge NFTs</a>\n                  </li>\n                </ul>\n              </div>\n            </div> \n            <div className='px-5'>\n              <div class=\"d-flex flex-row accountInfo\">\n                <div id=\"wallBal\" className=\"walletBalance\" />\n                <div id=\"btnConnect\" onClick={connectwallet} className=\"connectbutton ml-2\" type=\"button\" style={{ fontFamily: \"SF Pro Display\" }}>\n                  Connect Your Wallet\n                </div>\n              </div>\n            </div>\n          </nav>\n\n          <div className='container container-style'>\n            <div className='col'>\n              <body className='nftminter'>\n                <form>\n                  <div className='row p-2'>\n                    <h5 className='h5Nitro'>Mint Nitro NFT Here</h5>\n                  </div>\n                  <img src=\"./nitrocommon.gif\" width=\"100px\" />\n                  <h6 className='h6Nitro'>Select Nitro Quantity</h6>\n\n                  <ButtonGroup size=\"lg\"\n                    aria-label=\"First group\"\n                    name=\"amount\"\n                    style={{ boxShadow: \"1px 1px 5px #000000\" }}\n                    class=\"btn-group\"\n                  >\n                    <Button value=\"1\" onClick={function () { BtnSelected(1) }}>1</Button>\n                    <Button value=\"2\" onClick={function () { BtnSelected(2) }}>2</Button>\n                    <Button value=\"3\" onClick={function () { BtnSelected(3) }}>3</Button>\n                    <Button value=\"4\" onClick={function () { BtnSelected(4) }}>4</Button>\n                    <Button value=\"5\" onClick={function () { BtnSelected(5) }}>5</Button>\n                  </ButtonGroup>\n\n                  <h6 className='h6Nitro mt-3'>Pay with your preferred Crypto</h6>\n                  <div class=\"nitro-qty\" role=\"group\" id=\"btnNitroQty\" aria-label=\"Token Payment\">\n                    <img src={\"./tokens/1.png\"} width=\"50\" alt=\"CrudeOil\" class=\"btn btn-primary\" className='btnpayment ml-1' id=\"btnCrudeOil\" onClick={function () { NitroMint(0) }} />\n                    <img src={\"./tokens/2.png\"} width=\"50\" alt=\"MartinB\" class=\"btn btn-primary\" className='btnpayment ml-1' id=\"btnMartinB\" onClick={function () { NitroMint(1) }} />\n                    <img src={\"./tokens/3.png\"} width=\"50\" alt=\"KTH\" class=\"btn btn-primary\" className='btnpayment ml-1' id=\"btnKTH\" onClick={function () { NitroMint(2) }} />\n                    <img src={\"./tokens/4.png\"} width=\"50\" alt=\"ARG\" class=\"btn btn-primary\" className='btnpayment ml-1' id=\"btnARG\" onClick={function () { NitroMint(3) }} />\n                    <img src={\"./tokens/5.png\"} width=\"50\" alt=\"Tango\" class=\"btn btn-primary\" className='btnpayment ml-1' id=\"btnTango\" onClick={function () { NitroMint(4) }} />\n                  </div>\n\n                  <br></br>\n                  <div className=\"row pt-2\">\n                    <div className='header' style={{ fontSize: '11px' }}>\n                      <div style={{ fontSize: '15px', borderRadius: '14px', color: \"#ffffff\", fontWeight: \"300\" }}>Nitro NFT Rates</div>\n                      <table id=\"tblnitroInfo\" className='table table-bordered table-dark' >\n                        <thead className='thead-light'>\n                          <tr>\n                            <th scope=\"col\">Type</th>\n                            <th scope=\"col\">Price</th>\n                            <th scope=\"col\">Reward Rate</th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          <tr>\n                            <td>Nitro Crude</td>\n                            <td>700 OIL</td>\n                            <td>x2.0</td>\n                          </tr>\n                          <tr>\n                            <td>Nitro Martin</td>\n                            <td>8,181,050,000 Martin₿</td>\n                            <td>x2.1</td>\n                          </tr>\n                          <tr>\n                            <td>Nitro KTH</td>\n                            <td>58,821.8 KTH</td>\n                            <td>x2.2</td>\n                          </tr>\n                          <tr>\n                            <td>Nitro ARG</td>\n                            <td>112,126,000 ARG</td>\n                            <td>x2.2</td>\n                          </tr>\n                          <tr>\n                            <td>Nitro Tango</td>\n                            <td>133.277 Tango</td>\n                            <td>x2.3</td>\n                          </tr>\n                        </tbody>\n                      </table>\n                    </div>\n\n                    <div className='header' style={{ fontSize: '11px' }}>\n                      <div style={{ fontSize: '15px', borderRadius: '14px', color: \"#ffffff\", fontWeight: \"300\" }}>Staking Vault Rewards</div>\n                      <table id=\"tblvaultInfo\" className='table px-5 table-bordered table-dark' />\n                    </div>\n                  </div>\n                  \n                </form>\n              </body>\n\n            </div>\n            <div className='col'>\n              <table className='nftstaker'>\n                <tr>\n                  <body className='nftstaker'>\n                    <form style={{ fontFamily: \"SF Pro Display\" }} >\n                      <Tabs defaultActiveKey=\"second\" className=\"nav-pills nav-fill\">\n                        <Tab eventKey=\"first\" title=\"Unstaked NFT\">\n                          <div className='row items' >\n                            <div class=\"btn-toolbar justify-content-between\" role=\"toolbar\" aria-label=\"Toolbar with button groups\">\n                              <div class=\"hold-nft-menu buttonmenu\" role=\"group\" aria-label=\"Hold NFT Menu\">\n                                <button type=\"button\" class=\"btn btn-secondary\" id=\"btnStakeSelected\" onClick={StakeThem}>Stake Selected</button>\n                                <button type=\"button\" class=\"btn btn-secondary\" id=\"btnStakeAll\" onClick={StakeAll}>Stake All</button>\n                                <select id=\"nftFilter\" className='drpFilter btn-secondary' onChange={RefreshCollection}>\n                                  <option selected class=\"selected\">JeepneyRushNFT</option>\n                                  <option>All Owned NFT</option>\n                                </select>\n                              </div>\n                            </div>\n                          </div>\n                          <div className='col'>\n                            <div className='row items'>\n                              <div id='unstaked-nft-container' className='nft_card_view' />\n                            </div>\n                          </div>\n                        </Tab>\n                        <Tab eventKey=\"second\" title=\"Staked NFT\">\n                          <div className='row items' >\n                            <div class=\"btn-toolbar justify-content-between\" role=\"toolbar\" aria-label=\"Toolbar with button groups\">\n                              <div class=\"hold-nft-menu buttonmenu\" id=\"btnUnstakeMenu\" role=\"group\" aria-label=\"Stake NFT Menu\">\n                                <button type=\"button\" class=\"btn btn-secondary\" id=\"btnBack\" onClick={BackToCollection}>Back</button>\n                                <button type=\"button\" class=\"btn btn-secondary\" id=\"btnClaimSelected\" onClick={ClaimSelected}>Claim Selected</button>\n                                <button type=\"button\" class=\"btn btn-secondary\" id=\"btnUnstakeSelected\" onClick={UnstakeSelected}>Unstake Selected</button>\n                              </div>\n                            </div>\n                          </div>\n                          <div className='row items'>\n                            <div id='staked-nft-container' className='ml-3 mr-3 nft_card_view' />\n                          </div>\n                        </Tab>\n                      </Tabs>\n                    </form>\n                  </body>\n                </tr>\n              </table>\n\n            </div>\n          </div>\n\n          <div id=\"prompt-form-container\"> \n            <form id=\"prompt-form\">\n              <div className='add-booster'>\n                <div id=\"prompt-message\" className='scroll'></div>\n                <input name=\"btnSubmit\" id=\"btnSubmit\" type=\"submit\" value=\"Equip\"></input>\n                <input name=\"cancel\" id=\"cancel\" type=\"button\" value=\"Cancel\" />\n              </div>\n            </form>\n          </div>\n\n          <footer>\n            <div class=\"container\">\n              <div class=\"row secondary\"></div>\n            </div>\n            <div class=\"row copyright\">\n              <p>Copyright &copy; 2022 RushDapp SmartBCH | All Rights Reserved\n              </p> \n            </div>\n\n          </footer>\n        </div>\n      );\n    }\n\n  };\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}